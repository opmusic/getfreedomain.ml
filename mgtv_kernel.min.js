/*!
 * @mango/mango-player-kernel v2.2.35-
 *
 * @author genie88
 * Released under the MIT License.
 */
!function(e, t) {
    "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = e || self).mangoPlayerKernel = {})
}(this, function(e) {
    function t(e, t) {
        for (var r = 0; r < t.length; r++) {
            var i = t[r];
            i.enumerable = i.enumerable || !1,
            i.configurable = !0,
            "value"in i && (i.writable = !0),
            Object.defineProperty(e, i.key, i)
        }
    }
    function r(e, r, i) {
        return r && t(e.prototype, r),
        i && t(e, i),
        Object.defineProperty(e, "prototype", {
            writable: !1
        }),
        e
    }
    function i(e, t) {
        e.prototype = Object.create(t.prototype),
        e.prototype.constructor = e,
        n(e, t)
    }
    function n(e, t) {
        return (n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t,
            e
        }
        )(e, t)
    }
    function a(e, t, r, i, n) {
        var a = {};
        return Object.keys(i).forEach(function(e) {
            a[e] = i[e]
        }),
        a.enumerable = !!a.enumerable,
        a.configurable = !!a.configurable,
        ("value"in a || a.initializer) && (a.writable = !0),
        a = r.slice().reverse().reduce(function(r, i) {
            return i(e, t, r) || r
        }, a),
        n && void 0 !== a.initializer && (a.value = a.initializer ? a.initializer.call(n) : void 0,
        a.initializer = void 0),
        void 0 === a.initializer && (Object.defineProperty(e, t, a),
        a = null),
        a
    }
    function o(e) {
        return null == e
    }
    function s(e) {
        return Array.isArray(e)
    }
    function u(e) {
        return "function" == typeof e
    }
    function h(e) {
        return Object(e) === e && "[object Object]" === String(e) && !u(e) && !s(e)
    }
    function d(e) {
        return "number" == typeof e
    }
    function f(e) {
        return "string" == typeof e || e instanceof String
    }
    function c(e) {
        return "boolean" == typeof e
    }
    function l(e) {
        return !!e && ("object" == typeof e || "function" == typeof e) && "function" == typeof e.then
    }
    function p(e) {
        return o(e) || c(e) || f(e) || d(e)
    }
    function m(e) {
        return !!("object" == typeof HTMLElement ? e instanceof HTMLElement : e && "object" == typeof e && null !== e && 1 === e.nodeType && "string" == typeof e.nodeName)
    }
    var g, y, b = (g = function(e) {
        return e
    }
    ,
    void 0 === y && (y = function(e, t, r) {
        e[t] = r
    }
    ),
    function e(t, r, i) {
        if (s(t) || h(t)) {
            for (var n in r = p(r) ? h(t) ? {} : [] : r,
            t)
                y(r, n, e(t[n], r[n], n));
            return r
        }
        return g(t, r, i)
    }
    );
    function w() {
        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
        if (t.length < 2)
            throw new Error("deepAssign accept two and more argument");
        for (var i = t.length - 1; i > -1; i--)
            if (p(t[i]))
                throw new TypeError("deepAssign only accept non primitive type");
        var n = t.shift();
        return t.forEach(function(e) {
            return b(e, n)
        }),
        n
    }
    window.w = w;//siyuan: add gloabl varibale
    function _(e, t) {
        return e.bind ? e.bind(t) : e.apply ? function() {
            for (var r = arguments.length, i = new Array(r), n = 0; n < r; n++)
                i[n] = arguments[n];
            return e.apply(t, i)
        }
        : function() {
            for (var r = arguments.length, i = new Array(r), n = 0; n < r; n++)
                i[n] = arguments[n];
            return e.call.apply(e, [t].concat(i))
        }
    }
    function S(e, t, r) {
        var i = void 0 === r ? {} : r
          , n = i.throwError
          , a = void 0 !== n && n
          , u = i.backup;
        if (f(t) && (t = t.split(".")),
        !s(t))
            throw new TypeError("keys of getDeepProperty must be string or Array<string>");
        for (var h = [], d = e, c = 0, l = t.length; c < l; c++) {
            var p = t[c];
            if (o(d)) {
                if (a)
                    throw new Error("obj" + (h.length > 0 ? "." + h.join(".") : " itself") + " is " + d);
                return u
            }
            d = d[p],
            h.push(p)
        }
        return d
    }
    var E = Object.getOwnPropertyDescriptor;
    function A(e) {
        if (!e || !e.hasOwnProperty)
            return !1;
        for (var t = ["value", "initializer", "get", "set"], r = 0, i = t.length; r < i; r++)
            if (e.hasOwnProperty(t[r]))
                return !0;
        return !1
    }
    function R(e) {
        return !!e && e.hasOwnProperty("value") && c(e.configurable) && c(e.enumerable) && c(e.writable)
    }
    function k(e, t) {
        if (void 0 === t && (t = "You must pass me an array of function"),
        !s(e) || e.length < 1)
            throw new TypeError(t);
        if (1 === e.length) {
            if (!u(e[0]))
                throw new TypeError(t);
            return e[0]
        }
        return e.reduce(function(e, r) {
            if (!u(r) || !u(e))
                throw new TypeError(t);
            return function(t) {
                return _(r, this)(_(e, this)(t))
            }
        })
    }
    var T, L, x = (T = Object.getOwnPropertyNames,
    u(L = Object.getOwnPropertySymbols) ? function(e) {
        return Array.from(T(e).concat(L(e)))
    }
    : T);
    var B = u(Object.getOwnPropertyDescriptors) ? Object.getOwnPropertyDescriptors : function(e) {
        return x(e).reduce(function(t, r) {
            return t[r] = E(e, r),
            t
        }, {})
    }
    ;
    function D(e, t) {
        var r = void 0 === e ? {} : e
          , i = r.get
          , n = r.set
          , a = void 0 === t ? {} : t
          , o = a.preGet
          , h = void 0 !== o && o
          , d = a.preSet
          , f = void 0 === d || d;
        if (!(u(i) || u(n) || s(i) && i.length > 0 || s(n) && n.length > 0))
            throw new TypeError("@accessor need a getter or setter. If you don't need to add setter/getter. You should remove @accessor");
        var l = "@accessor only accept function or array of function as getter/setter";
        return i = s(i) ? k(i, l) : i,
        n = s(n) ? k(n, l) : n,
        function(e, t, r) {
            var a = r || {}
              , o = a.configurable
              , s = void 0 === o || o
              , d = a.enumerable
              , l = void 0 === d || d
              , p = u(i)
              , m = u(n)
              , g = function(e) {
                return p ? _(i, this)(e) : e
            }
              , v = function(e) {
                return m ? _(n, this)(e) : e
            };
            if ((k = r) && (u(k.get) || u(k.set)) && c(k.configurable) && c(k.enumerable) && void 0 === k.writable) {
                var y = r.get
                  , b = r.set
                  , w = u(y)
                  , S = u(b);
                return {
                    get: w || p ? function() {
                        var e = this
                          , t = _(g, this)
                          , r = function() {
                            return w ? _(y, e)() : void 0
                        };
                        return (h ? [t, r] : [r, t]).reduce(function(e, t) {
                            return t(e)
                        }, void 0)
                    }
                    : void 0,
                    set: S || m ? function(e) {
                        var t = this
                          , r = _(v, this)
                          , i = function(e) {
                            return S ? _(b, t)(e) : e
                        };
                        return (f ? [r, i] : [i, r]).reduce(function(e, t) {
                            return t(e)
                        }, e)
                    }
                    : void 0,
                    configurable: s,
                    enumerable: l
                }
            }
            if (function(e) {
                return !!e && u(e.initializer) && c(e.configurable) && c(e.enumerable) && c(e.writable)
            }(r)) {
                var E, A = r.initializer, R = !1;
                return {
                    get: function() {
                        var e = _(g, this);
                        return R ? e(E) : (E = _(A, this)(),
                        R = !0,
                        e(E))
                    },
                    set: function(e) {
                        var t = _(v, this);
                        return E = f ? t(e) : e,
                        R = !0,
                        f || t(E),
                        E
                    },
                    configurable: s,
                    enumerable: l
                }
            }
            var k, T = (r || {}).value;
            return {
                get: function() {
                    return _(g, this)(T)
                },
                set: function(e) {
                    var t = _(v, this);
                    return T = f ? t(e) : e,
                    f || t(T),
                    T
                },
                configurable: s,
                enumerable: l
            }
        }
    }
    var P = Object.defineProperty;
    function M(e, t) {
        var r = void 0 === t ? {} : t
          , i = r.requirement
          , n = r.customArgs
          , a = void 0 !== n && n;
        return function(t) {
            for (var r = void 0 === t ? {} : t, n = r.exclude, h = void 0 === n ? [] : n, d = r.include, f = void 0 === d ? [] : d, c = r.construct, l = void 0 !== c && c, m = r.self, g = void 0 !== m && m, v = arguments.length, y = new Array(v > 1 ? v - 1 : 0), b = 1; b < v; b++)
                y[b - 1] = arguments[b];
            if (!s(h))
                throw new TypeError("options.exclude must be an array");
            if (!s(f))
                throw new TypeError("options.include must be an array");
            return function(t) {
                var r = u(t);
                if (!g && !r)
                    throw new TypeError("@" + e.name + "Class can only be used on class");
                if (g && p(t))
                    throw new TypeError("@" + e.name + "Class must be used on non-primitive type value in 'self' mode");
                var n = g ? t : t.prototype;
                if (o(n))
                    throw new Error("The prototype of the " + t.name + " is empty, please check it");
                var s = B(n);
                x(n).concat(f).forEach(function(t) {
                    var o = s[t];
                    "constructor" === t && !l || g && r && ["name", "length", "prototype"].indexOf(t) > -1 || h.indexOf(t) > -1 || u(i) && !1 === i(n, t, o, {
                        self: g
                    }) || P(n, t, (a ? e.apply(void 0, y) : e)(n, t, o))
                })
            }
        }
    }
    var U, I = M(O, {
        requirement: function(e, t, r) {
            return R(r) && u(r.value)
        }
    });
    function O(e, t, r) {
        if (1 === arguments.length)
            return I()(e);
        var i = r || {}
          , n = i.value
          , a = i.configurable;
        if (!u(n))
            throw new TypeError('@autobind can only be used on functions, not "' + n + '" in ' + typeof n + ' on property "' + t + '"');
        var o, s = e.constructor;
        return {
            configurable: a,
            enumerable: !1,
            get: function() {
                var r = this
                  , i = function() {
                    for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++)
                        t[i] = arguments[i];
                    return n.call.apply(n, [r].concat(t))
                };
                return this === e ? n : this.constructor !== s && Object.getPrototypeOf(this).constructor === s ? n : this.constructor !== s && t in this.constructor.prototype ? function(e, t) {
                    if ("undefined" == typeof WeakMap)
                        throw new Error("Using @autobind on " + t.name + "() requires WeakMap support due to its use of super." + t.name + "()");
                    U || (U = new WeakMap),
                    !1 === U.has(e) && U.set(e, new WeakMap);
                    var r = U.get(e);
                    return !1 === r.has(t) && r.set(t, _(t, e)),
                    r.get(t)
                }(this, n) : (Object.defineProperty(this, t, {
                    configurable: !0,
                    writable: !0,
                    enumerable: !1,
                    value: i
                }),
                i)
            },
            set: (o = t,
            function(e) {
                return Object.defineProperty(this, o, {
                    configurable: !0,
                    writable: !0,
                    enumerable: !0,
                    value: e
                }),
                e
            }
            )
        }
    }
    var C = Object.getOwnPropertyDescriptor
      , F = Object.defineProperty;
    M(function() {
        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
        if (0 === t.length)
            throw new Error("@before accept at least one parameter. If you don't need to preprocess before your function, do not add @before decorators");
        if (t.length > 2 && A(t[2]))
            throw new Error("You may use @before straightly, @before return decorators, you should call it before you set it as decorator.");
        for (var i = t.length - 1; i > -1; i--)
            if (!u(t[i]))
                throw new TypeError("@before only accept function parameter");
        return function(e, r, i) {
            var n = i || {}
              , a = n.value
              , o = n.configurable
              , h = n.enumerable
              , d = n.writable;
            if (!u(a))
                throw new TypeError('@before can only be used on function, please check the property "' + r + '" is a method or not.');
            return {
                value: function() {
                    for (var e = this, r = arguments.length, i = new Array(r), n = 0; n < r; n++)
                        i[n] = arguments[n];
                    var o = t.reduce(function(t, r) {
                        var i = _(r, e).apply(void 0, t);
                        return void 0 === i ? t : s(i) ? i : [i]
                    }, i);
                    return _(a, this).apply(void 0, o)
                },
                configurable: o,
                enumerable: h,
                writable: d
            }
        }
    }, {
        requirement: function(e, t, r) {
            return R(r) && u(r.value)
        },
        customArgs: !0
    }),
    M(function() {
        for (var e = arguments.length, t = new Array(e), r = 0; r < e; r++)
            t[r] = arguments[r];
        if (0 === t.length)
            throw new Error("@after accept at least one parameter. If you don't need to preprocess after your function, do not add @after decorators");
        if (t.length > 2 && A(t[2]))
            throw new Error("You may have used @after straightly. @after return decorators. You should call it before you use it as decorators");
        var i = k(t, "@after only accept function parameter");
        return function(e, t, r) {
            var n = r || {}
              , a = n.value
              , o = n.configurable
              , s = n.enumerable
              , h = n.writable;
            if (!u(a))
                throw new TypeError('@after can only be used on function, please checkout your property "' + t + '" is a method or not.');
            return {
                value: function() {
                    var e = _(a, this).apply(void 0, arguments);
                    return _(i, this)(e)
                },
                configurable: o,
                enumerable: s,
                writable: h
            }
        }
    }, {
        requirement: function(e, t, r) {
            return R(r) && u(r.value)
        },
        customArgs: !0
    }),
    M(function(e, t) {
        var r = void 0 === t ? {} : t
          , i = r.other
          , n = r.backup;
        if (!u(e) && !f(e))
            throw new TypeError("@runnable only accept Function or String");
        return function(t, r, a) {
            var o = a || {}
              , s = o.value
              , h = o.configurable;
            if (!u(s))
                throw new TypeError("@runnable can only be used on method, but not " + s + ' on property "' + r + '".');
            var d = u(e) ? e : function() {
                var t = e.split(".");
                return S(p(i) ? this : i, t)
            }
            ;
            return n = u(n) ? n : function() {}
            ,
            {
                value: function() {
                    return !0 === _(d, this).apply(void 0, arguments) ? _(s, this).apply(void 0, arguments) : _(n, this).apply(void 0, arguments)
                },
                enumerable: !1,
                configurable: h,
                writable: !1
            }
        }
    }, {
        requirement: function(e, t, r) {
            return R(r) && u(r.value)
        },
        customArgs: !0
    }),
    M(function(e, t) {
        var r = (void 0 === t ? {} : t).other;
        if (!u(e) && !l(e) && !f(e))
            throw new TypeError("@waitUntil only accept Function, Promise or String");
        return function(t, i, n) {
            var a = n || {}
              , s = a.value
              , h = a.configurable;
            if (!u(s))
                throw new TypeError("@waituntil can only be used on function, but not " + s + ' on property "' + i + '"');
            var d = !1
              , f = []
              , c = l(e) ? function() {
                return e
            }
            : u(e) ? e : function() {
                var t = e.split(".")
                  , i = t.slice(-1)
                  , n = p(r) ? this : r;
                if (!d) {
                    var a = S(n, t.slice(0, -1));
                    if (o(a))
                        return a;
                    var s = C(a, i)
                      , u = function(e) {
                        if (!0 === e)
                            for (; f.length > 0; )
                                f[0](),
                                f.shift();
                        return e
                    }
                      , h = A(s) ? D({
                        set: u
                    })(a, i, s) : D({
                        set: u
                    })(a, i, {
                        value: void 0,
                        configurable: !0,
                        enumerable: !0,
                        writable: !0
                    });
                    F(a, i, h),
                    d = !0
                }
                return S(n, t)
            }
            ;
            return {
                value: function() {
                    for (var e = this, t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                        r[i] = arguments[i];
                    var n = _(s, this)
                      , a = _(c, this).apply(void 0, r);
                    return l(a) ? Promise.resolve(a).then(function() {
                        return _(s, e).apply(void 0, r)
                    }) : !0 === a ? _(s, this).apply(void 0, r) : new Promise(function(e) {
                        f.push(function() {
                            n.apply(void 0, r),
                            e()
                        })
                    }
                    )
                },
                enumerable: !1,
                configurable: h,
                writable: !1
            }
        }
    }, {
        requirement: function(e, t, r) {
            return R(r) && u(r.value)
        },
        customArgs: !0
    });
    var N = "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
    function z() {
        throw new Error("setTimeout has not been defined")
    }
    function j() {
        throw new Error("clearTimeout has not been defined")
    }
    var G = z
      , V = j;
    function H(e) {
        if (G === setTimeout)
            return setTimeout(e, 0);
        if ((G === z || !G) && setTimeout)
            return G = setTimeout,
            setTimeout(e, 0);
        try {
            return G(e, 0)
        } catch (t) {
            try {
                return G.call(null, e, 0)
            } catch (t) {
                return G.call(this, e, 0)
            }
        }
    }
    "function" == typeof N.setTimeout && (G = setTimeout),
    "function" == typeof N.clearTimeout && (V = clearTimeout);
    var q, K = [], W = !1, Y = -1;
    function X() {
        W && q && (W = !1,
        q.length ? K = q.concat(K) : Y = -1,
        K.length && $())
    }
    function $() {
        if (!W) {
            var e = H(X);
            W = !0;
            for (var t = K.length; t; ) {
                for (q = K,
                K = []; ++Y < t; )
                    q && q[Y].run();
                Y = -1,
                t = K.length
            }
            q = null,
            W = !1,
            function(e) {
                if (V === clearTimeout)
                    return clearTimeout(e);
                if ((V === j || !V) && clearTimeout)
                    return V = clearTimeout,
                    clearTimeout(e);
                try {
                    V(e)
                } catch (t) {
                    try {
                        return V.call(null, e)
                    } catch (t) {
                        return V.call(this, e)
                    }
                }
            }(e)
        }
    }
    function Z(e, t) {
        this.fun = e,
        this.array = t
    }
    Z.prototype.run = function() {
        this.fun.apply(null, this.array)
    }
    ;
    var Q = N.performance || {}
      , J = (Q.now || Q.mozNow || Q.msNow || Q.oNow || Q.webkitNow,
    "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : {});
    function ee(e) {
        return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
    }
    function te(e, t) {
        return e(t = {
            exports: {}
        }, t.exports),
        t.exports
    }
    var re = te(function(e, t) {
        var r;
        e.exports = (r = "undefined" != typeof window && window.Math === Math ? window : "undefined" != typeof self && self.Math === Math ? self : Function("return this")(),
        "number" == typeof __g && (__g = r),
        r)
    })
      , ie = "undefined" != typeof window && window.document || {}
      , ne = function(e) {
        if ("string" != typeof e)
            throw new Error("trim need a string as parameter");
        for (var t = e.length, r = 0, i = t - 1, n = /(\u3000|\s|\t|\u00A0)/; r < t && n.test(e.charAt(r)); )
            ++r;
        for (; i >= 0 && n.test(e.charAt(i)); )
            --i;
        return e.substring(r, i + 1)
    }
      , ae = function(e) {
        for (var t, r, i, n = e ? e.split("; ") : [], a = {}, o = -1, s = n.length; ++o < s; )
            ~(t = (e = ne(n[o])).indexOf("=")) && (r = e.substring(0, t),
            i = e.substring(t + 1),
            a[r] = i);
        return a
    }
      , oe = function(e, t, r) {
        if (r = r || {},
        void 0 !== t) {
            if (r = function(e) {
                var t = {};
                for (var r in e)
                    e.hasOwnProperty(r) && (t[r] = e[r]);
                return t
            }(r),
            null === t && (t = "",
            r.expires = -1),
            "number" == typeof r.expires) {
                var i = r.expires
                  , n = r.expires = new Date;
                n.setTime(n.getTime() + 864e5 * i)
            }
            var a = function(e) {
                try {
                    return r.raw ? e : encodeURIComponent(e)
                } catch (e) {}
                return e
            };
            return ie.cookie = [a(e), "=", a(t), r.expires ? "; expires=" + r.expires.toUTCString() : "", r.path ? "; path=" + r.path : "", r.domain ? "; domain=" + r.domain : "", r.secure ? "; secure" : ""].join(""),
            t
        }
        var o;
        return o = ae(ie.cookie)[e],
        r.raw ? o : o && decodeURIComponent(o) || null
    };
    oe.set = function(e, t, r) {
        return oe(e, t, r)
    }
    ,
    oe.get = function(e) {
        return oe(e)
    }
    ,
    oe.remove = function(e) {
        return oe(e, null)
    }
    ,
    oe.keys = function() {
        return Object.keys(ae(ie.cookie))
    }
    ;
    var se = function() {
        var e = self.navigator.userAgent.toLowerCase()
          , t = /(firefox)\/([\w.]+)/.exec(e) || /(edg)\/([\w.]+)/.exec(e) || /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []
          , r = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || []
          , i = {
            browser: t[5] || t[3] || t[1] || "",
            version: t[2] || t[4] || "0",
            majorVersion: t[4] || t[2] || "0",
            platform: r[0] || ""
        }
          , n = {};
        if (i.browser) {
            n[i.browser] = !0;
            var a = i.majorVersion.split(".");
            n.version = {
                major: parseInt(i.majorVersion, 10),
                string: i.version
            },
            a.length > 1 && (n.version.minor = parseInt(a[1], 10)),
            a.length > 2 && (n.version.build = parseInt(a[2], 10))
        }
        return i.platform && (n[i.platform] = !0),
        (n.chrome || n.opr || n.safari) && (n.webkit = !0),
        (n.rv || n.iemobile) && (n.rv && delete n.rv,
        i.browser = "msie",
        n.msie = !0),
        (n.edge || n.edg) && (delete n.edge,
        i.browser = "msedge",
        n.msedge = !0),
        n.opr && (i.browser = "opera",
        n.opera = !0),
        n.safari && n.android && (i.browser = "android",
        n.android = !0),
        n.name = i.browser,
        n.platform = i.platform,
        n
    }()
      , ue = void 0 !== re && "[object Object]" !== Object.prototype.toString.call(re);
    ue && (re.requestAnimationFrame || re.mozRequestAnimationFrame || re.webkitRequestAnimationFrame || re.msRequestAnimationFrame || re.oRequestAnimationFrame),
    ue && (re.cancelAnimationFrame || re.mozCancelAnimationFrame || re.webkitCancelAnimationFrame || re.webkitCancelRequestAnimationFrame || re.msCancelAnimationFrame || re.oCancelAnimationFrame);
    var he = re.setImmediate || function(e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1)
            for (var r = 1; r < arguments.length; r++)
                t[r - 1] = arguments[r];
        K.push(new Z(e,t)),
        1 !== K.length || W || H($)
    }
    ;
    function de(e, t, r) {
        return oe.set(e, t, r)
    }
    var fe = function(e, t) {
        if (!e)
            throw new Error("get(o, k): object not valid.");
        if (~t.indexOf("."))
            for (var r = t.split(".").filter(Boolean), i = -1, n = r.length - 1; ++i < n; )
                e = e && e[r[i]],
                t = r[i + 1];
        return [e, e && e[t]]
    };
    function ce(e, t, r) {
        var i;
        return h(e) && (i = fe(e, t)[1]),
        void 0 === i ? r : i
    }
    function le(e) {
        var t = document.createElement("a");
        return t.href = e,
        t
    }
    var pe, me, ge, ve = {
        getUserAgent: function() {
            return navigator.userAgent
        },
        getPlatform: function() {
            return navigator.platform
        },
        isIos: function() {
            return /iPhone|iPad|iPod/.test(ve.getPlatform())
        },
        isAndroid: function() {
            return /Android/.test(ve.getUserAgent())
        },
        isBlackBerry: function() {
            return /BlackBerry/.test(ve.getPlatform())
        },
        isMac: function() {
            return /Mac/.test(ve.getPlatform())
        },
        isWindows: function() {
            return /Win/.test(ve.getPlatform())
        },
        isLinux: function() {
            return /Linux/.test(ve.getPlatform()) && !ve.isAndroid()
        },
        get: function() {
            return ve.isIos() ? "iOS" : ve.isAndroid() ? "Android" : ve.isBlackBerry() ? "BlackBerry" : ve.isMac() ? "Mac" : ve.isWindows() ? "Windows" : ve.isLinux() ? "Linux" : "Unknown"
        }
    }, ye = {
        getUserAgent: function() {
            return navigator.userAgent
        },
        get: function() {
            var e = ve.get()
              , t = "Unknown";
            switch (e) {
            case "Android":
                var r = ye.getUserAgent().split("Android ");
                r.length > 1 && (t = r[1].split(";")[0]);
                break;
            case "Windows":
                var i = ye.getUserAgent().split("Windows NT ");
                if (i.length > 1) {
                    var n = i[1];
                    n.startsWith("5.0") ? t = "2000" : n.startsWith("5.1") ? t = "XP" : n.startsWith("5.2") ? t = "Server" : n.startsWith("6.0") ? t = "Vista" : n.startsWith("6.1") ? t = "7" : n.startsWith("6.2") ? t = "8" : n.startsWith("6.3") ? t = "8.1" : n.startsWith("10.0") && (t = "10")
                }
                break;
            case "iOS":
                var a = ye.getUserAgent().split("OS ");
                if (a.length > 1)
                    t = a[1].split(" ")[0].split("_").join(".");
                break;
            case "Mac":
                var o = ye.getUserAgent().split("Mac OS X ");
                if (o.length > 1) {
                    var s = o[1].indexOf(";")
                      , u = o[1].indexOf(")");
                    u > -1 && (u < s || -1 == s) && (s = u),
                    t = o[1].substring(0, s).split("_").join(".")
                }
                break;
            case "BlackBerry":
                var h = ye.getUserAgent().split("BlackBerry9700/");
                h.length > 1 ? t = h[1].split(" ")[0] : (h = ye.getUserAgent().split("Version/")).length > 1 && (t = h[1].split(" ")[0])
            }
            return {
                os: e,
                version: t
            }
        }
    }, be = (ye.get(),
    Date.now || function() {
        return +new Date
    }
    ), we = "function" == typeof WeakMap && (WeakMap.prototype || 0).set ? (pe = new WeakMap,
    function(e, t) {
        var r = pe.get(e);
        return null === t ? void 0 !== r && pe.delete(e) : !r && t ? (pe.set(e, r = {}),
        r) : r
    }
    ) : (me = be(),
    ge = "__$widΦ" + me.toString(36),
    pe = {},
    function(e, t) {
        if (!e || "object" != typeof e)
            throw TypeError("Invalid host object apply with weak data");
        var r;
        return null === t ? e[ge] && (delete pe[e[ge]],
        delete e[ge]) : (r = e[ge] || t && (r = ++me,
        pe[r] = {},
        e[ge] = r)) && pe[r]
    }
    ), _e = {}.hasOwnProperty;
    function Se(e, t) {
        for (var r in e)
            _e.call(e, r) && t(e[r], r)
    }
    var Ee = Date.now || function() {
        return +new Date
    }
      , Ae = Object.defineProperty
      , Re = Ae ? function(e, t, r) {
        return Ae(e, t, {
            writable: !0,
            value: r
        })
    }
    : function(e, t, r) {
        return e[t] = r
    }
      , ke = Object.keys || function(e) {
        var t = [];
        return Se(e, function(e, r) {
            t.push(r)
        }),
        t
    }
      , Te = 2
      , Le = 0
      , xe = 1
      , Be = 2
      , De = /\s+/
      , Pe = Ee() * Math.random() & 65535
      , Me = function(e, t, r) {
        var i = [];
        return i[Le] = e,
        i[xe] = t,
        i[Be] = r,
        i
    };
    function Ue() {}
    var Ie = Ue.prototype;
    function Oe(e, t, r) {
        var i;
        switch (r.length) {
        case 0:
            i = t ? e.call(t) : e();
            break;
        case 1:
            i = e.call(t, r[0]);
            break;
        case 2:
            i = e.call(t, r[0], r[1]);
            break;
        default:
            i = e.apply(t, r)
        }
        return i
    }
    function Ce(e, t, r, i) {
        var n = !0;
        if (t)
            for (var a, o, s, u = -1, h = {
                type: e,
                timeStamp: Ee(),
                data: r
            }; a = t[++u]; ) {
                o = a[Le],
                s = a[xe] || i;
                try {
                    n = a[Be] === Te ? !1 !== Oe(o, s, [h, r]) && n : !1 !== Oe(o, s, r) && n
                } catch (e) {
                    setTimeout(function() {}, 1)
                }
            }
        return n
    }
    Ie.addListener = function(e, t, r, i) {
        var n, a, o = 1;
        if (t && "object" == typeof t && (t = (r = t).handleEvent,
        o = Te),
        !t)
            return this;
        for (n = we(this, 1),
        this._events || Re(this, "_events", n),
        e = e.split(De); a = e.shift(); )
            (!i && n[a] || (n[a] = [])).push(Me(t, r, o));
        return this
    }
    ,
    Ie.on = Ie.addListener,
    Ie.once = function(e, t, r) {
        var i = !1
          , n = this
          , a = function a() {
            n.removeListener(e, a),
            i || (i = !0,
            t.apply(r || n, arguments))
        };
        return a.guid = t.guid || (t.guid = Pe++),
        n.on(e, a)
    }
    ,
    Ie.removeListener = function(e, t, r) {
        var i, n, a, o, s, u;
        if (t && "object" == typeof t && (t = (r = t).handleEvent),
        !(i = we(this)))
            return this;
        if (!(e || t || r))
            return Se(i, function(e, t) {
                delete i[t]
            }),
            we(this, null),
            this;
        for (e = e ? e.split(De) : ke(i); n = e.shift(); )
            if (a = i[n])
                if (t || r) {
                    for (o = a.length; --o >= 0; )
                        u = (s = a[o])[Le],
                        t && u !== t && (void 0 === u.guid || u.guid !== t.guid) || r && s[xe] !== r || a.splice(o, 1);
                    a.length || delete i[n]
                } else
                    delete i[n];
        return function(e) {
            for (var t in e)
                if (_e.call(e, t))
                    return !1;
            return !0
        }(i) && we(this, null),
        this
    }
    ,
    Ie.off = Ie.removeListener,
    Ie.removeAllListeners = function(e) {
        return this.removeListener(e)
    }
    ,
    Ie.emit = function(e) {
        var t, r, i, n, a = !0;
        if (!(t = we(this)))
            return this;
        e = e.split(De);
        for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), u = 1; u < o; u++)
            s[u - 1] = arguments[u];
        for (; r = e.shift(); )
            (i = t.all) && (i = i.slice()),
            (n = t[r]) && (n = n.slice()),
            "all" !== r && (a = Ce(r, n, s, this) && a),
            a = Ce(r, i, [r].concat(s), this) && a;
        return a
    }
    ,
    Ie.listenerCount = function(e) {
        var t, r = we(this);
        return r && (t = r[e]) ? t.length : 0
    }
    ,
    Ue.EventEmitter = Ue;
    var Fe = function(e, t, r) {
        return Object.defineProperty(e, t, {
            writable: !0,
            enumerable: !1,
            configurable: !0,
            value: r
        })
    }
      , Ne = Object.create(null)
      , ze = 0;
    function je(e, t, r) {
        void 0 === r && (r = "__evt_id");
        var i = e[r];
        i || Fe(e, r, i = ++ze);
        var n = i + "_" + t
          , a = Ne[n];
        return a || (a = Ne[n] = []),
        a
    }
    function Ge(e, t, r, i) {
        void 0 === i && (i = !1);
        var n = je(e, t);
        if (r || i) {
            var a, o = -1;
            return n.find(function(e, t) {
                if ((!r || e[0] === r) && (!i || e[2]))
                    return o = t,
                    a = e[1],
                    !0
            }),
            -1 !== o && n.splice(o, 1),
            a
        }
        n.length = 0
    }
    var Ve = function(e) {
        function t() {
            return e.apply(this, arguments) || this
        }
        return i(t, e),
        t.prototype.emit = function(t, r) {
            var i = Object.assign(Object.create(null), {
                type: t,
                data: r,
                target: this
            });
            return e.prototype.emit.call(this, t, i)
        }
        ,
        t
    }(Ue.EventEmitter)
      , He = (ue && document.createElement("div"),
    !1);
    try {
        var qe = Object.defineProperty({}, "passive", {
            get: function() {
                He = !0
            }
        });
        ue && window.addEventListener("test", null, qe)
    } catch (e) {}
    function Ke(e, t, r, i, n) {
        if (void 0 === i && (i = !1),
        void 0 === n && (n = !1),
        void 0 !== n && !c(n) && He && (n = {
            passive: !0
        }),
        i) {
            var a = Ge(e, t + "_once", r);
            a && (r = a)
        }
        e.removeEventListener(t, r, n)
    }
    function We(e, t, r, i, n) {
        if (void 0 === i && (i = !1),
        void 0 === n && (n = !1),
        void 0 !== n && !c(n) && He && (n = {
            passive: !0
        }),
        i) {
            var a = r;
            r = function() {
                for (var o = arguments.length, s = new Array(o), u = 0; u < o; u++)
                    s[u] = arguments[u];
                a.apply(this, s),
                Ke(e, t, r, i, n)
            }
            ,
            function(e, t, r, i, n) {
                void 0 === i && (i = !1),
                u(i) && !n && (n = i,
                i = void 0);
                var a = [r, void 0, i];
                i && !n && (n = function() {
                    Ge(e, t, r, i);
                    for (var n = arguments.length, a = new Array(n), o = 0; o < n; o++)
                        a[o] = arguments[o];
                    r.apply(e, a)
                }
                ),
                n && (a[1] = n),
                je(e, t).push(a)
            }(e, t + "_once", a, r)
        }
        e.addEventListener(t, r, n)
    }
    var Ye = []
      , Xe = []
      , $e = "undefined" != typeof Uint8Array ? Uint8Array : Array
      , Ze = !1;
    function Qe() {
        Ze = !0;
        for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t = 0, r = e.length; t < r; ++t)
            Ye[t] = e[t],
            Xe[e.charCodeAt(t)] = t;
        Xe["-".charCodeAt(0)] = 62,
        Xe["_".charCodeAt(0)] = 63
    }
    function Je(e, t, r) {
        for (var i, n, a = [], o = t; o < r; o += 3)
            i = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2],
            a.push(Ye[(n = i) >> 18 & 63] + Ye[n >> 12 & 63] + Ye[n >> 6 & 63] + Ye[63 & n]);
        return a.join("")
    }
    function et(e) {
        var t;
        Ze || Qe();
        for (var r = e.length, i = r % 3, n = "", a = [], o = 0, s = r - i; o < s; o += 16383)
            a.push(Je(e, o, o + 16383 > s ? s : o + 16383));
        return 1 === i ? (t = e[r - 1],
        n += Ye[t >> 2],
        n += Ye[t << 4 & 63],
        n += "==") : 2 === i && (t = (e[r - 2] << 8) + e[r - 1],
        n += Ye[t >> 10],
        n += Ye[t >> 4 & 63],
        n += Ye[t << 2 & 63],
        n += "="),
        a.push(n),
        a.join("")
    }
    function tt(e, t, r, i, n) {
        var a, o, s = 8 * n - i - 1, u = (1 << s) - 1, h = u >> 1, d = -7, f = r ? n - 1 : 0, c = r ? -1 : 1, l = e[t + f];
        for (f += c,
        a = l & (1 << -d) - 1,
        l >>= -d,
        d += s; d > 0; a = 256 * a + e[t + f],
        f += c,
        d -= 8)
            ;
        for (o = a & (1 << -d) - 1,
        a >>= -d,
        d += i; d > 0; o = 256 * o + e[t + f],
        f += c,
        d -= 8)
            ;
        if (0 === a)
            a = 1 - h;
        else {
            if (a === u)
                return o ? NaN : 1 / 0 * (l ? -1 : 1);
            o += Math.pow(2, i),
            a -= h
        }
        return (l ? -1 : 1) * o * Math.pow(2, a - i)
    }
    function rt(e, t, r, i, n, a) {
        var o, s, u, h = 8 * a - n - 1, d = (1 << h) - 1, f = d >> 1, c = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = i ? 0 : a - 1, p = i ? 1 : -1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
        for (t = Math.abs(t),
        isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0,
        o = d) : (o = Math.floor(Math.log(t) / Math.LN2),
        t * (u = Math.pow(2, -o)) < 1 && (o--,
        u *= 2),
        (t += o + f >= 1 ? c / u : c * Math.pow(2, 1 - f)) * u >= 2 && (o++,
        u /= 2),
        o + f >= d ? (s = 0,
        o = d) : o + f >= 1 ? (s = (t * u - 1) * Math.pow(2, n),
        o += f) : (s = t * Math.pow(2, f - 1) * Math.pow(2, n),
        o = 0)); n >= 8; e[r + l] = 255 & s,
        l += p,
        s /= 256,
        n -= 8)
            ;
        for (o = o << n | s,
        h += n; h > 0; e[r + l] = 255 & o,
        l += p,
        o /= 256,
        h -= 8)
            ;
        e[r + l - p] |= 128 * m
    }
    var it = {}.toString
      , nt = Array.isArray || function(e) {
        return "[object Array]" == it.call(e)
    }
    ;
    function at() {
        return st.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
    }
    function ot(e, t) {
        if (at() < t)
            throw new RangeError("Invalid typed array length");
        return st.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = st.prototype : (null === e && (e = new st(t)),
        e.length = t),
        e
    }
    function st(e, t, r) {
        if (!(st.TYPED_ARRAY_SUPPORT || this instanceof st))
            return new st(e,t,r);
        if ("number" == typeof e) {
            if ("string" == typeof t)
                throw new Error("If encoding is specified then the first argument must be a string");
            return dt(this, e)
        }
        return ut(this, e, t, r)
    }
    function ut(e, t, r, i) {
        if ("number" == typeof t)
            throw new TypeError('"value" argument must not be a number');
        return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, r, i) {
            if (t.byteLength,
            r < 0 || t.byteLength < r)
                throw new RangeError("'offset' is out of bounds");
            if (t.byteLength < r + (i || 0))
                throw new RangeError("'length' is out of bounds");
            t = void 0 === r && void 0 === i ? new Uint8Array(t) : void 0 === i ? new Uint8Array(t,r) : new Uint8Array(t,r,i);
            st.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = st.prototype : e = ft(e, t);
            return e
        }(e, t, r, i) : "string" == typeof t ? function(e, t, r) {
            "string" == typeof r && "" !== r || (r = "utf8");
            if (!st.isEncoding(r))
                throw new TypeError('"encoding" must be a valid string encoding');
            var i = 0 | pt(t, r)
              , n = (e = ot(e, i)).write(t, r);
            n !== i && (e = e.slice(0, n));
            return e
        }(e, t, r) : function(e, t) {
            if (lt(t)) {
                var r = 0 | ct(t.length);
                return 0 === (e = ot(e, r)).length ? e : (t.copy(e, 0, 0, r),
                e)
            }
            if (t) {
                if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length"in t)
                    return "number" != typeof t.length || (i = t.length) != i ? ot(e, 0) : ft(e, t);
                if ("Buffer" === t.type && nt(t.data))
                    return ft(e, t.data)
            }
            var i;
            throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
        }(e, t)
    }
    function ht(e) {
        if ("number" != typeof e)
            throw new TypeError('"size" argument must be a number');
        if (e < 0)
            throw new RangeError('"size" argument must not be negative')
    }
    function dt(e, t) {
        if (ht(t),
        e = ot(e, t < 0 ? 0 : 0 | ct(t)),
        !st.TYPED_ARRAY_SUPPORT)
            for (var r = 0; r < t; ++r)
                e[r] = 0;
        return e
    }
    function ft(e, t) {
        var r = t.length < 0 ? 0 : 0 | ct(t.length);
        e = ot(e, r);
        for (var i = 0; i < r; i += 1)
            e[i] = 255 & t[i];
        return e
    }
    function ct(e) {
        if (e >= at())
            throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + at().toString(16) + " bytes");
        return 0 | e
    }
    function lt(e) {
        return !(null == e || !e._isBuffer)
    }
    function pt(e, t) {
        if (lt(e))
            return e.length;
        if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer))
            return e.byteLength;
        "string" != typeof e && (e = "" + e);
        var r = e.length;
        if (0 === r)
            return 0;
        for (var i = !1; ; )
            switch (t) {
            case "ascii":
            case "latin1":
            case "binary":
                return r;
            case "utf8":
            case "utf-8":
            case void 0:
                return jt(e).length;
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
                return 2 * r;
            case "hex":
                return r >>> 1;
            case "base64":
                return Gt(e).length;
            default:
                if (i)
                    return jt(e).length;
                t = ("" + t).toLowerCase(),
                i = !0
            }
    }
    function mt(e, t, r) {
        var i = e[t];
        e[t] = e[r],
        e[r] = i
    }
    function gt(e, t, r, i, n) {
        if (0 === e.length)
            return -1;
        if ("string" == typeof r ? (i = r,
        r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648),
        r = +r,
        isNaN(r) && (r = n ? 0 : e.length - 1),
        r < 0 && (r = e.length + r),
        r >= e.length) {
            if (n)
                return -1;
            r = e.length - 1
        } else if (r < 0) {
            if (!n)
                return -1;
            r = 0
        }
        if ("string" == typeof t && (t = st.from(t, i)),
        lt(t))
            return 0 === t.length ? -1 : vt(e, t, r, i, n);
        if ("number" == typeof t)
            return t &= 255,
            st.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? n ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : vt(e, [t], r, i, n);
        throw new TypeError("val must be string, number or Buffer")
    }
    function vt(e, t, r, i, n) {
        var a, o = 1, s = e.length, u = t.length;
        if (void 0 !== i && ("ucs2" === (i = String(i).toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
            if (e.length < 2 || t.length < 2)
                return -1;
            o = 2,
            s /= 2,
            u /= 2,
            r /= 2
        }
        function h(e, t) {
            return 1 === o ? e[t] : e.readUInt16BE(t * o)
        }
        if (n) {
            var d = -1;
            for (a = r; a < s; a++)
                if (h(e, a) === h(t, -1 === d ? 0 : a - d)) {
                    if (-1 === d && (d = a),
                    a - d + 1 === u)
                        return d * o
                } else
                    -1 !== d && (a -= a - d),
                    d = -1
        } else
            for (r + u > s && (r = s - u),
            a = r; a >= 0; a--) {
                for (var f = !0, c = 0; c < u; c++)
                    if (h(e, a + c) !== h(t, c)) {
                        f = !1;
                        break
                    }
                if (f)
                    return a
            }
        return -1
    }
    function yt(e, t, r, i) {
        r = Number(r) || 0;
        var n = e.length - r;
        i ? (i = Number(i)) > n && (i = n) : i = n;
        var a = t.length;
        if (a % 2 != 0)
            throw new TypeError("Invalid hex string");
        i > a / 2 && (i = a / 2);
        for (var o = 0; o < i; ++o) {
            var s = parseInt(t.substr(2 * o, 2), 16);
            if (isNaN(s))
                return o;
            e[r + o] = s
        }
        return o
    }
    function bt(e, t, r, i) {
        return Vt(jt(t, e.length - r), e, r, i)
    }
    function wt(e, t, r, i) {
        return Vt(function(e) {
            for (var t = [], r = 0; r < e.length; ++r)
                t.push(255 & e.charCodeAt(r));
            return t
        }(t), e, r, i)
    }
    function _t(e, t, r, i) {
        return wt(e, t, r, i)
    }
    function St(e, t, r, i) {
        return Vt(Gt(t), e, r, i)
    }
    function Et(e, t, r, i) {
        return Vt(function(e, t) {
            for (var r, i, n, a = [], o = 0; o < e.length && !((t -= 2) < 0); ++o)
                r = e.charCodeAt(o),
                i = r >> 8,
                n = r % 256,
                a.push(n),
                a.push(i);
            return a
        }(t, e.length - r), e, r, i)
    }
    function At(e, t, r) {
        return 0 === t && r === e.length ? et(e) : et(e.slice(t, r))
    }
    function Rt(e, t, r) {
        r = Math.min(e.length, r);
        for (var i = [], n = t; n < r; ) {
            var a, o, s, u, h = e[n], d = null, f = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
            if (n + f <= r)
                switch (f) {
                case 1:
                    h < 128 && (d = h);
                    break;
                case 2:
                    128 == (192 & (a = e[n + 1])) && (u = (31 & h) << 6 | 63 & a) > 127 && (d = u);
                    break;
                case 3:
                    a = e[n + 1],
                    o = e[n + 2],
                    128 == (192 & a) && 128 == (192 & o) && (u = (15 & h) << 12 | (63 & a) << 6 | 63 & o) > 2047 && (u < 55296 || u > 57343) && (d = u);
                    break;
                case 4:
                    a = e[n + 1],
                    o = e[n + 2],
                    s = e[n + 3],
                    128 == (192 & a) && 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 18 | (63 & a) << 12 | (63 & o) << 6 | 63 & s) > 65535 && u < 1114112 && (d = u)
                }
            null === d ? (d = 65533,
            f = 1) : d > 65535 && (d -= 65536,
            i.push(d >>> 10 & 1023 | 55296),
            d = 56320 | 1023 & d),
            i.push(d),
            n += f
        }
        return function(e) {
            var t = e.length;
            if (t <= kt)
                return String.fromCharCode.apply(String, e);
            var r = ""
              , i = 0;
            for (; i < t; )
                r += String.fromCharCode.apply(String, e.slice(i, i += kt));
            return r
        }(i)
    }
    st.TYPED_ARRAY_SUPPORT = void 0 === N.TYPED_ARRAY_SUPPORT || N.TYPED_ARRAY_SUPPORT,
    st.poolSize = 8192,
    st._augment = function(e) {
        return e.__proto__ = st.prototype,
        e
    }
    ,
    st.from = function(e, t, r) {
        return ut(null, e, t, r)
    }
    ,
    st.TYPED_ARRAY_SUPPORT && (st.prototype.__proto__ = Uint8Array.prototype,
    st.__proto__ = Uint8Array),
    st.alloc = function(e, t, r) {
        return function(e, t, r, i) {
            return ht(t),
            t <= 0 ? ot(e, t) : void 0 !== r ? "string" == typeof i ? ot(e, t).fill(r, i) : ot(e, t).fill(r) : ot(e, t)
        }(null, e, t, r)
    }
    ,
    st.allocUnsafe = function(e) {
        return dt(null, e)
    }
    ,
    st.allocUnsafeSlow = function(e) {
        return dt(null, e)
    }
    ,
    st.isBuffer = function(e) {
        return null != e && (!!e._isBuffer || Ht(e) || function(e) {
            return "function" == typeof e.readFloatLE && "function" == typeof e.slice && Ht(e.slice(0, 0))
        }(e))
    }
    ,
    st.compare = function(e, t) {
        if (!lt(e) || !lt(t))
            throw new TypeError("Arguments must be Buffers");
        if (e === t)
            return 0;
        for (var r = e.length, i = t.length, n = 0, a = Math.min(r, i); n < a; ++n)
            if (e[n] !== t[n]) {
                r = e[n],
                i = t[n];
                break
            }
        return r < i ? -1 : i < r ? 1 : 0
    }
    ,
    st.isEncoding = function(e) {
        switch (String(e).toLowerCase()) {
        case "hex":
        case "utf8":
        case "utf-8":
        case "ascii":
        case "latin1":
        case "binary":
        case "base64":
        case "ucs2":
        case "ucs-2":
        case "utf16le":
        case "utf-16le":
            return !0;
        default:
            return !1
        }
    }
    ,
    st.concat = function(e, t) {
        if (!nt(e))
            throw new TypeError('"list" argument must be an Array of Buffers');
        if (0 === e.length)
            return st.alloc(0);
        var r;
        if (void 0 === t)
            for (t = 0,
            r = 0; r < e.length; ++r)
                t += e[r].length;
        var i = st.allocUnsafe(t)
          , n = 0;
        for (r = 0; r < e.length; ++r) {
            var a = e[r];
            if (!lt(a))
                throw new TypeError('"list" argument must be an Array of Buffers');
            a.copy(i, n),
            n += a.length
        }
        return i
    }
    ,
    st.byteLength = pt,
    st.prototype._isBuffer = !0,
    st.prototype.swap16 = function() {
        var e = this.length;
        if (e % 2 != 0)
            throw new RangeError("Buffer size must be a multiple of 16-bits");
        for (var t = 0; t < e; t += 2)
            mt(this, t, t + 1);
        return this
    }
    ,
    st.prototype.swap32 = function() {
        var e = this.length;
        if (e % 4 != 0)
            throw new RangeError("Buffer size must be a multiple of 32-bits");
        for (var t = 0; t < e; t += 4)
            mt(this, t, t + 3),
            mt(this, t + 1, t + 2);
        return this
    }
    ,
    st.prototype.swap64 = function() {
        var e = this.length;
        if (e % 8 != 0)
            throw new RangeError("Buffer size must be a multiple of 64-bits");
        for (var t = 0; t < e; t += 8)
            mt(this, t, t + 7),
            mt(this, t + 1, t + 6),
            mt(this, t + 2, t + 5),
            mt(this, t + 3, t + 4);
        return this
    }
    ,
    st.prototype.toString = function() {
        var e = 0 | this.length;
        return 0 === e ? "" : 0 === arguments.length ? Rt(this, 0, e) : function(e, t, r) {
            var i = !1;
            if ((void 0 === t || t < 0) && (t = 0),
            t > this.length)
                return "";
            if ((void 0 === r || r > this.length) && (r = this.length),
            r <= 0)
                return "";
            if ((r >>>= 0) <= (t >>>= 0))
                return "";
            for (e || (e = "utf8"); ; )
                switch (e) {
                case "hex":
                    return xt(this, t, r);
                case "utf8":
                case "utf-8":
                    return Rt(this, t, r);
                case "ascii":
                    return Tt(this, t, r);
                case "latin1":
                case "binary":
                    return Lt(this, t, r);
                case "base64":
                    return At(this, t, r);
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return Bt(this, t, r);
                default:
                    if (i)
                        throw new TypeError("Unknown encoding: " + e);
                    e = (e + "").toLowerCase(),
                    i = !0
                }
        }
        .apply(this, arguments)
    }
    ,
    st.prototype.equals = function(e) {
        if (!lt(e))
            throw new TypeError("Argument must be a Buffer");
        return this === e || 0 === st.compare(this, e)
    }
    ,
    st.prototype.inspect = function() {
        var e = "";
        return this.length > 0 && (e = this.toString("hex", 0, 50).match(/.{2}/g).join(" "),
        this.length > 50 && (e += " ... ")),
        "<Buffer " + e + ">"
    }
    ,
    st.prototype.compare = function(e, t, r, i, n) {
        if (!lt(e))
            throw new TypeError("Argument must be a Buffer");
        if (void 0 === t && (t = 0),
        void 0 === r && (r = e ? e.length : 0),
        void 0 === i && (i = 0),
        void 0 === n && (n = this.length),
        t < 0 || r > e.length || i < 0 || n > this.length)
            throw new RangeError("out of range index");
        if (i >= n && t >= r)
            return 0;
        if (i >= n)
            return -1;
        if (t >= r)
            return 1;
        if (this === e)
            return 0;
        for (var a = (n >>>= 0) - (i >>>= 0), o = (r >>>= 0) - (t >>>= 0), s = Math.min(a, o), u = this.slice(i, n), h = e.slice(t, r), d = 0; d < s; ++d)
            if (u[d] !== h[d]) {
                a = u[d],
                o = h[d];
                break
            }
        return a < o ? -1 : o < a ? 1 : 0
    }
    ,
    st.prototype.includes = function(e, t, r) {
        return -1 !== this.indexOf(e, t, r)
    }
    ,
    st.prototype.indexOf = function(e, t, r) {
        return gt(this, e, t, r, !0)
    }
    ,
    st.prototype.lastIndexOf = function(e, t, r) {
        return gt(this, e, t, r, !1)
    }
    ,
    st.prototype.write = function(e, t, r, i) {
        if (void 0 === t)
            i = "utf8",
            r = this.length,
            t = 0;
        else if (void 0 === r && "string" == typeof t)
            i = t,
            r = this.length,
            t = 0;
        else {
            if (!isFinite(t))
                throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
            t |= 0,
            isFinite(r) ? (r |= 0,
            void 0 === i && (i = "utf8")) : (i = r,
            r = void 0)
        }
        var n = this.length - t;
        if ((void 0 === r || r > n) && (r = n),
        e.length > 0 && (r < 0 || t < 0) || t > this.length)
            throw new RangeError("Attempt to write outside buffer bounds");
        i || (i = "utf8");
        for (var a = !1; ; )
            switch (i) {
            case "hex":
                return yt(this, e, t, r);
            case "utf8":
            case "utf-8":
                return bt(this, e, t, r);
            case "ascii":
                return wt(this, e, t, r);
            case "latin1":
            case "binary":
                return _t(this, e, t, r);
            case "base64":
                return St(this, e, t, r);
            case "ucs2":
            case "ucs-2":
            case "utf16le":
            case "utf-16le":
                return Et(this, e, t, r);
            default:
                if (a)
                    throw new TypeError("Unknown encoding: " + i);
                i = ("" + i).toLowerCase(),
                a = !0
            }
    }
    ,
    st.prototype.toJSON = function() {
        return {
            type: "Buffer",
            data: Array.prototype.slice.call(this._arr || this, 0)
        }
    }
    ;
    var kt = 4096;
    function Tt(e, t, r) {
        var i = "";
        r = Math.min(e.length, r);
        for (var n = t; n < r; ++n)
            i += String.fromCharCode(127 & e[n]);
        return i
    }
    function Lt(e, t, r) {
        var i = "";
        r = Math.min(e.length, r);
        for (var n = t; n < r; ++n)
            i += String.fromCharCode(e[n]);
        return i
    }
    function xt(e, t, r) {
        var i = e.length;
        (!t || t < 0) && (t = 0),
        (!r || r < 0 || r > i) && (r = i);
        for (var n = "", a = t; a < r; ++a)
            n += zt(e[a]);
        return n
    }
    function Bt(e, t, r) {
        for (var i = e.slice(t, r), n = "", a = 0; a < i.length; a += 2)
            n += String.fromCharCode(i[a] + 256 * i[a + 1]);
        return n
    }
    function Dt(e, t, r) {
        if (e % 1 != 0 || e < 0)
            throw new RangeError("offset is not uint");
        if (e + t > r)
            throw new RangeError("Trying to access beyond buffer length")
    }
    function Pt(e, t, r, i, n, a) {
        if (!lt(e))
            throw new TypeError('"buffer" argument must be a Buffer instance');
        if (t > n || t < a)
            throw new RangeError('"value" argument is out of bounds');
        if (r + i > e.length)
            throw new RangeError("Index out of range")
    }
    function Mt(e, t, r, i) {
        t < 0 && (t = 65535 + t + 1);
        for (var n = 0, a = Math.min(e.length - r, 2); n < a; ++n)
            e[r + n] = (t & 255 << 8 * (i ? n : 1 - n)) >>> 8 * (i ? n : 1 - n)
    }
    function Ut(e, t, r, i) {
        t < 0 && (t = 4294967295 + t + 1);
        for (var n = 0, a = Math.min(e.length - r, 4); n < a; ++n)
            e[r + n] = t >>> 8 * (i ? n : 3 - n) & 255
    }
    function It(e, t, r, i, n, a) {
        if (r + i > e.length)
            throw new RangeError("Index out of range");
        if (r < 0)
            throw new RangeError("Index out of range")
    }
    function Ot(e, t, r, i, n) {
        return n || It(e, 0, r, 4),
        rt(e, t, r, i, 23, 4),
        r + 4
    }
    function Ct(e, t, r, i, n) {
        return n || It(e, 0, r, 8),
        rt(e, t, r, i, 52, 8),
        r + 8
    }
    st.prototype.slice = function(e, t) {
        var r, i = this.length;
        if ((e = ~~e) < 0 ? (e += i) < 0 && (e = 0) : e > i && (e = i),
        (t = void 0 === t ? i : ~~t) < 0 ? (t += i) < 0 && (t = 0) : t > i && (t = i),
        t < e && (t = e),
        st.TYPED_ARRAY_SUPPORT)
            (r = this.subarray(e, t)).__proto__ = st.prototype;
        else {
            var n = t - e;
            r = new st(n,void 0);
            for (var a = 0; a < n; ++a)
                r[a] = this[a + e]
        }
        return r
    }
    ,
    st.prototype.readUIntLE = function(e, t, r) {
        e |= 0,
        t |= 0,
        r || Dt(e, t, this.length);
        for (var i = this[e], n = 1, a = 0; ++a < t && (n *= 256); )
            i += this[e + a] * n;
        return i
    }
    ,
    st.prototype.readUIntBE = function(e, t, r) {
        e |= 0,
        t |= 0,
        r || Dt(e, t, this.length);
        for (var i = this[e + --t], n = 1; t > 0 && (n *= 256); )
            i += this[e + --t] * n;
        return i
    }
    ,
    st.prototype.readUInt8 = function(e, t) {
        return t || Dt(e, 1, this.length),
        this[e]
    }
    ,
    st.prototype.readUInt16LE = function(e, t) {
        return t || Dt(e, 2, this.length),
        this[e] | this[e + 1] << 8
    }
    ,
    st.prototype.readUInt16BE = function(e, t) {
        return t || Dt(e, 2, this.length),
        this[e] << 8 | this[e + 1]
    }
    ,
    st.prototype.readUInt32LE = function(e, t) {
        return t || Dt(e, 4, this.length),
        (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
    }
    ,
    st.prototype.readUInt32BE = function(e, t) {
        return t || Dt(e, 4, this.length),
        16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
    }
    ,
    st.prototype.readIntLE = function(e, t, r) {
        e |= 0,
        t |= 0,
        r || Dt(e, t, this.length);
        for (var i = this[e], n = 1, a = 0; ++a < t && (n *= 256); )
            i += this[e + a] * n;
        return i >= (n *= 128) && (i -= Math.pow(2, 8 * t)),
        i
    }
    ,
    st.prototype.readIntBE = function(e, t, r) {
        e |= 0,
        t |= 0,
        r || Dt(e, t, this.length);
        for (var i = t, n = 1, a = this[e + --i]; i > 0 && (n *= 256); )
            a += this[e + --i] * n;
        return a >= (n *= 128) && (a -= Math.pow(2, 8 * t)),
        a
    }
    ,
    st.prototype.readInt8 = function(e, t) {
        return t || Dt(e, 1, this.length),
        128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
    }
    ,
    st.prototype.readInt16LE = function(e, t) {
        t || Dt(e, 2, this.length);
        var r = this[e] | this[e + 1] << 8;
        return 32768 & r ? 4294901760 | r : r
    }
    ,
    st.prototype.readInt16BE = function(e, t) {
        t || Dt(e, 2, this.length);
        var r = this[e + 1] | this[e] << 8;
        return 32768 & r ? 4294901760 | r : r
    }
    ,
    st.prototype.readInt32LE = function(e, t) {
        return t || Dt(e, 4, this.length),
        this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
    }
    ,
    st.prototype.readInt32BE = function(e, t) {
        return t || Dt(e, 4, this.length),
        this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
    }
    ,
    st.prototype.readFloatLE = function(e, t) {
        return t || Dt(e, 4, this.length),
        tt(this, e, !0, 23, 4)
    }
    ,
    st.prototype.readFloatBE = function(e, t) {
        return t || Dt(e, 4, this.length),
        tt(this, e, !1, 23, 4)
    }
    ,
    st.prototype.readDoubleLE = function(e, t) {
        return t || Dt(e, 8, this.length),
        tt(this, e, !0, 52, 8)
    }
    ,
    st.prototype.readDoubleBE = function(e, t) {
        return t || Dt(e, 8, this.length),
        tt(this, e, !1, 52, 8)
    }
    ,
    st.prototype.writeUIntLE = function(e, t, r, i) {
        (e = +e,
        t |= 0,
        r |= 0,
        i) || Pt(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
        var n = 1
          , a = 0;
        for (this[t] = 255 & e; ++a < r && (n *= 256); )
            this[t + a] = e / n & 255;
        return t + r
    }
    ,
    st.prototype.writeUIntBE = function(e, t, r, i) {
        (e = +e,
        t |= 0,
        r |= 0,
        i) || Pt(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
        var n = r - 1
          , a = 1;
        for (this[t + n] = 255 & e; --n >= 0 && (a *= 256); )
            this[t + n] = e / a & 255;
        return t + r
    }
    ,
    st.prototype.writeUInt8 = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 1, 255, 0),
        st.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
        this[t] = 255 & e,
        t + 1
    }
    ,
    st.prototype.writeUInt16LE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 2, 65535, 0),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
        this[t + 1] = e >>> 8) : Mt(this, e, t, !0),
        t + 2
    }
    ,
    st.prototype.writeUInt16BE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 2, 65535, 0),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
        this[t + 1] = 255 & e) : Mt(this, e, t, !1),
        t + 2
    }
    ,
    st.prototype.writeUInt32LE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 4, 4294967295, 0),
        st.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24,
        this[t + 2] = e >>> 16,
        this[t + 1] = e >>> 8,
        this[t] = 255 & e) : Ut(this, e, t, !0),
        t + 4
    }
    ,
    st.prototype.writeUInt32BE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 4, 4294967295, 0),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
        this[t + 1] = e >>> 16,
        this[t + 2] = e >>> 8,
        this[t + 3] = 255 & e) : Ut(this, e, t, !1),
        t + 4
    }
    ,
    st.prototype.writeIntLE = function(e, t, r, i) {
        if (e = +e,
        t |= 0,
        !i) {
            var n = Math.pow(2, 8 * r - 1);
            Pt(this, e, t, r, n - 1, -n)
        }
        var a = 0
          , o = 1
          , s = 0;
        for (this[t] = 255 & e; ++a < r && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
            this[t + a] = (e / o >> 0) - s & 255;
        return t + r
    }
    ,
    st.prototype.writeIntBE = function(e, t, r, i) {
        if (e = +e,
        t |= 0,
        !i) {
            var n = Math.pow(2, 8 * r - 1);
            Pt(this, e, t, r, n - 1, -n)
        }
        var a = r - 1
          , o = 1
          , s = 0;
        for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
            e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
            this[t + a] = (e / o >> 0) - s & 255;
        return t + r
    }
    ,
    st.prototype.writeInt8 = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 1, 127, -128),
        st.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
        e < 0 && (e = 255 + e + 1),
        this[t] = 255 & e,
        t + 1
    }
    ,
    st.prototype.writeInt16LE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 2, 32767, -32768),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
        this[t + 1] = e >>> 8) : Mt(this, e, t, !0),
        t + 2
    }
    ,
    st.prototype.writeInt16BE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 2, 32767, -32768),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
        this[t + 1] = 255 & e) : Mt(this, e, t, !1),
        t + 2
    }
    ,
    st.prototype.writeInt32LE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 4, 2147483647, -2147483648),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
        this[t + 1] = e >>> 8,
        this[t + 2] = e >>> 16,
        this[t + 3] = e >>> 24) : Ut(this, e, t, !0),
        t + 4
    }
    ,
    st.prototype.writeInt32BE = function(e, t, r) {
        return e = +e,
        t |= 0,
        r || Pt(this, e, t, 4, 2147483647, -2147483648),
        e < 0 && (e = 4294967295 + e + 1),
        st.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
        this[t + 1] = e >>> 16,
        this[t + 2] = e >>> 8,
        this[t + 3] = 255 & e) : Ut(this, e, t, !1),
        t + 4
    }
    ,
    st.prototype.writeFloatLE = function(e, t, r) {
        return Ot(this, e, t, !0, r)
    }
    ,
    st.prototype.writeFloatBE = function(e, t, r) {
        return Ot(this, e, t, !1, r)
    }
    ,
    st.prototype.writeDoubleLE = function(e, t, r) {
        return Ct(this, e, t, !0, r)
    }
    ,
    st.prototype.writeDoubleBE = function(e, t, r) {
        return Ct(this, e, t, !1, r)
    }
    ,
    st.prototype.copy = function(e, t, r, i) {
        if (r || (r = 0),
        i || 0 === i || (i = this.length),
        t >= e.length && (t = e.length),
        t || (t = 0),
        i > 0 && i < r && (i = r),
        i === r)
            return 0;
        if (0 === e.length || 0 === this.length)
            return 0;
        if (t < 0)
            throw new RangeError("targetStart out of bounds");
        if (r < 0 || r >= this.length)
            throw new RangeError("sourceStart out of bounds");
        if (i < 0)
            throw new RangeError("sourceEnd out of bounds");
        i > this.length && (i = this.length),
        e.length - t < i - r && (i = e.length - t + r);
        var n, a = i - r;
        if (this === e && r < t && t < i)
            for (n = a - 1; n >= 0; --n)
                e[n + t] = this[n + r];
        else if (a < 1e3 || !st.TYPED_ARRAY_SUPPORT)
            for (n = 0; n < a; ++n)
                e[n + t] = this[n + r];
        else
            Uint8Array.prototype.set.call(e, this.subarray(r, r + a), t);
        return a
    }
    ,
    st.prototype.fill = function(e, t, r, i) {
        if ("string" == typeof e) {
            if ("string" == typeof t ? (i = t,
            t = 0,
            r = this.length) : "string" == typeof r && (i = r,
            r = this.length),
            1 === e.length) {
                var n = e.charCodeAt(0);
                n < 256 && (e = n)
            }
            if (void 0 !== i && "string" != typeof i)
                throw new TypeError("encoding must be a string");
            if ("string" == typeof i && !st.isEncoding(i))
                throw new TypeError("Unknown encoding: " + i)
        } else
            "number" == typeof e && (e &= 255);
        if (t < 0 || this.length < t || this.length < r)
            throw new RangeError("Out of range index");
        if (r <= t)
            return this;
        var a;
        if (t >>>= 0,
        r = void 0 === r ? this.length : r >>> 0,
        e || (e = 0),
        "number" == typeof e)
            for (a = t; a < r; ++a)
                this[a] = e;
        else {
            var o = lt(e) ? e : jt(new st(e,i).toString())
              , s = o.length;
            for (a = 0; a < r - t; ++a)
                this[a + t] = o[a % s]
        }
        return this
    }
    ;
    var Ft, Nt = /[^+\/0-9A-Za-z-_]/g;
    function zt(e) {
        return e < 16 ? "0" + e.toString(16) : e.toString(16)
    }
    function jt(e, t) {
        var r;
        t = t || 1 / 0;
        for (var i = e.length, n = null, a = [], o = 0; o < i; ++o) {
            if ((r = e.charCodeAt(o)) > 55295 && r < 57344) {
                if (!n) {
                    if (r > 56319) {
                        (t -= 3) > -1 && a.push(239, 191, 189);
                        continue
                    }
                    if (o + 1 === i) {
                        (t -= 3) > -1 && a.push(239, 191, 189);
                        continue
                    }
                    n = r;
                    continue
                }
                if (r < 56320) {
                    (t -= 3) > -1 && a.push(239, 191, 189),
                    n = r;
                    continue
                }
                r = 65536 + (n - 55296 << 10 | r - 56320)
            } else
                n && (t -= 3) > -1 && a.push(239, 191, 189);
            if (n = null,
            r < 128) {
                if ((t -= 1) < 0)
                    break;
                a.push(r)
            } else if (r < 2048) {
                if ((t -= 2) < 0)
                    break;
                a.push(r >> 6 | 192, 63 & r | 128)
            } else if (r < 65536) {
                if ((t -= 3) < 0)
                    break;
                a.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
            } else {
                if (!(r < 1114112))
                    throw new Error("Invalid code point");
                if ((t -= 4) < 0)
                    break;
                a.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
            }
        }
        return a
    }
    function Gt(e) {
        return function(e) {
            var t, r, i, n, a, o;
            Ze || Qe();
            var s = e.length;
            if (s % 4 > 0)
                throw new Error("Invalid string. Length must be a multiple of 4");
            a = "=" === e[s - 2] ? 2 : "=" === e[s - 1] ? 1 : 0,
            o = new $e(3 * s / 4 - a),
            i = a > 0 ? s - 4 : s;
            var u = 0;
            for (t = 0,
            r = 0; t < i; t += 4,
            r += 3)
                n = Xe[e.charCodeAt(t)] << 18 | Xe[e.charCodeAt(t + 1)] << 12 | Xe[e.charCodeAt(t + 2)] << 6 | Xe[e.charCodeAt(t + 3)],
                o[u++] = n >> 16 & 255,
                o[u++] = n >> 8 & 255,
                o[u++] = 255 & n;
            return 2 === a ? (n = Xe[e.charCodeAt(t)] << 2 | Xe[e.charCodeAt(t + 1)] >> 4,
            o[u++] = 255 & n) : 1 === a && (n = Xe[e.charCodeAt(t)] << 10 | Xe[e.charCodeAt(t + 1)] << 4 | Xe[e.charCodeAt(t + 2)] >> 2,
            o[u++] = n >> 8 & 255,
            o[u++] = 255 & n),
            o
        }(function(e) {
            if ((e = function(e) {
                return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
            }(e).replace(Nt, "")).length < 2)
                return "";
            for (; e.length % 4 != 0; )
                e += "=";
            return e
        }(e))
    }
    function Vt(e, t, r, i) {
        for (var n = 0; n < i && !(n + r >= t.length || n >= e.length); ++n)
            t[n + r] = e[n];
        return n
    }
    function Ht(e) {
        return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
    }
    !function() {
        var e = window.crypto || window.msCrypto;
        if (!Ft && e && e.getRandomValues)
            try {
                var t = new Uint8Array(16);
                Ft = function() {
                    return e.getRandomValues(t),
                    t
                }
                ,
                Ft()
            } catch (e) {}
        if (!Ft) {
            var r = new Array(16);
            Ft = function() {
                for (var e, t = 0; t < 16; t++)
                    0 == (3 & t) && (e = 4294967296 * Math.random()),
                    r[t] = e >>> ((3 & t) << 3) & 255;
                return r
            }
        }
    }();
    for (var qt = st, Kt = [], Wt = 0; Wt < 256; Wt++)
        Kt[Wt] = (Wt + 256).toString(16).substr(1);
    function Yt(e, t, r) {
        var i = t && r || 0;
        "string" == typeof e && (t = "binary" === e ? new qt(16) : null,
        e = null);
        var n = (e = e || {}).random || (e.rng || Ft)();
        if (n[6] = 15 & n[6] | 64,
        n[8] = 63 & n[8] | 128,
        t)
            for (var a = 0; a < 16; a++)
                t[i + a] = n[a];
        return t || function(e, t) {
            var r = t || 0
              , i = Kt;
            return i[e[r++]] + i[e[r++]] + i[e[r++]] + i[e[r++]] + "-" + i[e[r++]] + i[e[r++]] + "-" + i[e[r++]] + i[e[r++]] + "-" + i[e[r++]] + i[e[r++]] + "-" + i[e[r++]] + i[e[r++]] + i[e[r++]] + i[e[r++]] + i[e[r++]] + i[e[r++]]
        }(n)
    }
    var Xt = re.localStorage
      , $t = !1;
    try {
        Xt.setItem("a", "a"),
        $t = "a" === Xt.getItem("a")
    } catch (e) {}
    var Zt = {
        isSupport: $t,
        get: function(e) {
            try {
                var t = Xt.getItem(e);
                return t = JSON.parse(t)
            } catch (e) {}
        },
        set: function(e, t) {
            try {
                return (s(t) || h(t)) && (t = JSON.stringify(t)),
                Xt.setItem(e, t)
            } catch (e) {}
        },
        remove: function(e) {
            try {
                return Xt.removeItem(e)
            } catch (e) {}
        },
        clear: function() {
            try {
                return Xt.clear()
            } catch (e) {}
        }
    }
      , Qt = (/iPad/i.test(navigator.userAgent),
    te(function(e, t) {
        var r, i, n, a, o;
        r = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,
        i = /^(?=([^\/?#]*))\1([^]*)$/,
        n = /(?:\/|^)\.(?=\/)/g,
        a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
        o = {
            buildAbsoluteURL: function(e, t, r) {
                if (r = r || {},
                e = e.trim(),
                !(t = t.trim())) {
                    if (!r.alwaysNormalize)
                        return e;
                    var n = o.parseURL(e);
                    if (!n)
                        throw new Error("Error trying to parse base URL.");
                    return n.path = o.normalizePath(n.path),
                    o.buildURLFromParts(n)
                }
                var a = o.parseURL(t);
                if (!a)
                    throw new Error("Error trying to parse relative URL.");
                if (a.scheme)
                    return r.alwaysNormalize ? (a.path = o.normalizePath(a.path),
                    o.buildURLFromParts(a)) : t;
                var s = o.parseURL(e);
                if (!s)
                    throw new Error("Error trying to parse base URL.");
                if (!s.netLoc && s.path && "/" !== s.path[0]) {
                    var u = i.exec(s.path);
                    s.netLoc = u[1],
                    s.path = u[2]
                }
                s.netLoc && !s.path && (s.path = "/");
                var h = {
                    scheme: s.scheme,
                    netLoc: a.netLoc,
                    path: null,
                    params: a.params,
                    query: a.query,
                    fragment: a.fragment
                };
                if (!a.netLoc && (h.netLoc = s.netLoc,
                "/" !== a.path[0]))
                    if (a.path) {
                        var d = s.path
                          , f = d.substring(0, d.lastIndexOf("/") + 1) + a.path;
                        h.path = o.normalizePath(f)
                    } else
                        h.path = s.path,
                        a.params || (h.params = s.params,
                        a.query || (h.query = s.query));
                return null === h.path && (h.path = r.alwaysNormalize ? o.normalizePath(a.path) : a.path),
                o.buildURLFromParts(h)
            },
            parseURL: function(e) {
                var t = r.exec(e);
                return t ? {
                    scheme: t[1] || "",
                    netLoc: t[2] || "",
                    path: t[3] || "",
                    params: t[4] || "",
                    query: t[5] || "",
                    fragment: t[6] || ""
                } : null
            },
            normalizePath: function(e) {
                for (e = e.split("").reverse().join("").replace(n, ""); e.length !== (e = e.replace(a, "")).length; )
                    ;
                return e.split("").reverse().join("")
            },
            buildURLFromParts: function(e) {
                return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
            }
        },
        e.exports = o
    }));
    var Jt = window.sessionStorage
      , er = 0;
    !function() {
        try {
            Object.keys(Jt).forEach(function(e, t) {
                -1 !== e.indexOf("vplayer-log-") && Jt.removeItem(e)
            })
        } catch (e) {}
    }();
    var tr = {
        error: 0,
        warn: 1,
        info: 2,
        log: 3,
        debug: 4,
        verbose: 5
    }
      , rr = function() {
        var e = this;
        e.level = 4;
        var t = N.console || 0
          , r = -1 !== window.location.href.indexOf("playerdebug");
        ["log", "info", "error", "warn", "debug", "verbose"].forEach(function(i) {
            var n = tr[i];
            e[i] = function(e, a) {
                a && "object" == typeof a && (a = JSON.stringify(a));
                var o = function(e, t) {
                    if (!f(e))
                        throw new TypeError("Log's method only acccept string as argument, but not " + e + " in " + typeof e);
                    return f(t) ? "[mango-player][" + (e = rr.FORCE_GLOBAL_TAG ? rr.GLOBAL_TAG : e || rr.GLOBAL_TAG) + "] > " + t : "[" + rr.GLOBAL_TAG + "] > " + e
                }(e, a);
                if (n < tr.log && function(e) {
                    var t = "vplayer-log-" + er;
                    he(function() {
                        try {
                            Jt.setItem(t, e)
                        } catch (e) {}
                    }),
                    er++
                }(o),
                !(this.level < n) && r && t) {
                    for (var s = t[i] || t.log, u = arguments.length, h = new Array(u > 2 ? u - 2 : 0), d = 2; d < u; d++)
                        h[d - 2] = arguments[d];
                    s.apply(t, [o].concat(h))
                }
            }
            .bind(e)
        }),
        e.setLevel = function(e) {
            var t = tr[e] || 0;
            this.level = t
        }
        .bind(e)
    };
    rr.GLOBAL_TAG = "mango-player",
    rr.FORCE_GLOBAL_TAG = !1;
    var ir = new rr
      , nr = {}.hasOwnProperty
      , ar = function(e, t) {
        return nr.call(e, t)
    }
      , or = function(e, t, r) {
        return null == t ? e : e + "=" + (r ? function(e) {
            try {
                return encodeURIComponent(e)
            } catch (e) {}
            return e
        }(String(t)) : t)
    };
    var sr, ur, hr = function(e, t) {
        if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function")
    }, dr = window, fr = function() {}, cr = dr.setImmediate || function(e) {
        return setTimeout(e, 1)
    }
    , lr = function(e) {
        return "function" == typeof e
    }, pr = function() {
        function e() {
            hr(this, e),
            this._l = new Image,
            this._r = !1
        }
        return e.prototype.load = function(e, t) {
            var r = this;
            this._r = !0;
            var i = this._l
              , n = function(e, n) {
                i.onload = i.onerror = fr,
                t(e, n),
                r.reset()
            };
            i.onload = function(e) {
                return n(null, e)
            }
            ,
            i.onerror = function(e) {
                return n(e)
            }
            ,
            i.src = e
        }
        ,
        e.prototype.reset = function() {
            this._r = !1
        }
        ,
        e
    }(), mr = [], gr = (dr.$nextRequest || (dr.$nextRequest = new function() {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
          , t = 0
          , r = e.concurrent || 5
          , i = []
          , n = function(e, t) {
            var r = e[0]
              , i = e[1]
              , n = e[2]
              , a = i && function(e, t) {
                if ("object" != typeof e)
                    return e;
                var r, i, n, a = [];
                for (r in t = void 0 === t ? 1 : 0,
                e)
                    if (ar(e, r))
                        if ((i = e[r]) && "object" == typeof i) {
                            if ("number" == typeof i.length)
                                for (n = i.length; n--; )
                                    a.push(or(r, i[n], t))
                        } else
                            a.push(or(r, i, t));
                return a.join("&").replace(/%20/g, "+")
            }(i)
              , o = r + (a ? (~r.indexOf("?") ? "&" : "?") + a : "");
            cr(function() {
                return function() {
                    for (var e, t = -1, r = mr.length; ++t < r; )
                        if (!(r = mr[t])._r)
                            return r;
                    return e = new pr,
                    mr.length < 5 && mr.push(e),
                    e
                }().load(o, function(e, r) {
                    if (lr(n))
                        try {
                            n(e, r)
                        } catch (r) {}
                    t(e)
                })
            })
        };
        return {
            push: function() {
                var e = function(e) {
                    for (var t = e.length, r = Array(t), i = 0; i < t; i++)
                        r[i] = e[i];
                    return r
                }(arguments)
                  , a = e[1];
                2 === e.length && lr(a) && (e[2] = a,
                e[1] = null),
                i.push(e),
                function e() {
                    if (i.length && t < r) {
                        var a = i.shift();
                        ++t,
                        n(a, function() {
                            --t,
                            e()
                        })
                    }
                }()
            }
        }
    }
    ),
    {
        debug: !1,
        withCredentials: !1,
        enableBitrateTest: !1,
        enableWorker: !1,
        maxBufferSize: 6e4,
        manifestLoadingMaxRetry: 0,
        manifestLoadingTimeOut: 11e3,
        levelLoadingTimeOut: 11e3,
        levelLoadingMaxRetry: 0,
        nudgeMaxRetry: 20,
        fragLoadingMaxRetry: 9999,
        fragLoadingTimeout: 11e3
    }), vr = "mango-kernel-dash", yr = window.dashjs.MediaPlayer.events, br = window.dashjs.Protection.events, wr = function(e) {
        var t = (le(e).pathname || "").split("/");
        return t.pop(),
        "persistentSessionId-" + t.pop()
    }, _r = ((ur = function(e) {
        function t(t, r, i) {
            var n;
            if (void 0 === i && (i = {}),
            (n = e.call(this) || this).kernel = {},
            n._speed = 0,
            n._stats = {},
            n._startPosition = -1,
            n._retry = 0,
            !m(t))
                throw new Error("video element passed in " + vr + " must be a HTMLVideoElement, but not " + typeof t);
            if (!h(r))
                throw new Error("config of " + vr + " must be an Object but not " + typeof r);
            n.video = t,
            n.config = r,
            n._startPosition = -1,
            n._retry = 0;
            var a = w({}, gr, i)
              , o = n.kernel = dashjs.MediaPlayer().create();
            return o.initialize(),
            o.setXHRWithCredentialsForType("MPD", a.withCredentials),
            o.setXHRWithCredentialsForType("MediaSegment", a.withCredentials),
            o.updateSettings({
                debug: {
                    logLevel: a.debug ? 5 : 0
                },
                streaming: {
                    scheduleWhilePaused: !0,
                    fastSwitchEnabled: !0,
                    retryIntervals: {
                        MediaSegment: 500
                    },
                    retryAttempts: {
                        MPD: a.manifestLoadingMaxRetry,
                        MediaSegment: a.fragLoadingMaxRetry
                    },
                    bufferToKeep: 70,
                    stableBufferTime: 60,
                    fragmentRequestTimeout: a.fragLoadingTimeout
                }
            }),
            n.bindEvents(),
            n.attachMedia(),
            n
        }
        i(t, e);
        var n = t.prototype;
        return n.bindEvents = function(e) {
            var t = this;
            void 0 === e && (e = !1);
            var r = this.kernel;
            if (r) {
                var i = e ? "off" : "on";
                [yr.BUFFER_EMPTY, yr.BUFFER_LOADED, yr.MANIFEST_LOADED, yr.PLAYBACK_METADATA_LOADED, yr.PLAYBACK_PLAYING, yr.METRIC_CHANGED, yr.METRIC_UPDATED, yr.METRICS_CHANGED, yr.PERIOD_SWITCH_COMPLETED, yr.PERIOD_SWITCH_STARTED, yr.ERROR, br.KEY_SESSION_CREATED, br.LICENSE_REQUEST_COMPLETE].forEach(function(e) {
                    r[i](e, t.dashEventHandler)
                });
                for (var n = 0, a = Object.entries(yr); n < a.length; n++) {
                    var o = a[n]
                      , s = (o[0],
                    o[1]);
                    r[i](s, this.handleAllEvents.bind(this))
                }
            }
        }
        ,
        n.handleAllEvents = function(e) {
            this.emit("dash-" + e.type, e)
        }
        ,
        n.load = function(e, t, r, i) {
            var n, a = this;
            if (void 0 === t && (t = -1),
            i) {
                this.kernel.getProtectionController().setRobustnessLevel("SW_SECURE_CRYPTO");
                var o = (n = wr(this.config.src),
                oe.get(n))
                  , s = i["com.microsoft.playready"] || i["com.widevine.alpha"] || {};
                s.sessionId = o || void 0,
                this.kernel.setProtectionData(i)
            }
            this.kernel.attachSource(this.config.src),
            -1 != t && (this._startPosition = t,
            this.kernel.seek(t)),
            this._eventPoller && clearInterval(this._eventPoller),
            this._eventPoller = setInterval(function() {
                a.eventPoller()
            }, 1e3)
        }
        ,
        n.startLoad = function(e, t) {
            return void 0 === t && (t = -1),
            this.kernel.seek(t)
        }
        ,
        n.stopLoad = function() {}
        ,
        n.attachMedia = function() {
            return this.kernel.attachView(this.video)
        }
        ,
        n.play = function() {
            return this.video.play()
        }
        ,
        n.eventPoller = function() {
            var e = this.kernel.getDashMetrics();
            this.kernel.getDashAdapter();
            e && (this._bufferLevel = e.getCurrentBufferLevel("video"))
        }
        ,
        n.destroy = function() {
            return this.bindEvents(!0),
            this._eventPoller && clearInterval(this._eventPoller),
            this._eventPoller = null,
            this.kernel.reset()
        }
        ,
        n.seek = function(e) {
            this.kernel.seek(e)
        }
        ,
        n.pause = function() {
            return this.video.pause()
        }
        ,
        n.getMetadata = function() {
            return this.metadata
        }
        ,
        n.getSpeed = function() {
            return this._speed
        }
        ,
        n.getFps = function() {
            return this.fps || 0
        }
        ,
        n.getBufferInfo = function() {
            return {
                len: this._bufferLevel
            }
        }
        ,
        n.dashEventHandler = function(e) {
            switch (e.type) {
            case yr.BUFFER_EMPTY:
                this.emit("dashBufferEmpty", e),
                ir.warn(vr, "dashcore buffer is empty.");
                break;
            case yr.ERROR:
                this.dashErrorHandler(e);
                break;
            case yr.MANIFEST_LOADED:
                break;
            case yr.KEY_SESSION_CREATED:
                if (e.data) {
                    var t = e.data;
                    "persistent-license" === t.getSessionType() && de(wr(this.config.src), t.getSessionID(), {
                        expires: 6
                    })
                }
                break;
            case yr.PLAYBACK_METADATA_LOADED:
                -1 != this._startPosition && (this.kernel.seek(this._startPosition),
                this._startPosition = -1);
                break;
            case br.LICENSE_REQUEST_COMPLETE:
                this.emit("dashLicenseRequest", e),
                ir.info(vr, "dashcore fetch drm license." + JSON.stringify(e))
            }
        }
        ,
        n.isFatalError = function(e) {
            var t = e.code;
            return -1 !== [3].indexOf(t)
        }
        ,
        n.dashErrorHandler = function(e) {
            h(e.error) && (this._retry < 2 && !this.isFatalError(e.error) ? (this._retry++,
            de(wr(this.config.src), ""),
            this.emit("dashRecoverStreamError", e)) : this.emit("dashStreamError", e),
            ir.error(vr, "dashcore error ouccurred at event [" + JSON.stringify(e.error || {}).message + "]"))
        }
        ,
        r(t, [{
            key: "stats",
            get: function() {
                return this._stats
            }
        }]),
        t
    }(Ve)).version = "1.0.0",
    a((sr = ur).prototype, "dashEventHandler", [O], Object.getOwnPropertyDescriptor(sr.prototype, "dashEventHandler"), sr.prototype),
    sr), Sr = 100, Er = 101, Ar = 102, Rr = 103, kr = 104, Tr = 105, Lr = 106, xr = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).video = t,
            i.config = r,
            i.tag = "mse-controller",
            i.e = {
                onSourceOpen: i.onSourceOpen.bind(i),
                onSourceEnded: i.onSourceEnded.bind(i),
                onSourceClose: i.onSourceClose.bind(i),
                onSourceBufferError: i.onSourceBufferError.bind(i)
            },
            i.hasVideo = !0,
            i.hasAudio = !0,
            i.removeRangesList = {
                video: [],
                audio: []
            },
            i.removeBucketing = !1,
            i.timer = {
                video: null,
                audio: null
            },
            i.queue = {
                video: [],
                audio: []
            },
            i.sourceBuffer = {
                video: null,
                audio: null
            },
            i.mimeCodec = {
                video: null,
                audio: null
            },
            i.sourceBufferEvent(),
            i.complete = !1,
            i
        }
        i(t, e);
        var r = t.prototype;
        return r.init = function(e) {
            if (this.mediaSource)
                return ir.Error(this.tag, "MediaSource has been attached to an HTMLMediaElement!"),
                void this.emit("error", {
                    errno: kr,
                    errmsg: "MediaSource has been attached to an HTMLMediaElement!"
                });
            e.hasAudio ? this.mimeCodec.audio = 'audio/mp4; codecs="' + e.audioCodec + '"' : this.hasAudio = !1,
            e.hasVideo ? this.mimeCodec.video = 'video/mp4; codecs="' + e.videoCodec + '"' : this.hasVideo = !1;
            var t = this.mediaSource = new window.MediaSource;
            t.addEventListener("sourceopen", this.e.onSourceOpen),
            t.addEventListener("sourceended", this.e.onSourceEnded),
            t.addEventListener("sourceclose", this.e.onSourceClose)
        }
        ,
        r.onSourceOpen = function() {
            ir.verbose(this.tag, "MediaSource onSourceOpen"),
            this.mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen),
            this.hasAudio && this.addSourceBuffer("audio"),
            this.hasVideo && this.addSourceBuffer("video"),
            this.hasQueueList() && this.doUpdate(),
            this.emit("source_open")
        }
        ,
        r.addSourceBuffer = function(e) {
            var t = this;
            this.sourceBuffer[e] = this.mediaSource.addSourceBuffer(this.mimeCodec[e]),
            ir.verbose(this.tag, "add sourcebuffer " + e);
            var r = this.sourceBuffer[e];
            r.addEventListener("error", this.e.onSourceBufferError),
            r.addEventListener("abort", function() {
                return ir.verbose(t.tag, "sourceBuffer: abort")
            }),
            r.addEventListener("updateend", function() {
                t.sourceBuffer && (t.hasRemoveList() ? (t.removeRangesList.video.length && t.cleanRangesList("video"),
                t.removeRangesList.audio.length && t.cleanRangesList("audio")) : t.hasQueueList() ? t.doUpdate() : t.complete && !t.sourceBuffer[e].updating && t.endOfStream(),
                t.emit("updateend"))
            })
        }
        ,
        r.hasRemoveList = function() {
            return this.removeRangesList.video.length || this.removeRangesList.audio.length
        }
        ,
        r.hasQueueList = function() {
            return this.queue.video.length || this.queue.audio.length
        }
        ,
        r.doUpdate = function() {
            for (var e in this.queue)
                if (this.queue[e].length > 0 && !this.sourceBuffer[e].updating) {
                    var t = this.queue[e].shift();
                    this.appendBuffer(t, e)
                }
        }
        ,
        r.sourceBufferEvent = function() {
            var e = this;
            this.on("mediaSegment", function(t) {
                var r = t.data
                  , i = r.type;
                e.needCleanupSourceBuffer(i) && e.doCleanupSourceBuffer(i),
                e.queue[i].push(r.data),
                e.sourceBuffer[i] && !e.hasRemoveList() && e.doUpdate()
            }),
            this.on("mediaSegmentInit", function(t) {
                var r = t.data
                  , i = r.type;
                e.queue[i].push(r.data)
            })
        }
        ,
        r.needCleanupSourceBuffer = function(e) {
            var t = this.video.currentTime
              , r = this.video.buffered;
            return r.length >= 1 && t - r.start(0) >= this.config.autoCleanupMaxBackwardDuration
        }
        ,
        r.doCleanupSourceBuffer = function(e) {
            for (var t = this.video.currentTime, r = this.sourceBuffer[e].buffered, i = !1, n = 0; n < r.length; n++) {
                var a = r.start(n)
                  , o = r.end(n);
                if (a <= t && t < o + 3 && t - a >= this.config.autoCleanupMaxBackwardDuration) {
                    i = !0;
                    var s = t - this.config.autoCleanupMinBackwardDuration;
                    this.removeRangesList[e].push({
                        start: a,
                        end: s
                    })
                }
            }
            i && !this.sourceBuffer[e].updating && this.cleanRangesList(e)
        }
        ,
        r.cleanRangesList = function(e) {
            if (!this.sourceBuffer[e].updating)
                for (var t = this.sourceBuffer[e]; this.removeRangesList[e].length && !t.updating; ) {
                    var r = this.removeRangesList[e].shift();
                    t.remove(r.start, r.end)
                }
        }
        ,
        r.appendBuffer = function(e, t) {
            if (this.sourceBuffer[t])
                try {
                    this.sourceBuffer[t].appendBuffer(e.buffer)
                } catch (r) {
                    this.queue[t].unshift(e),
                    22 === r.code && (ir.verbose(this.tag, "MediaSource bufferFull"),
                    this.emit("bufferFull"))
                }
        }
        ,
        r.onSourceEnded = function() {
            ir.verbose(this.tag, "MediaSource onSourceEnded")
        }
        ,
        r.onSourceClose = function() {
            ir.verbose(this.tag, "MediaSource onSourceClose"),
            this.mediaSource && null !== this.e && (this.mediaSource.removeEventListener("sourceopen", this.e.onSourceOpen),
            this.mediaSource.removeEventListener("sourceended", this.e.onSourceEnded),
            this.mediaSource.removeEventListener("sourceclose", this.e.onSourceClose))
        }
        ,
        r.onSourceBufferError = function(e) {
            this.emit("error", {
                errnono: Tr,
                errmsg: e
            }),
            ir.error(this.tag, "SourceBuffer Error: " + e)
        }
        ,
        r.seek = function() {
            for (var e in this.sourceBuffer) {
                var t = this.sourceBuffer[e];
                if (t) {
                    if ("open" === this.mediaSource.readyState)
                        try {
                            t.abort()
                        } catch (e) {
                            this.emit("error", {
                                errno: Lr,
                                errmsg: e
                            }),
                            ir.error(this.tag, e.message)
                        }
                    this.queue[e] = [];
                    for (var r = 0; r < t.buffered.length; r++) {
                        var i = t.buffered.start(r)
                          , n = t.buffered.end(r);
                        this.removeRangesList[e].push({
                            start: i,
                            end: n
                        })
                    }
                    t.updating || this.cleanRangesList(e)
                }
            }
        }
        ,
        r.resume = function() {
            this.doUpdate()
        }
        ,
        r.pause = function() {}
        ,
        r.endOfStream = function() {
            if (this.mediaSource) {
                var e = this.mediaSource;
                this.complete = !0;
                var t = this.sourceBuffer;
                if (t.video && t.video.updating || t.audio && t.audio.updating)
                    return;
                if ("open" === e.readyState)
                    try {
                        e.endOfStream(),
                        this.complete = !1
                    } catch (e) {
                        ir.verbose(this.tag, e),
                        this.emit("error", {
                            errno: Rr,
                            errmsg: e
                        })
                    }
            }
        }
        ,
        r.destroy = function() {
            if (this.mediaSource) {
                var e = this.mediaSource;
                this.queue = {
                    video: [],
                    audio: []
                },
                this.sourceBuffer = {
                    video: null,
                    audio: null
                },
                this.mimeCodec = {
                    video: null,
                    audio: null
                };
                var t = this.sourceBuffer;
                this.complete = !1,
                this.endOfStream(),
                t && ("closed" !== e.readyState && (e.removeSourceBuffer(t),
                t.removeEventListener("error", this.e.onSourceBufferError),
                t.removeEventListener("updateend", this.e.onSourceBufferUpdateEnd)),
                this.sourceBuffer = null),
                e.removeEventListener("sourceopen", this.e.onSourceOpen),
                e.removeEventListener("sourceended", this.e.onSourceEnded),
                e.removeEventListener("sourceclose", this.e.onSourceClose),
                this.mediaSource = null
            }
        }
        ,
        t
    }(Ve);
    var Br = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).tag = "fetch",
            i.fetching = !1,
            i.config = r,
            i.range = {
                from: 0,
                to: 524288
            },
            i.src = t,
            i.totalRange = null,
            i.block = 524288,
            i.reader = null,
            i.requestAbort = !1,
            i.arrivalDataCallback = null,
            i.bytesStart = 0,
            i.heartbeat = null,
            i
        }
        i(t, e),
        t.isSupport = function() {
            return !(!self.fetch || !self.ReadableStream)
        }
        ;
        var r = t.prototype;
        return r.open = function(e, t) {
            var r = this;
            this.requestAbort = !1;
            var i = new Headers
              , n = e || {
                from: 0,
                to: -1
            };
            if (!this.config.isLive) {
                this.range.from = n.from,
                this.range.to = n.to;
                var a = function(e, t) {
                    if ("range" === t.seekType) {
                        var r, i = {};
                        return r = -1 !== e.to ? "bytes=" + e.from.toString() + "-" + e.to.toString() : "bytes=" + e.from.toString() + "-",
                        i.Range = r,
                        i
                    }
                    return -1 !== e.to ? "?start=" + e.from.toString() + "&end=" + e.to.toString() : "?start=" + e.from.toString()
                }(n, this.config);
                if ("string" == typeof a)
                    this.src = this.config.src + a;
                else
                    for (var o in a)
                        i.append(o, a[o])
            }
            t && (this.bytesStart = 0),
            this.bytesStart = e.from;
            var s = {
                method: "GET",
                headers: i,
                mode: "cors",
                cache: "default",
                referrerPolicy: "no-referrer-when-downgrade"
            };
            fetch(this.src, s).then(function(e) {
                if (e.ok) {
                    var i = e.body.getReader();
                    return r.pump(i, t)
                }
            }).catch(function(e) {
                r.emit("error", {
                    errno: Sr,
                    errmsg: e
                })
            })
        }
        ,
        r.pause = function() {
            this.requestAbort = !0
        }
        ,
        r.pump = function(e, t) {
            var r = this;
            return e.read().then(function(i) {
                if (!i.done) {
                    if (!0 === r.requestAbort)
                        return r.requestAbort = !1,
                        e.cancel();
                    var n = i.value.buffer;
                    return r.arrivalDataCallback && (r.arrivalDataCallback(n, r.bytesStart, t),
                    r.bytesStart += n.byteLength),
                    r.pump(e)
                }
                r.emit("end"),
                ir.verbose(r.tag, "load end")
            }).catch(function(e) {
                r.emit("error", {
                    errno: Sr,
                    errmsg: e.message
                })
            })
        }
        ,
        t
    }(Ve);
    function Dr(e) {
        var t, r = {};
        return t = -1 !== e.to ? "bytes=" + e.from.toString() + "-" + e.to.toString() : "bytes=" + e.from.toString() + "-",
        r.Range = t,
        {
            headers: r
        }
    }
    var Pr = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).tag = "RangeLoader",
            i.xhr = null,
            i.src = t,
            i.totalLength = null,
            i.chunkSizeKB = 524288,
            i.range = {},
            i.bytesStart = 0,
            i.needSeek = !1,
            i.keyframePoint = null,
            i
        }
        i(t, e),
        t.isSupport = function() {
            try {
                var e = new XMLHttpRequest;
                return e.open("GET", "https://example.com", !0),
                e.responseType = "arraybuffer",
                "arraybuffer" === e.responseType
            } catch (e) {
                return !1
            }
        }
        ;
        var r = t.prototype;
        return r.open = function(e, t) {
            var r = this.xhr = new XMLHttpRequest;
            r.open("GET", this.src, !0),
            r.responseType = "arraybuffer",
            r.onreadystatechange = this.onReadyStateChange.bind(this),
            r.onprogress = this.onProgress.bind(this),
            r.onload = this.onLoad.bind(this),
            r.onerror = this.onXhrError.bind(this);
            var i = e || {
                from: 0,
                to: -1
            };
            this.range.from = i.from,
            -1 === i.to && (i.to = i.from + this.chunkSizeKB),
            t && (this.bytesStart = e.from,
            this.needSeek = !0,
            this.keyframePoint = t),
            this.range.to = i.to;
            var n = Dr(i).headers;
            for (var a in n)
                r.setRequestHeader(a, n[a]);
            r.send()
        }
        ,
        r.pause = function() {
            this.abort()
        }
        ,
        r.abort = function() {
            this.xhr && (this.xhr.onreadystatechange = null,
            this.xhr.onprogress = null,
            this.xhr.onload = null,
            this.xhr.onerror = null,
            this.xhr.abort(),
            this.xhr = null)
        }
        ,
        r.destroy = function() {
            this.xhr && (this.abort(),
            this.xhr.onreadystatechange = null,
            this.xhr.onprogress = null,
            this.xhr.onload = null,
            this.xhr.onerror = null,
            this.xhr = null),
            this.totalLength = null,
            this.bytesStart = null,
            this.range = {}
        }
        ,
        r.onReadyStateChange = function(e) {
            var t = this.xhr;
            if (2 === t.readyState && t.status < 200 && t.status > 299) {
                var r = {
                    from: this.range.from,
                    to: this.range.to,
                    url: this.src,
                    msg: "http Error: http code " + t.status
                };
                this.emit("error", {
                    errno: Sr,
                    errmsg: r
                })
            }
        }
        ,
        r.onProgress = function(e) {
            this.totalLength || (this.totalLength = e.total,
            this.abort(),
            this.open())
        }
        ,
        r.onLoad = function(e) {
            if (this.totalLength && this.arrivalDataCallback) {
                var t = e.target.response;
                this.needSeek ? (this.needSeek = !1,
                this.arrivalDataCallback(t, this.bytesStart, this.keyframePoint)) : this.arrivalDataCallback(t, this.bytesStart),
                this.bytesStart += t.byteLength,
                this.open({
                    from: this.bytesStart,
                    to: -1
                })
            }
        }
        ,
        r.onXhrError = function(e) {
            var t = {
                from: this.range.from,
                to: this.range.to,
                url: this.src,
                msg: e.constructor.name + " " + e.type
            };
            this.emit("error", {
                errno: Sr,
                errmsg: t
            })
        }
        ,
        t
    }(Ve)
      , Mr = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).tag = "WebSocket",
            i.src = t,
            i._ws = null,
            i._requestAbort = !1,
            i._receivedLength = 0,
            i
        }
        i(t, e),
        t.isSupported = function() {
            try {
                return void 0 !== window.WebSocket
            } catch (e) {
                return !1
            }
        }
        ;
        var r = t.prototype;
        return r.open = function(e, t) {
            try {
                var r = this._ws = new self.WebSocket(this.src);
                r.binaryType = "arraybuffer",
                r.onopen = this.onWebSocketOpen.bind(this),
                r.onclose = this.onWebSocketClose.bind(this),
                r.onmessage = this.onWebSocketMessage.bind(this),
                r.onerror = this.onWebSocketError.bind(this)
            } catch (e) {
                var i = {
                    code: e.code,
                    msg: e.message
                };
                this.emit("error", {
                    errno: Sr,
                    errmsg: i
                })
            }
        }
        ,
        r.pause = function() {
            var e = this._ws;
            !e || 0 !== e.readyState && 1 !== e.readyState || (this._requestAbort = !0,
            e.close()),
            this._ws = null
        }
        ,
        r.onWebSocketClose = function(e) {
            !0 !== this._requestAbort ? this.emit("end") : this._requestAbort = !1
        }
        ,
        r.onWebSocketOpen = function() {}
        ,
        r.onWebSocketMessage = function(e) {
            var t = this;
            if (e.data instanceof ArrayBuffer)
                this.dispatchArrayBuffer(e.data);
            else if (e.data instanceof Blob) {
                var r = new FileReader;
                r.onload = function() {
                    t.dispatchArrayBuffer(r.result)
                }
                ,
                r.readAsArrayBuffer(e.data)
            } else {
                var i = {
                    code: -1,
                    msg: "Unsupported WebSocket message type: " + e.data.constructor.name
                };
                this.emit("error", {
                    errno: Sr,
                    errmsg: i
                })
            }
        }
        ,
        r.dispatchArrayBuffer = function(e) {
            var t = e
              , r = this.receivedLength;
            this.receivedLength += t.byteLength,
            this.arrivalDataCallback && this.arrivalDataCallback(t, r)
        }
        ,
        r.onWebSocketError = function(e) {
            var t = {
                code: e.code,
                msg: e.message
            };
            this.emit("error", {
                errno: Sr,
                errmsg: t
            })
        }
        ,
        t
    }(Ve)
      , Ur = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).tag = "mozChunkLoader",
            i.xhr = null,
            i.src = t,
            i.config = r,
            i.totalLength = null,
            i.chunkSizeKB = 393216,
            i.range = {},
            i.bytesStart = 0,
            i.keyframePoint = null,
            i
        }
        i(t, e),
        t.isSupport = function() {
            try {
                var e = new XMLHttpRequest;
                return e.open("GET", "https://example.com", !0),
                e.responseType = "moz-chunked-arraybuffer",
                "moz-chunked-arraybuffer" === e.responseType
            } catch (e) {
                return !1
            }
        }
        ;
        var r = t.prototype;
        return r.open = function(e, t) {
            var r = this.xhr = new XMLHttpRequest;
            if (r.open("GET", this.src, !0),
            r.responseType = "moz-chunked-arraybuffer",
            r.onreadystatechange = this.onReadyStateChange.bind(this),
            r.onprogress = this.onProgress.bind(this),
            r.onload = this.onLoadEnd.bind(this),
            r.onerror = this.onXhrError.bind(this),
            !this.config.isLive) {
                var i = e || {
                    from: 0,
                    to: -1
                };
                this.range.from = i.from,
                this.range.to = i.to,
                t && (this.needSeek = !0,
                this.keyframePoint = t);
                var n = Dr(i).headers;
                for (var a in n)
                    r.setRequestHeader(a, n[a])
            }
            r.send()
        }
        ,
        r.pause = function() {
            this.abort()
        }
        ,
        r.abort = function() {
            this.xhr && (this.xhr.onreadystatechange = null,
            this.xhr.onprogress = null,
            this.xhr.onload = null,
            this.xhr.onerror = null,
            this.xhr.abort(),
            this.xhr = null)
        }
        ,
        r.destroy = function() {
            this.xhr && (this.abort(),
            this.xhr.onreadystatechange = null,
            this.xhr.onprogress = null,
            this.xhr.onload = null,
            this.xhr.onerror = null,
            this.xhr = null),
            this.totalLength = null,
            this.bytesStart = null,
            this.range = {}
        }
        ,
        r.onReadyStateChange = function(e) {
            var t = this.xhr;
            if (2 === t.readyState && t.status < 200 && t.status > 299) {
                var r = {
                    from: this.range.from,
                    to: this.range.to,
                    url: this.src,
                    msg: "http Error: http code " + t.status
                };
                this.emit("error", {
                    errno: Sr,
                    errmsg: r
                })
            }
        }
        ,
        r.onProgress = function(e) {
            this.totalLength || (this.totalLength = e.total,
            null !== e.total && 0 !== e.total && (this.totalLength = e.total));
            var t = e.target.response;
            this.needSeek ? (this.needSeek = !1,
            this.arrivalDataCallback(t, this.bytesStart, this.keyframePoint)) : this.arrivalDataCallback(t, this.bytesStart),
            this.bytesStart += t.byteLength
        }
        ,
        r.onLoadEnd = function(e) {
            this.emit(this.tag, "video load end")
        }
        ,
        r.onXhrError = function(e) {
            var t = {
                from: this.range.from,
                to: this.range.to,
                url: this.src,
                msg: e.constructor.name + " " + e.type
            };
            this.emit("error", {
                errno: Sr,
                errmsg: t
            })
        }
        ,
        t
    }(Ve)
      , Ir = function(e) {
        function t(t) {
            var r;
            return (r = e.call(this) || this).loader = null,
            r.config = {},
            r.config = t || {},
            r.bufferSize = 3145728,
            r.cacheBuffer = new ArrayBuffer(r.bufferSize),
            r.cacheRemain = 0,
            r.stashByteStart = 0,
            r.enableStash = !0,
            r.stashSize = r.config.stashSize || 393216,
            r.resumeFrom = 0,
            r.currentRange = {},
            r.totalReceive = 0,
            r.seekPonit = void 0,
            r.timer = null,
            r.heartBeatInterval = null,
            r.preTotalReceive = 0,
            r.seekLock = !1,
            r.webSocketURLReg = /wss?:\/\/(.+?)/,
            r.selectLoader(),
            r.bindEvent(),
            r
        }
        i(t, e);
        var r = t.prototype;
        return r.selectLoader = function() {
            var e = this.config
              , t = this.config.src;
            this.webSocketURLReg.test(t) ? this.loader = new Mr(t,e,this.queryHandle) : Br.isSupport() ? this.loader = new Br(t,e,this.queryHandle) : Ur.isSupport() ? this.loader = new Ur(t,e,this.queryHandle) : Pr.isSupport() && (this.loader = new Pr(t,e,this.queryHandle)),
            this.loader.arrivalDataCallback = this.onLoaderChunkArrival.bind(this)
        }
        ,
        r.bindEvent = function() {
            var e = this;
            this.loader.on("end", function() {
                var t = e.cacheBuffer.slice(0, e.cacheRemain);
                e.arrivalDataCallback(t, e.stashByteStart),
                e.emit("end")
            }),
            this.loader.on("error", function(t) {
                e.emit("error", t.data)
            })
        }
        ,
        r.onLoaderChunkArrival = function(e, t, r) {
            if ((!this.seekLock || void 0 !== r) && (void 0 !== r && (this.seekPonit = r,
            this.seekLock = !1),
            this.arrivalDataCallback))
                if (this.totalReceive += e.byteLength,
                0 === this.cacheRemain && 0 === this.stashByteStart && (this.stashByteStart = t),
                this.cacheRemain + e.byteLength <= this.stashSize) {
                    new Uint8Array(this.cacheBuffer,0,this.stashSize).set(new Uint8Array(e), this.cacheRemain),
                    this.cacheRemain += e.byteLength
                } else {
                    var i = new Uint8Array(this.cacheBuffer,0,this.bufferSize);
                    if (this.cacheRemain > 0) {
                        var n = this.cacheBuffer.slice(0, this.cacheRemain)
                          , a = 0;
                        if (void 0 !== this.seekPonit ? (a = this.arrivalDataCallback(n, this.stashByteStart, this.seekPonit),
                        this.seekPonit = void 0) : a = this.arrivalDataCallback(n, this.stashByteStart),
                        a < n.byteLength) {
                            if (a > 0) {
                                var o = new Uint8Array(n,a);
                                i.set(o, 0),
                                this.cacheRemain = o.byteLength,
                                this.stashByteStart += a
                            }
                        } else
                            this.cacheRemain = 0,
                            this.stashByteStart += a;
                        this.cacheRemain + e.byteLength > this.bufferSize && (this.expandBuffer(this.cacheRemain + e.byteLength),
                        i = new Uint8Array(this.cacheBuffer,0,this.bufferSize)),
                        i.set(new Uint8Array(e), this.cacheRemain),
                        this.cacheRemain += e.byteLength
                    } else {
                        var s = 0;
                        if (void 0 !== this.seekPonit ? (s = this.arrivalDataCallback(e, t, this.seekPonit),
                        this.seekPonit = void 0) : s = this.arrivalDataCallback(e, t),
                        s < e.byteLength) {
                            var u = e.byteLength - s;
                            u > this.bufferSize && (this.expandBuffer(u),
                            i = new Uint8Array(this.cacheBuffer,0,this.bufferSize)),
                            i.set(new Uint8Array(e,s), 0),
                            this.cacheRemain += u,
                            this.stashByteStart = t + s
                        }
                    }
                }
        }
        ,
        r.initCacheBuffer = function() {
            this.cacheRemain = 0,
            this.totalReceive = 0,
            this.cacheBuffer = new ArrayBuffer(this.bufferSize)
        }
        ,
        r.expandBuffer = function(e) {
            var t = this.bufferSize;
            t < e && (t = e),
            this.cacheBuffer = new ArrayBuffer(t),
            this.bufferSize = t
        }
        ,
        r.pause = function() {
            this.loader.pause()
        }
        ,
        r.open = function(e, t) {
            this.loader.open({
                from: e || 0,
                to: -1
            }, t),
            this.heartbeat()
        }
        ,
        r.heartbeat = function() {
            var e = this;
            window.clearInterval(this.heartBeatInterval),
            this.heartBeatInterval = setInterval(function() {
                e.emit("heartbeat", {
                    speed: e.totalReceive - e.preTotalReceive,
                    totalReceive: e.totalReceive
                }),
                e.preTotalReceive = e.totalReceive
            }, 1e3)
        }
        ,
        r.resume = function() {
            this.paused = !1;
            var e = this.totalReceive;
            this.open(e)
        }
        ,
        r.seek = function(e, t, r) {
            this.seekLock = !0,
            this.totalReceive = e,
            this.preTotalReceive = e,
            this.initCacheBuffer(),
            this.cacheRemain = 0,
            this.stashByteStart = 0,
            this.open(e, r)
        }
        ,
        r.destroy = function() {
            this.pause(),
            this.initCacheBuffer(),
            window.clearInterval(this.heartBeatInterval),
            this.heartBeatInterval = null
        }
        ,
        t
    }(Ve)
      , Or = function() {
        function e() {
            this.tagType = -1,
            this.dataSize = -1,
            this.Timestamp = -1,
            this.StreamID = -1,
            this.body = -1,
            this.time = -1,
            this.arr = [],
            this.size = -1
        }
        return e.prototype.getTime = function() {
            this.arr = [];
            for (var e = 0; e < this.Timestamp.length; e++)
                this.arr.push(1 == this.Timestamp[e].toString(16).length ? "0" + this.Timestamp[e].toString(16) : this.Timestamp[e].toString(16));
            this.arr.pop();
            var t = this.arr.join("");
            return this.time = parseInt(t, 16),
            parseInt(t, 16)
        }
        ,
        e
    }();
    function Cr(e) {
        for (var t = [], r = e, i = 0, n = e.length; i < n; )
            if (r[i] < 128)
                t.push(String.fromCharCode(r[i])),
                ++i;
            else {
                if (r[i] < 192)
                    ;
                else if (r[i] < 224) {
                    if (Fr(r, i, 1)) {
                        var a = (31 & r[i]) << 6 | 63 & r[i + 1];
                        if (a >= 128) {
                            t.push(String.fromCharCode(65535 & a)),
                            i += 2;
                            continue
                        }
                    }
                } else if (r[i] < 240) {
                    if (Fr(r, i, 2)) {
                        var o = (15 & r[i]) << 12 | (63 & r[i + 1]) << 6 | 63 & r[i + 2];
                        if (o >= 2048 && 55296 != (63488 & o)) {
                            t.push(String.fromCharCode(65535 & o)),
                            i += 3;
                            continue
                        }
                    }
                } else if (r[i] < 248 && Fr(r, i, 3)) {
                    var s = (7 & r[i]) << 18 | (63 & r[i + 1]) << 12 | (63 & r[i + 2]) << 6 | 63 & r[i + 3];
                    if (s > 65536 && s < 1114112) {
                        s -= 65536,
                        t.push(String.fromCharCode(s >>> 10 | 55296)),
                        t.push(String.fromCharCode(1023 & s | 56320)),
                        i += 4;
                        continue
                    }
                }
                t.push(String.fromCharCode(65533)),
                ++i
            }
        return t.join("")
    }
    function Fr(e, t, r) {
        var i = e;
        if (t + r < i.length) {
            for (; r--; )
                if (128 != (192 & i[++t]))
                    return !1;
            return !0
        }
        return !1
    }
    /*
 * Copyright (C) 2016 Bilibili. All Rights Reserved.
 *
 * @author zheng qian <xqq@xqq.im>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
    var Nr = function() {
        function e(e) {
            this.TAG = this.constructor.name,
            this._buffer = e,
            this._buffer_index = 0,
            this._total_bytes = e.byteLength,
            this._total_bits = 8 * e.byteLength,
            this._current_word = 0,
            this._current_word_bits_left = 0
        }
        var t = e.prototype;
        return t.destroy = function() {
            this._buffer = null
        }
        ,
        t._fillCurrentWord = function() {
            var e = this._total_bytes - this._buffer_index;
            if (e <= 0)
                throw new IllegalStateException("ExpGolomb: _fillCurrentWord() but no bytes available");
            var t = Math.min(4, e)
              , r = new Uint8Array(4);
            r.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)),
            this._current_word = new DataView(r.buffer).getUint32(0, !1),
            this._buffer_index += t,
            this._current_word_bits_left = 8 * t
        }
        ,
        t.readBits = function(e) {
            if (e > 32)
                throw new InvalidArgumentException("ExpGolomb: readBits() bits exceeded max 32bits!");
            if (e <= this._current_word_bits_left) {
                var t = this._current_word >>> 32 - e;
                return this._current_word <<= e,
                this._current_word_bits_left -= e,
                t
            }
            var r = this._current_word_bits_left ? this._current_word : 0;
            r >>>= 32 - this._current_word_bits_left;
            var i = e - this._current_word_bits_left;
            this._fillCurrentWord();
            var n = Math.min(i, this._current_word_bits_left)
              , a = this._current_word >>> 32 - n;
            return this._current_word <<= n,
            this._current_word_bits_left -= n,
            r = r << n | a
        }
        ,
        t.readBool = function() {
            return 1 === this.readBits(1)
        }
        ,
        t.readByte = function() {
            return this.readBits(8)
        }
        ,
        t._skipLeadingZero = function() {
            var e;
            for (e = 0; e < this._current_word_bits_left; e++)
                if (0 != (this._current_word & 2147483648 >>> e))
                    return this._current_word <<= e,
                    this._current_word_bits_left -= e,
                    e;
            return this._fillCurrentWord(),
            e + this._skipLeadingZero()
        }
        ,
        t.readUEG = function() {
            var e = this._skipLeadingZero();
            return this.readBits(e + 1) - 1
        }
        ,
        t.readSEG = function() {
            var e = this.readUEG();
            return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1)
        }
        ,
        e
    }()
      , zr = function() {
        function e() {}
        return e._ebsp2rbsp = function(e) {
            for (var t = e, r = t.byteLength, i = new Uint8Array(r), n = 0, a = 0; a < r; a++)
                a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (i[n] = t[a],
                n++);
            return new Uint8Array(i.buffer,0,n)
        }
        ,
        e.parseSPS = function(t) {
            var r = e._ebsp2rbsp(t)
              , i = new Nr(r);
            i.readByte();
            var n = i.readByte();
            i.readByte();
            var a = i.readByte();
            i.readUEG();
            var o = e.getProfileString(n)
              , s = e.getLevelString(a)
              , u = 1
              , h = 420
              , d = 8;
            if ((100 === n || 110 === n || 122 === n || 244 === n || 44 === n || 83 === n || 86 === n || 118 === n || 128 === n || 138 === n || 144 === n) && (3 === (u = i.readUEG()) && i.readBits(1),
            u <= 3 && (h = [0, 420, 422, 444][u]),
            d = i.readUEG() + 8,
            i.readUEG(),
            i.readBits(1),
            i.readBool()))
                for (var f = 3 !== u ? 8 : 12, c = 0; c < f; c++)
                    i.readBool() && (c < 6 ? e._skipScalingList(i, 16) : e._skipScalingList(i, 64));
            i.readUEG();
            var l = i.readUEG();
            if (0 === l)
                i.readUEG();
            else if (1 === l) {
                i.readBits(1),
                i.readSEG(),
                i.readSEG();
                for (var p = i.readUEG(), m = 0; m < p; m++)
                    i.readSEG()
            }
            i.readUEG(),
            i.readBits(1);
            var g = i.readUEG()
              , v = i.readUEG()
              , y = i.readBits(1);
            0 === y && i.readBits(1),
            i.readBits(1);
            var b = 0
              , w = 0
              , _ = 0
              , S = 0;
            i.readBool() && (b = i.readUEG(),
            w = i.readUEG(),
            _ = i.readUEG(),
            S = i.readUEG());
            var E = 1
              , A = 1
              , R = 0
              , k = !0
              , T = 0
              , L = 0;
            if (i.readBool()) {
                if (i.readBool()) {
                    var x = i.readByte();
                    x > 0 && x < 16 ? (E = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][x - 1],
                    A = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][x - 1]) : 255 === x && (E = i.readByte() << 8 | i.readByte(),
                    A = i.readByte() << 8 | i.readByte())
                }
                if (i.readBool() && i.readBool(),
                i.readBool() && (i.readBits(4),
                i.readBool() && i.readBits(24)),
                i.readBool() && (i.readUEG(),
                i.readUEG()),
                i.readBool()) {
                    var B = i.readBits(32)
                      , D = i.readBits(32);
                    k = i.readBool(),
                    R = (T = D) / (L = 2 * B)
                }
            }
            var P = 1;
            1 === E && 1 === A || (P = E / A);
            var M = 0
              , U = 0;
            0 === u ? (M = 1,
            U = 2 - y) : (M = 3 === u ? 1 : 2,
            U = (1 === u ? 2 : 1) * (2 - y));
            var I = 16 * (g + 1)
              , O = 16 * (v + 1) * (2 - y);
            I -= (b + w) * M,
            O -= (_ + S) * U;
            var C = Math.ceil(I * P);
            return i.destroy(),
            i = null,
            {
                profile_string: o,
                level_string: s,
                bit_depth: d,
                chroma_format: h,
                chroma_format_string: e.getChromaFormatString(h),
                frame_rate: {
                    fixed: k,
                    fps: R,
                    fps_den: L,
                    fps_num: T
                },
                sar_ratio: {
                    width: E,
                    height: A
                },
                codec_size: {
                    width: I,
                    height: O
                },
                present_size: {
                    width: C,
                    height: O
                }
            }
        }
        ,
        e._skipScalingList = function(e, t) {
            for (var r = 8, i = 8, n = 0; n < t; n++)
                0 !== i && (i = (r + e.readSEG() + 256) % 256),
                r = 0 === i ? r : i
        }
        ,
        e.getProfileString = function(e) {
            switch (e) {
            case 66:
                return "Baseline";
            case 77:
                return "Main";
            case 88:
                return "Extended";
            case 100:
                return "High";
            case 110:
                return "High10";
            case 122:
                return "High422";
            case 244:
                return "High444";
            default:
                return "Unknown"
            }
        }
        ,
        e.getLevelString = function(e) {
            return (e / 10).toFixed(1)
        }
        ,
        e.getChromaFormatString = function(e) {
            switch (e) {
            case 420:
                return "4:2:0";
            case 422:
                return "4:2:2";
            case 444:
                return "4:4:4";
            default:
                return "Unknown"
            }
        }
        ,
        e
    }()
      , jr = null
      , Gr = function() {
        function e() {}
        return e.parseObject = function(t, r, i) {
            var n = e.parseString(t, r, i)
              , a = e.parseScript(t, r + n.size)
              , o = a.objectEnd;
            return {
                data: {
                    name: n.data,
                    value: a.data
                },
                size: a.size,
                objectEnd: o
            }
        }
        ,
        e.parseVariable = function(t, r, i) {
            return e.parseObject(t, r, i)
        }
        ,
        e.parseLongString = function(e, t, r) {
            var i = new DataView(e,t).getUint32(0, !jr);
            return {
                data: i > 0 ? Cr(new Uint8Array(e,t + 4,i)) : "",
                size: 4 + i
            }
        }
        ,
        e.parseDate = function(e, t, r) {
            var i = new DataView(e,t)
              , n = i.getFloat64(0, !jr)
              , a = i.getInt16(8, !jr);
            return {
                data: new Date(n += 60 * a * 1e3),
                size: 10
            }
        }
        ,
        e.parseString = function(e, t, r) {
            var i = new DataView(e,t).getUint16(0, !jr);
            return {
                data: i > 0 ? Cr(new Uint8Array(e,t + 2,i)) : "",
                size: 2 + i
            }
        }
        ,
        e.parseMetadata = function(t) {
            var r;
            r = new ArrayBuffer(2),
            new DataView(r).setInt16(0, 256, !0),
            jr = 256 === new Int16Array(r)[0];
            var i = e.parseScript(t, 0)
              , n = e.parseScript(t, i.size, t.length - i.size)
              , a = {};
            return a[i.data] = n.data,
            a
        }
        ,
        e.parseScript = function(t, r, i) {
            var n = r
              , a = new Uint8Array(t).buffer
              , o = new DataView(a,0,i)
              , s = null
              , u = o.getUint8(n);
            switch (n += 1,
            u) {
            case 0:
                s = o.getFloat64(n, !jr),
                n += 8;
                break;
            case 1:
                s = !!o.getUint8(n),
                n += 1;
                break;
            case 2:
                var h = e.parseString(a, n);
                s = h.data,
                n += h.size;
                break;
            case 3:
                s = {};
                var d = 0;
                for (9 == (16777215 & o.getUint32(i - 4, !jr)) && (d = 3); n < i - 4; ) {
                    var f = e.parseObject(a, n, i - r - d);
                    if (f.objectEnd)
                        break;
                    s[f.data.name] = f.data.value,
                    n = f.size
                }
                if (n <= i - 3)
                    9 === (16777215 & v.getUint32(n - 1, !jr)) && (n += 3);
                break;
            case 8:
                for (s = {},
                n += 4,
                o.getUint32(i - 4, !jr); n < i - 8; ) {
                    var c = e.parseVariable(a, n);
                    if (c.objectEnd)
                        break;
                    s[c.data.name] = c.data.value,
                    n = c.size
                }
                if (n <= i - 3)
                    9 === (16777215 & o.getUint32(n - 1, !jr)) && (n += 3);
                break;
            case 9:
                s = void 0,
                n = 1;
                break;
            case 10:
                s = [];
                var l = o.getUint32(n, !jr);
                n += 4;
                for (var p = 0; p < l; p++) {
                    var m = e.parseScript(a, n);
                    s.push(m.data),
                    n = m.size
                }
                break;
            case 11:
                var g = e.parseDate(a, n + 1, i - 1);
                s = g.data,
                n += g.size;
                break;
            case 12:
                var y = e.parseString(a, n + 1, i - 1);
                s = y.data,
                n += y.size;
                break;
            default:
                n = i
            }
            return {
                data: s,
                size: n
            }
        }
        ,
        e
    }()
      , Vr = function() {
        function e() {
            this.mimeType = null,
            this.duration = null,
            this.hasAudio = null,
            this.hasVideo = null,
            this.audioCodec = null,
            this.videoCodec = null,
            this.audioDataRate = null,
            this.videoDataRate = null,
            this.audioSampleRate = null,
            this.audioChannelCount = null,
            this.width = null,
            this.height = null,
            this.fps = null,
            this.profile = null,
            this.level = null,
            this.chromaFormat = null,
            this.sarNum = null,
            this.sarDen = null,
            this.metadata = null,
            this.segments = null,
            this.segmentCount = null,
            this.hasKeyframesIndex = null,
            this.keyframesIndex = null
        }
        var t = e.prototype;
        return t.isComplete = function() {
            var e = !1 === this.hasAudio || !0 === this.hasAudio && null != this.audioCodec && null != this.audioSampleRate && null != this.audioChannelCount
              , t = !1 === this.hasVideo || !0 === this.hasVideo && null != this.videoCodec && null != this.width && null != this.height && null != this.fps && null != this.profile && null != this.level && null != this.chromaFormat && null != this.sarNum && null != this.sarDen;
            return null != this.mimeType && null != this.duration && null != this.metadata && null != this.hasKeyframesIndex && e && t
        }
        ,
        t.isSeekable = function() {
            return !0 === this.hasKeyframesIndex
        }
        ,
        e
    }()
      , Hr = function(e) {
        this.type = e
    }
      , qr = function() {
        function e() {
            var e;
            this.TAG = this.constructor.name,
            this._config = {},
            this._onError = null,
            this._onMediaInfo = null,
            this._onTrackMetadata = null,
            this._onDataAvailable = null,
            this._dataOffset = 0,
            this._firstParse = !0,
            this._dispatch = !1,
            this._hasAudio = !1,
            this._hasVideo = !1,
            this._audioInitialMetadataDispatched = !1,
            this._videoInitialMetadataDispatched = !1,
            this._mediaInfo = new Vr,
            this._mediaInfo.hasAudio = this._hasAudio,
            this._mediaInfo.hasVideo = this._hasVideo,
            this._metadata = null,
            this._audioMetadata = null,
            this._videoMetadata = null,
            this._naluLengthSize = 4,
            this._timestampBase = 0,
            this._timescale = 1e3,
            this._duration = 0,
            this._durationOverrided = !1,
            this._referenceFrameRate = {
                fixed: !0,
                fps: 23.976,
                fps_num: 23976,
                fps_den: 1e3
            },
            this._videoTrack = {
                type: "video",
                id: 1,
                sequenceNumber: 0,
                addcoefficient: 2,
                samples: [],
                length: 0
            },
            this._audioTrack = {
                type: "audio",
                id: 2,
                sequenceNumber: 0,
                addcoefficient: 2,
                samples: [],
                length: 0
            },
            this._littleEndian = (e = new ArrayBuffer(2),
            new DataView(e).setInt16(0, 256, !0),
            256 === new Int16Array(e)[0])
        }
        var t = e.prototype;
        return t.onMediaInfo = function(e) {
            this._onMediaInfo = e
        }
        ,
        t.parseMetadata = function(e) {
            var t = Gr.parseMetadata(e);
            this._parseScriptData(t)
        }
        ,
        t._parseScriptData = function(e) {
            var t = e;
            if (t.hasOwnProperty("onMetaData")) {
                this._metadata,
                this._metadata = t;
                var r = this._metadata.onMetaData;
                if ("boolean" == typeof r.hasAudio && (this._hasAudio = r.hasAudio,
                this._mediaInfo.hasAudio = this._hasAudio),
                "boolean" == typeof r.hasVideo && (this._hasVideo = r.hasVideo,
                this._mediaInfo.hasVideo = this._hasVideo),
                "number" == typeof r.audiodatarate && (this._mediaInfo.audioDataRate = r.audiodatarate),
                "number" == typeof r.videodatarate && (this._mediaInfo.videoDataRate = r.videodatarate),
                "number" == typeof r.width && (this._mediaInfo.width = r.width),
                "number" == typeof r.height && (this._mediaInfo.height = r.height),
                "number" == typeof r.duration) {
                    if (!this._durationOverrided) {
                        var i = Math.floor(r.duration * this._timescale);
                        this._duration = i,
                        this._mediaInfo.duration = i
                    }
                } else
                    this._mediaInfo.duration = 0;
                if ("number" == typeof r.framerate) {
                    var n = Math.floor(1e3 * r.framerate);
                    if (n > 0) {
                        var a = n / 1e3;
                        this._referenceFrameRate.fixed = !0,
                        this._referenceFrameRate.fps = a,
                        this._referenceFrameRate.fps_num = n,
                        this._referenceFrameRate.fps_den = 1e3,
                        this._mediaInfo.fps = a
                    }
                }
                if ("object" == typeof r.keyframes) {
                    this._mediaInfo.hasKeyframesIndex = !0;
                    var o = r.keyframes;
                    o.times = r.times,
                    o.filepositions = r.filepositions,
                    this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(o),
                    r.keyframes = null
                } else
                    this._mediaInfo.hasKeyframesIndex = !1;
                return this._dispatch = !1,
                this._mediaInfo.metadata = r,
                this._mediaInfo
            }
        }
        ,
        t._parseKeyframesIndex = function(e) {
            for (var t = [], r = [], i = 1; i < e.times.length; i++) {
                var n = this._timestampBase + Math.floor(1e3 * e.times[i]);
                t.push(n),
                r.push(e.filepositions[i])
            }
            return {
                times: t,
                filepositions: r
            }
        }
        ,
        t.moofTag = function(e) {
            for (var t = 0; t < e.length; t++)
                this._dispatch = !0,
                this.parseChunks(e[t]);
            this._isInitialMetadataDispatched() && this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack)
        }
        ,
        t.parseChunks = function(e) {
            switch (e.tagType) {
            case 8:
                this._parseAudioData(e.body.buffer, 0, e.body.length, e.getTime());
                break;
            case 9:
                this._parseVideoData(e.body.buffer, 0, e.body.length, e.getTime(), 0);
                break;
            case 18:
                this.parseMetadata(e.body)
            }
        }
        ,
        t._parseVideoData = function(e, t, r, i, n) {
            if (i == this._timestampBase && 0 != this._timestampBase)
                throw new Hr(i,this._timestampBase,"夭寿啦这个视频不是从0开始");
            if (!(r <= 1)) {
                var a = new Uint8Array(e,t,r)[0]
                  , o = (240 & a) >>> 4
                  , s = 15 & a;
                7 === s ? this._parseAVCVideoPacket(e, t + 1, r - 1, i, n, o) : this._onError && this._onError("Flv: Unsupported codec in video frame: " + s)
            }
        }
        ,
        t._parseAVCVideoPacket = function(e, t, r, i, n, a) {
            if (!(r < 4)) {
                var o = this._littleEndian
                  , s = new DataView(e,t,r)
                  , u = s.getUint8(0)
                  , h = 16777215 & s.getUint32(0, !o);
                if (0 === u)
                    this._parseAVCDecoderConfigurationRecord(e, t + 4, r - 4);
                else if (1 === u)
                    this._parseAVCVideoData(e, t + 4, r - 4, i, n, a, h);
                else if (2 !== u)
                    return void this._onError("Flv: Invalid video packet type " + u)
            }
        }
        ,
        t._parseAVCDecoderConfigurationRecord = function(e, t, r) {
            if (!(r < 7)) {
                var i = this._videoMetadata
                  , n = this._videoTrack
                  , a = this._littleEndian
                  , o = new DataView(e,t,r);
                i ? i.avcc : ((i = this._videoMetadata = {}).type = "video",
                i.id = n.id,
                i.timescale = this._timescale,
                i.duration = this._duration);
                var s = o.getUint8(0)
                  , u = o.getUint8(1);
                o.getUint8(2),
                o.getUint8(3);
                if (1 === s && 0 !== u)
                    if (this._naluLengthSize = 1 + (3 & o.getUint8(4)),
                    3 === this._naluLengthSize || 4 === this._naluLengthSize) {
                        var h = 31 & o.getUint8(5);
                        if (0 === h || h > 1)
                            this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid H264 SPS count: " + h);
                        else {
                            for (var d = 6, f = 0; f < h; f++) {
                                var c = o.getUint16(d, !a);
                                if (d += 2,
                                0 !== c) {
                                    var l = new Uint8Array(e,t + d,c);
                                    d += c;
                                    var p = zr.parseSPS(l);
                                    i.codecWidth = p.codec_size.width,
                                    i.codecHeight = p.codec_size.height,
                                    i.presentWidth = p.present_size.width,
                                    i.presentHeight = p.present_size.height,
                                    i.config = p,
                                    i.profile = p.profile_string,
                                    i.level = p.level_string,
                                    i.bitDepth = p.bit_depth,
                                    i.chromaFormat = p.chroma_format,
                                    i.sarRatio = p.sar_ratio,
                                    i.frameRate = p.frame_rate,
                                    !1 !== p.frame_rate.fixed && 0 !== p.frame_rate.fps_num && 0 !== p.frame_rate.fps_den || (i.frameRate = this._referenceFrameRate);
                                    var m = i.frameRate.fps_den
                                      , g = i.frameRate.fps_num;
                                    i.refSampleDuration = Math.floor(i.timescale * (m / g));
                                    for (var v = l.subarray(1, 4), y = "avc1.", b = 0; b < 3; b++) {
                                        var w = v[b].toString(16);
                                        w.length < 2 && (w = "0" + w),
                                        y += w
                                    }
                                    i.codec = y;
                                    var _ = this._mediaInfo;
                                    _.width = i.codecWidth,
                                    _.height = i.codecHeight,
                                    _.fps = i.frameRate.fps,
                                    _.profile = i.profile,
                                    _.level = i.level,
                                    _.chromaFormat = p.chroma_format_string,
                                    _.sarNum = i.sarRatio.width,
                                    _.sarDen = i.sarRatio.height,
                                    _.videoCodec = y,
                                    _.meta = i,
                                    _.hasAudio ? null != _.audioCodec && (_.mimeType = 'video/x-flv; codecs="' + _.videoCodec + "," + _.audioCodec + '"') : _.mimeType = 'video/x-flv; codecs="' + _.videoCodec + '"',
                                    _.isComplete() && this._onMediaInfo(_)
                                }
                            }
                            var S = o.getUint8(d);
                            if (0 === S || S > 1)
                                this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid H264 PPS count: " + S);
                            else {
                                d++;
                                for (var E = 0; E < S; E++) {
                                    var A = o.getUint16(d, !a);
                                    d += 2,
                                    0 !== A && (d += A)
                                }
                                i.avcc = new Uint8Array(r),
                                i.avcc.set(new Uint8Array(e,t,r), 0),
                                this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._videoInitialMetadataDispatched = !0,
                                this._dispatch = !1,
                                this._onTrackMetadata("video", i)
                            }
                        }
                    } else
                        this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Strange NaluLengthSizeMinusOne: " + (this._naluLengthSize - 1));
                else
                    this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord")
            }
        }
        ,
        t.timestampBase = function(e) {
            this._timestampBase = e
        }
        ,
        t._parseAVCVideoData = function(e, t, r, i, n, a, o) {
            for (var s = this._littleEndian, u = new DataView(e,t,r), h = [], d = 0, f = 0, c = this._naluLengthSize, l = this._timestampBase + i, p = 1 === a; f < r && !(f + 4 >= r); ) {
                var m = u.getUint32(f, !s);
                if (3 === c && (m >>>= 8),
                m > r - c)
                    return;
                var g = 31 & u.getUint8(f + c);
                5 === g && (p = !0);
                var v = new Uint8Array(e,t + f,c + m)
                  , y = {
                    type: g,
                    data: v
                };
                h.push(y),
                d += v.byteLength,
                f += c + m
            }
            if (h.length) {
                var b = this._videoTrack
                  , w = {
                    units: h,
                    length: d,
                    isKeyframe: p,
                    dts: l,
                    cts: o,
                    pts: l + o
                };
                p && (w.fileposition = n),
                b.samples.push(w),
                b.length += d
            }
        }
        ,
        t._parseAudioData = function(e, t, r, i) {
            if (i == this._timestampBase && this._timestampBase,
            !(r <= 1)) {
                var n = this._audioMetadata
                  , a = this._audioTrack;
                if (!n || !n.codec) {
                    (n = this._audioMetadata = {}).type = "audio",
                    n.id = a.id,
                    n.timescale = this._timescale,
                    n.duration = this._duration;
                    this._littleEndian;
                    var o = new DataView(e,t,r).getUint8(0)
                      , s = o >>> 4;
                    if (10 !== s)
                        return void this._onError(DemuxErrors.CODEC_UNSUPPORTED, "Flv: Unsupported audio codec idx: " + s);
                    var u = 0
                      , h = (12 & o) >>> 2
                      , d = [5500, 11025, 22050, 44100, 48e3];
                    if (!(h < d.length))
                        return void this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid audio sample rate idx: " + h);
                    u = d[h];
                    var f = 1 & o;
                    n.audioSampleRate = u,
                    n.channelCount = 0 === f ? 1 : 2,
                    n.refSampleDuration = Math.floor(1024 / n.audioSampleRate * n.timescale),
                    n.codec = "mp4a.40.5"
                }
                var c = this._parseAACAudioData(e, t + 1, r - 1);
                if (null != c) {
                    if (0 === c.packetType) {
                        n.config;
                        var l = c.data;
                        n.audioSampleRate = l.samplingRate,
                        n.channelCount = l.channelCount,
                        n.codec = l.codec,
                        n.config = l.config,
                        n.refSampleDuration = Math.floor(1024 / n.audioSampleRate * n.timescale),
                        this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._audioInitialMetadataDispatched = !0,
                        this._dispatch = !1;
                        var p = this._mediaInfo;
                        return p.audioCodec = "mp4a.40." + l.originalAudioObjectType,
                        p.audioSampleRate = n.audioSampleRate,
                        p.audioChannelCount = n.channelCount,
                        p.hasVideo ? null != p.videoCodec && (p.mimeType = 'video/x-flv; codecs="' + p.videoCodec + "," + p.audioCodec + '"') : p.mimeType = 'video/x-flv; codecs="' + p.audioCodec + '"',
                        this._onTrackMetadata("audio", n),
                        void (p.isComplete() && this._onMediaInfo(p))
                    }
                    if (1 === c.packetType) {
                        var m = this._timestampBase + i
                          , g = {
                            unit: c.data,
                            dts: m,
                            pts: m
                        };
                        a.samples.push(g),
                        a.length += c.data.length
                    }
                }
            }
        }
        ,
        t._parseAACAudioData = function(e, t, r) {
            if (!(r <= 1)) {
                var i = {}
                  , n = new Uint8Array(e,t,r);
                return i.packetType = n[0],
                0 === n[0] ? i.data = this._parseAACAudioSpecificConfig(e, t + 1, r - 1) : i.data = n.subarray(1),
                i
            }
        }
        ,
        t._parseAACAudioSpecificConfig = function(e, t, r) {
            var i, n, a = new Uint8Array(e,t,r), o = null, s = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], u = 0, h = null;
            if (u = i = a[0] >>> 3,
            (n = (7 & a[0]) << 1 | a[1] >>> 7) < 0 || n >= s.length)
                this._onError(DemuxErrors.FORMAT_ERROR, "Flv: AAC invalid sampling frequency index!");
            else {
                var d = s[n]
                  , f = (120 & a[1]) >>> 3;
                if (!(f < 0 || f >= 8)) {
                    5 === u && (h = (7 & a[1]) << 1 | a[2] >>> 7);
                    var c = self.navigator.userAgent.toLowerCase();
                    return -1 !== c.indexOf("firefox") ? n >= 6 ? (u = 5,
                    o = new Array(4),
                    h = n - 3) : (u = 2,
                    o = new Array(2),
                    h = n) : -1 !== c.indexOf("android") ? (u = 2,
                    o = new Array(2),
                    h = n) : (u = 5,
                    h = n,
                    o = new Array(4),
                    n >= 6 ? h = n - 3 : 1 === f && (u = 2,
                    o = new Array(2),
                    h = n)),
                    o[0] = u << 3,
                    o[0] |= (15 & n) >>> 1,
                    o[1] = (15 & n) << 7,
                    o[1] |= (15 & f) << 3,
                    5 === u && (o[1] |= (15 & h) >>> 1,
                    o[2] = (1 & h) << 7,
                    o[2] |= 8,
                    o[3] = 0),
                    {
                        config: o,
                        samplingRate: d,
                        channelCount: f,
                        codec: "mp4a.40." + u,
                        originalAudioObjectType: i
                    }
                }
                this._onError(DemuxErrors.FORMAT_ERROR, "Flv: AAC invalid channel configuration")
            }
        }
        ,
        t._isInitialMetadataDispatched = function() {
            return this._hasAudio && this._hasVideo ? this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched : this._hasAudio && !this._hasVideo ? this._audioInitialMetadataDispatched : !this._hasAudio && this._hasVideo ? this._videoInitialMetadataDispatched : void 0
        }
        ,
        r(e, [{
            key: "hasAudio",
            set: function(e) {
                this._mediaInfo.hasAudio = this._hasAudio = e
            }
        }, {
            key: "hasVideo",
            set: function(e) {
                this._mediaInfo.hasVideo = this._hasVideo = e
            }
        }]),
        e
    }()
      , Kr = function() {
        function e() {
            this.tempUint8 = new Uint8Array,
            this.arrTag = [],
            this.index = 0,
            this.tempArr = [],
            this.stop = !1,
            this.offset = 0,
            this.frist = !0,
            this._hasAudio = !1,
            this._hasVideo = !1,
            this._dispose = !1,
            this.busy = !1,
            this.busyArr = []
        }
        var t = e.prototype;
        return t.setFlv = function(e) {
            return this.busy = !0,
            this._dispose = !1,
            this.stop = !1,
            this.arrTag = [],
            this.index = 0,
            this.tempUint8 = e,
            this.tempUint8.length > 13 && 70 == this.tempUint8[0] && 76 == this.tempUint8[1] && 86 == this.tempUint8[2] ? (this.probe(this.tempUint8.buffer),
            this.read(9),
            this.read(4),
            this.parse(),
            this.frist = !1,
            this.busy = !1,
            this.offset) : this.frist ? this.offset : (this.parse(),
            this.offset)
        }
        ,
        t.probe = function(e) {
            var t = new Uint8Array(e)
              , r = {
                match: !1
            };
            if (70 !== t[0] || 76 !== t[1] || 86 !== t[2] || 1 !== t[3])
                return r;
            var i = (4 & t[4]) >>> 2 != 0
              , n = 0 != (1 & t[4]);
            return i || n ? (this._hasAudio = qr._hasAudio = i,
            this._hasVideo = qr._hasVideo = n,
            {
                match: !0,
                hasAudioTrack: i,
                hasVideoTrack: n
            }) : r
        }
        ,
        t.dispose = function() {}
        ,
        t.parse = function() {
            for (; this.index < this.tempUint8.length && !this.stop; ) {
                this.offset = this.index;
                var e = new Or;
                if (this.tempUint8.length - this.index >= 11) {
                    if (e.tagType = this.read(1)[0],
                    e.dataSize = this.read(3),
                    e.Timestamp = this.read(4),
                    e.StreamID = this.read(3),
                    18 != e.tagType && 8 != e.tagType && 9 != e.tagType)
                        throw new Hr("wrong tagType" + e.tagType);
                    this.tempUint8.length - this.index >= this.getBodySum(e.dataSize) + 4 ? (e.body = this.read(this.getBodySum(e.dataSize)),
                    9 == e.tagType && this._hasVideo && this.arrTag.push(e),
                    8 == e.tagType && this._hasAudio && this.arrTag.push(e),
                    18 == e.tagType && 0 == this.arrTag.length && this.arrTag.push(e),
                    e.size = this.read(4),
                    this.offset = this.index) : this.stop = !0
                } else
                    this.stop = !0
            }
            return this.offset
        }
        ,
        t.read = function(e) {
            var t = this.tempUint8.slice(this.index, this.index + e);
            return this.index += e,
            t
        }
        ,
        t.getBodySum = function(e) {
            var t = "";
            return t += 1 == e[0].toString(16).length ? "0" + e[0].toString(16) : e[0].toString(16),
            t += 1 == e[1].toString(16).length ? "0" + e[1].toString(16) : e[1].toString(16),
            t += 1 == e[2].toString(16).length ? "0" + e[2].toString(16) : e[2].toString(16),
            parseInt(t, 16)
        }
        ,
        e
    }()
      , Wr = function() {
        function e() {}
        return e.init = function() {
            for (var t in e.types = {
                avc1: [],
                avcC: [],
                btrt: [],
                dinf: [],
                dref: [],
                esds: [],
                ftyp: [],
                hdlr: [],
                mdat: [],
                mdhd: [],
                mdia: [],
                mfhd: [],
                minf: [],
                moof: [],
                moov: [],
                mp4a: [],
                mvex: [],
                mvhd: [],
                sdtp: [],
                stbl: [],
                stco: [],
                stsc: [],
                stsd: [],
                stsz: [],
                stts: [],
                tfdt: [],
                tfhd: [],
                traf: [],
                trak: [],
                trun: [],
                trex: [],
                tkhd: [],
                vmhd: [],
                smhd: []
            },
            e.types)
                e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
            var r = e.constants = {};
            r.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]),
            r.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
            r.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
            r.STSC = r.STCO = r.STTS,
            r.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
            r.HDLR_VIDEO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
            r.HDLR_AUDIO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]),
            r.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
            r.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
            r.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
        }
        ,
        e.box = function(e) {
            for (var t = 8, r = null, i = Array.prototype.slice.call(arguments, 1), n = i.length, a = 0; a < n; a++)
                t += i[a].byteLength;
            (r = new Uint8Array(t))[0] = t >>> 24 & 255,
            r[1] = t >>> 16 & 255,
            r[2] = t >>> 8 & 255,
            r[3] = 255 & t,
            r.set(e, 4);
            for (var o = 8, s = 0; s < n; s++)
                r.set(i[s], o),
                o += i[s].byteLength;
            return r
        }
        ,
        e.generateInitSegment = function(t) {
            t.constructor != Array && (t = [t]);
            var r = e.box(e.types.ftyp, e.constants.FTYP)
              , i = e.moov(t)
              , n = new Uint8Array(r.byteLength + i.byteLength);
            return n.set(r, 0),
            n.set(i, r.byteLength),
            n
        }
        ,
        e.moov = function(t) {
            var r, i = e.mvhd(t[0].timescale, t[0].duration), n = e.trak(t[0]);
            t.length > 1 && (r = e.trak(t[1]));
            var a = e.mvex(t);
            return t.length > 1 ? e.box(e.types.moov, i, n, r, a) : e.box(e.types.moov, i, n, a)
        }
        ,
        e.mvhd = function(t, r) {
            return e.box(e.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
        }
        ,
        e.trak = function(t) {
            return e.box(e.types.trak, e.tkhd(t), e.mdia(t))
        }
        ,
        e.tkhd = function(t) {
            var r = t.id
              , i = t.duration
              , n = t.presentWidth
              , a = t.presentHeight;
            return e.box(e.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, n >>> 8 & 255, 255 & n, 0, 0, a >>> 8 & 255, 255 & a, 0, 0]))
        }
        ,
        e.mdia = function(t) {
            return e.box(e.types.mdia, e.mdhd(t), e.hdlr(t), e.minf(t))
        }
        ,
        e.mdhd = function(t) {
            var r = t.timescale
              , i = t.duration;
            return e.box(e.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 85, 196, 0, 0]))
        }
        ,
        e.hdlr = function(t) {
            var r = null;
            return r = "audio" === t.type ? e.constants.HDLR_AUDIO : e.constants.HDLR_VIDEO,
            e.box(e.types.hdlr, r)
        }
        ,
        e.minf = function(t) {
            var r = null;
            return r = "audio" === t.type ? e.box(e.types.smhd, e.constants.SMHD) : e.box(e.types.vmhd, e.constants.VMHD),
            e.box(e.types.minf, r, e.dinf(), e.stbl(t))
        }
        ,
        e.dinf = function() {
            return e.box(e.types.dinf, e.box(e.types.dref, e.constants.DREF))
        }
        ,
        e.stbl = function(t) {
            return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.constants.STTS), e.box(e.types.stsc, e.constants.STSC), e.box(e.types.stsz, e.constants.STSZ), e.box(e.types.stco, e.constants.STCO))
        }
        ,
        e.stsd = function(t) {
            return "audio" === t.type ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp4a(t)) : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.avc1(t))
        }
        ,
        e.mp4a = function(t) {
            var r = t.channelCount
              , i = t.audioSampleRate
              , n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, r, 0, 16, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, 0, 0]);
            return e.box(e.types.mp4a, n, e.esds(t))
        }
        ,
        e.esds = function(t) {
            var r = t.config
              , i = r.length
              , n = new Uint8Array([0, 0, 0, 0, 3, 23 + i, 0, 1, 0, 4, 15 + i, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([i]).concat(r).concat([6, 1, 2]));
            return e.box(e.types.esds, n)
        }
        ,
        e.avc1 = function(t) {
            var r = t.avcc
              , i = t.codecWidth
              , n = t.codecHeight
              , a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, n >>> 8 & 255, 255 & n, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 4, 103, 49, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255]);
            return e.box(e.types.avc1, a, e.box(e.types.avcC, r))
        }
        ,
        e.mvex = function(t) {
            return t.length > 1 ? e.box(e.types.mvex, e.trex(t[0]), e.trex(t[1])) : e.box(e.types.mvex, e.trex(t[0]))
        }
        ,
        e.trex = function(t) {
            var r = t.id
              , i = new Uint8Array([0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
            return e.box(e.types.trex, i)
        }
        ,
        e.moof = function(t, r) {
            return e.box(e.types.moof, e.mfhd(t.sequenceNumber), e.traf(t, r))
        }
        ,
        e.mfhd = function(t) {
            var r = new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t]);
            return e.box(e.types.mfhd, r)
        }
        ,
        e.traf = function(t, r) {
            var i = t.id
              , n = e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i]))
              , a = e.box(e.types.tfdt, new Uint8Array([0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r]))
              , o = e.sdtp(t)
              , s = e.trun(t, o.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
            return e.box(e.types.traf, n, a, s, o)
        }
        ,
        e.sdtp = function(t) {
            for (var r = t.samples || [], i = r.length, n = new Uint8Array(4 + i), a = 0; a < i; a++) {
                var o = r[a].flags;
                n[a + 4] = o.isLeading << 6 | o.dependsOn << 4 | o.isDependedOn << 2 | o.hasRedundancy
            }
            return e.box(e.types.sdtp, n)
        }
        ,
        e.trun = function(t, r) {
            var i = t.samples || []
              , n = i.length
              , a = 12 + 16 * n
              , o = new Uint8Array(a);
            r += 8 + a,
            o.set([0, 0, 15, 1, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0);
            for (var s = 0; s < n; s++) {
                var u = i[s].duration
                  , h = i[s].size
                  , d = i[s].flags
                  , f = i[s].cts;
                o.set([u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h, d.isLeading << 2 | d.dependsOn, d.isDependedOn << 6 | d.hasRedundancy << 4 | d.isNonSync, 0, 0, f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, 255 & f], 12 + 16 * s)
            }
            return e.box(e.types.trun, o)
        }
        ,
        e.mdat = function(t) {
            return e.box(e.types.mdat, t)
        }
        ,
        e
    }()
      , Yr = function() {
        function e() {}
        return e.getSilentFrame = function(e) {
            return 1 === e ? new Uint8Array([0, 200, 0, 128, 35, 128]) : 2 === e ? new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]) : 3 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]) : 4 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]) : 5 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]) : 6 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]) : null
        }
        ,
        e
    }()
      , Xr = {};
    !function() {
        var e = self.navigator.userAgent.toLowerCase()
          , t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []
          , r = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || []
          , i = {
            browser: t[5] || t[3] || t[1] || "",
            version: t[2] || t[4] || "0",
            majorVersion: t[4] || t[2] || "0",
            platform: r[0] || ""
        }
          , n = {};
        if (i.browser) {
            n[i.browser] = !0;
            var a = i.majorVersion.split(".");
            n.version = {
                major: parseInt(i.majorVersion, 10),
                string: i.version
            },
            a.length > 1 && (n.version.minor = parseInt(a[1], 10)),
            a.length > 2 && (n.version.build = parseInt(a[2], 10))
        }
        i.platform && (n[i.platform] = !0),
        (n.chrome || n.opr || n.safari) && (n.webkit = !0),
        (n.rv || n.iemobile) && (n.rv && delete n.rv,
        i.browser = "msie",
        n.msie = !0);
        n.edge && (delete n.edge,
        i.browser = "msedge",
        n.msedge = !0);
        n.opr && (i.browser = "opera",
        n.opera = !0);
        n.safari && n.android && (i.browser = "android",
        n.android = !0);
        for (var o in n.name = i.browser,
        n.platform = i.platform,
        Xr)
            Xr.hasOwnProperty(o) && delete Xr[o];
        Xr = n
    }();
    var $r = Xr
      , Zr = function(e, t, r, i, n) {
        this.dts = e,
        this.pts = t,
        this.duration = r,
        this.originalDts = i,
        this.isSyncPoint = n,
        this.fileposition = null
    }
      , Qr = function() {
        function e() {
            this.beginDts = 0,
            this.endDts = 0,
            this.beginPts = 0,
            this.endPts = 0,
            this.originalBeginDts = 0,
            this.originalEndDts = 0,
            this.syncPoints = [],
            this.firstSample = null,
            this.lastSample = null
        }
        return e.prototype.appendSyncPoint = function(e) {
            e.isSyncPoint = !0,
            this.syncPoints.push(e)
        }
        ,
        e
    }()
      , Jr = function() {
        function e(e) {
            this._type = e,
            this._list = [],
            this._lastAppendLocation = -1
        }
        var t = e.prototype;
        return t.isEmpty = function() {
            return 0 === this._list.length
        }
        ,
        t.clear = function() {
            this._list = [],
            this._lastAppendLocation = -1
        }
        ,
        t._searchNearestSegmentBefore = function(e) {
            var t = this._list;
            if (0 === t.length)
                return -2;
            var r = t.length - 1
              , i = 0
              , n = 0
              , a = r
              , o = 0;
            if (e < t[0].originalBeginDts)
                return o = -1;
            for (; n <= a; ) {
                if ((i = n + Math.floor((a - n) / 2)) === r || e > t[i].lastSample.originalDts && e < t[i + 1].originalBeginDts) {
                    o = i;
                    break
                }
                t[i].originalBeginDts < e ? n = i + 1 : a = i - 1
            }
            return o
        }
        ,
        t._searchNearestSegmentAfter = function(e) {
            return this._searchNearestSegmentBefore(e) + 1
        }
        ,
        t.append = function(e) {
            var t = this._list
              , r = e
              , i = this._lastAppendLocation
              , n = 0;
            -1 !== i && i < t.length && r.originalBeginDts >= t[i].lastSample.originalDts && (i === t.length - 1 || i < t.length - 1 && r.originalBeginDts < t[i + 1].originalBeginDts) ? n = i + 1 : t.length > 0 && (n = this._searchNearestSegmentBefore(r.originalBeginDts) + 1),
            this._lastAppendLocation = n,
            this._list.splice(n, 0, r)
        }
        ,
        t.getLastSegmentBefore = function(e) {
            var t = this._searchNearestSegmentBefore(e);
            return t >= 0 ? this._list[t] : null
        }
        ,
        t.getLastSampleBefore = function(e) {
            var t = this.getLastSegmentBefore(e);
            return null != t ? t.lastSample : null
        }
        ,
        t.getLastSyncPointBefore = function(e) {
            for (var t = this._searchNearestSegmentBefore(e), r = this._list[t].syncPoints; 0 === r.length && t > 0; )
                t--,
                r = this._list[t].syncPoints;
            return r.length > 0 ? r[r.length - 1] : null
        }
        ,
        r(e, [{
            key: "type",
            get: function() {
                return this._type
            }
        }, {
            key: "length",
            get: function() {
                return this._list.length
            }
        }]),
        e
    }()
      , ei = function() {
        function e(e) {
            this.TAG = "MP4Remuxer",
            this._config = e,
            this._isLive = !0 === e.isLive,
            this._dtsBase = -1,
            this._dtsBaseInited = !1,
            this._audioDtsBase = 1 / 0,
            this._videoDtsBase = 1 / 0,
            this._audioNextDts = void 0,
            this._videoNextDts = void 0,
            this._audioMeta = null,
            this._videoMeta = null,
            this._audioSegmentInfoList = new Jr("audio"),
            this._videoSegmentInfoList = new Jr("video"),
            this._onInitSegment = null,
            this._onMediaSegment = null,
            this._forceFirstIDR = !(!$r.chrome || !($r.version.major < 50 || 50 === $r.version.major && $r.version.build < 2661)),
            this._fillSilentAfterSeek = $r.msedge || $r.msie,
            this._mp3UseMpegAudio = !$r.firefox
        }
        var t = e.prototype;
        return t.destroy = function() {
            this._dtsBase = -1,
            this._dtsBaseInited = !1,
            this._audioMeta = null,
            this._videoMeta = null,
            this._audioSegmentInfoList.clear(),
            this._audioSegmentInfoList = null,
            this._videoSegmentInfoList.clear(),
            this._videoSegmentInfoList = null,
            this._onInitSegment = null,
            this._onMediaSegment = null
        }
        ,
        t.bindDataSource = function(e) {
            return e.onDataAvailable = this.remux.bind(this),
            e.onTrackMetadata = this._onTrackMetadataReceived.bind(this),
            this
        }
        ,
        t.insertDiscontinuity = function() {
            this._audioNextDts = this._videoNextDts = void 0
        }
        ,
        t.seek = function(e) {
            this._videoSegmentInfoList.clear(),
            this._audioSegmentInfoList.clear()
        }
        ,
        t.remux = function(e, t) {
            if (!this._onMediaSegment)
                throw new IllegalStateException("MP4Remuxer: onMediaSegment callback must be specificed!");
            this._dtsBaseInited || this._calculateDtsBase(e, t),
            this._remuxVideo(t),
            this._remuxAudio(e)
        }
        ,
        t._onTrackMetadataReceived = function(e, t) {
            var r = null
              , i = "mp4"
              , n = t.codec;
            if ("audio" === e)
                this._audioMeta = t,
                "mp3" === t.codec && this._mp3UseMpegAudio ? (i = "mpeg",
                n = "",
                r = new Uint8Array) : r = Wr.generateInitSegment(t);
            else {
                if ("video" !== e)
                    return;
                this._videoMeta = t,
                r = Wr.generateInitSegment(t)
            }
            if (!this._onInitSegment)
                throw new IllegalStateException("MP4Remuxer: onInitSegment callback must be specified!");
            this._onInitSegment(e, {
                type: e,
                data: r.buffer,
                codec: n,
                container: e + "/" + i,
                mediaDuration: t.duration
            })
        }
        ,
        t._calculateDtsBase = function(e, t) {
            this._dtsBaseInited || (e.samples && e.samples.length && (this._audioDtsBase = e.samples[0].dts),
            t.samples && t.samples.length && (this._videoDtsBase = t.samples[0].dts),
            this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase),
            this._dtsBaseInited = !0)
        }
        ,
        t._remuxAudio = function(e) {
            if (null != this._audioMeta) {
                var t, r = e, i = r.samples, n = void 0, a = -1, o = this._audioMeta.refSampleDuration, s = "mp3" === this._audioMeta.codec && this._mp3UseMpegAudio, u = this._dtsBaseInited && void 0 === this._audioNextDts, h = !1;
                if (i && !(i.length <= 1)) {
                    var d = 0
                      , f = null
                      , c = 0;
                    s ? (d = 0,
                    c = r.length) : (d = 8,
                    c = 8 + r.length);
                    var l = i[0].dts - this._dtsBase;
                    if (this._audioNextDts)
                        n = l - this._audioNextDts;
                    else if (this._audioSegmentInfoList.isEmpty())
                        n = 0,
                        this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty() && "mp3" !== this._audioMeta.originalCodec && (h = !0);
                    else {
                        var p = this._audioSegmentInfoList.getLastSampleBefore(l);
                        if (null != p) {
                            var m = l - (p.originalDts + p.duration);
                            m <= 3 && (m = 0),
                            n = l - (p.dts + p.duration + m)
                        } else
                            n = 0
                    }
                    if (h) {
                        var g = l - n
                          , v = this._videoSegmentInfoList.getLastSegmentBefore(l);
                        if (null != v && v.beginDts < g) {
                            var y = Yr.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                            if (y) {
                                var b = v.beginDts
                                  , w = g - v.beginDts;
                                Log.v(this.TAG, "InsertPrefixSilentAudio: dts: " + b + ", duration: " + w),
                                i.unshift({
                                    unit: y,
                                    dts: b,
                                    pts: b
                                }),
                                c += y.byteLength
                            }
                        } else
                            h = !1
                    }
                    var _ = [];
                    n = 0;
                    for (var S = 0; S + 1 < i.length; S++) {
                        var E = i[S]
                          , A = (E.unit,
                        E.dts - this._dtsBase)
                          , R = A - n;
                        -1 === a && (a = R);
                        var k = 0;
                        if (S !== i.length - 1)
                            k = i[S + 1].dts - this._dtsBase - n - R;
                        else
                            k = _.length >= 1 ? _[_.length - 1].duration : Math.floor(o);
                        _.push({
                            dts: R,
                            pts: R,
                            cts: 0,
                            unit: E.unit,
                            size: E.unit.byteLength,
                            duration: k,
                            originalDts: A,
                            flags: {
                                isLeading: 0,
                                dependsOn: 1,
                                isDependedOn: 0,
                                hasRedundancy: 0
                            }
                        })
                    }
                    if (s)
                        f = new Uint8Array(c);
                    else {
                        for (var T = 8, L = 0; L < _.length; ++L)
                            T += _[L].size;
                        (f = new Uint8Array(T))[0] = T >>> 24 & 255,
                        f[1] = T >>> 16 & 255,
                        f[2] = T >>> 8 & 255,
                        f[3] = 255 & T,
                        f.set(Wr.types.mdat, 4)
                    }
                    for (var x = 0; x < _.length; x++) {
                        var B = _[x].unit;
                        f.set(B, d),
                        d += B.byteLength
                    }
                    var D = _[_.length - 1];
                    t = D.dts + D.duration,
                    this._audioNextDts = t;
                    var P = new Qr;
                    P.beginDts = a,
                    P.endDts = t,
                    P.beginPts = a,
                    P.endPts = t,
                    P.originalBeginDts = _[0].originalDts,
                    P.originalEndDts = D.originalDts + D.duration,
                    P.firstSample = new Zr(_[0].dts,_[0].pts,_[0].duration,_[0].originalDts,!1),
                    P.lastSample = new Zr(D.dts,D.pts,D.duration,D.originalDts,!1),
                    this._isLive || this._audioSegmentInfoList.append(P),
                    r.samples = _,
                    r.sequenceNumber++;
                    var M = null;
                    M = s ? new Uint8Array : Wr.moof(r, a),
                    r.samples = [i[i.length - 1]],
                    r.length = 0;
                    var U = {
                        type: "audio",
                        data: this._mergeBoxes(M, f).buffer,
                        sampleCount: _.length,
                        info: P
                    };
                    s && u && (U.timestampOffset = a),
                    this._onMediaSegment("audio", U)
                }
            }
        }
        ,
        t._remuxVideo = function(e) {
            if (null != this._videoMeta) {
                var t, r, i = e, n = i.samples, a = void 0, o = -1, s = -1;
                if (n && !(n.length <= 1)) {
                    var u = n[0].dts - this._dtsBase;
                    if (this._videoNextDts)
                        a = Math.max(u - this._videoNextDts, 0);
                    else if (this._videoSegmentInfoList.isEmpty())
                        a = 0;
                    else {
                        var h = this._videoSegmentInfoList.getLastSampleBefore(u);
                        if (null != h) {
                            var d = u - (h.originalDts + h.duration);
                            d <= 3 && (d = 0),
                            a = u - (h.dts + h.duration + d)
                        } else
                            a = 0
                    }
                    var f = new Qr
                      , c = []
                      , l = a;
                    a = 0;
                    for (var p = 0; p + 1 < n.length; p++) {
                        var m = n[p]
                          , g = m.dts - this._dtsBase - (0 == p ? l : 0)
                          , v = m.isKeyframe
                          , y = g - a
                          , b = m.cts
                          , w = y + b;
                        -1 === o && (o = y,
                        s = w);
                        var _ = 0;
                        if (p !== n.length - 1)
                            _ = n[p + 1].dts - this._dtsBase - a - y;
                        else
                            _ = c.length >= 1 ? c[c.length - 1].duration : Math.floor(this._videoMeta.refSampleDuration);
                        if (v) {
                            var S = new Zr(y,w,_,m.dts,!0);
                            S.fileposition = m.fileposition,
                            f.appendSyncPoint(S)
                        }
                        c.push({
                            dts: y,
                            pts: w,
                            cts: b,
                            units: m.units,
                            size: m.length,
                            isKeyframe: v,
                            duration: _,
                            originalDts: g,
                            flags: {
                                isLeading: 0,
                                dependsOn: v ? 2 : 1,
                                isDependedOn: v ? 1 : 0,
                                hasRedundancy: 0,
                                isNonSync: v ? 0 : 1
                            }
                        })
                    }
                    for (var E = 8, A = 8, R = 0; R < c.length; ++R)
                        A += c[R].size;
                    var k = new Uint8Array(A);
                    k[0] = A >>> 24 & 255,
                    k[1] = A >>> 16 & 255,
                    k[2] = A >>> 8 & 255,
                    k[3] = 255 & A,
                    k.set(Wr.types.mdat, 4);
                    for (var T = 0; T < c.length; T++)
                        for (var L = c[T].units; L.length; ) {
                            var x = L.shift().data;
                            k.set(x, E),
                            E += x.byteLength
                        }
                    var B = c[c.length - 1];
                    if (t = B.dts + B.duration,
                    r = B.pts + B.duration,
                    this._videoNextDts = t,
                    f.beginDts = o,
                    f.endDts = t,
                    f.beginPts = s,
                    f.endPts = r,
                    f.originalBeginDts = c[0].originalDts,
                    f.originalEndDts = B.originalDts + B.duration,
                    f.firstSample = new Zr(c[0].dts,c[0].pts,c[0].duration,c[0].originalDts,c[0].isKeyframe),
                    f.lastSample = new Zr(B.dts,B.pts,B.duration,B.originalDts,B.isKeyframe),
                    this._isLive || this._videoSegmentInfoList.append(f),
                    i.samples = c,
                    i.sequenceNumber++,
                    this._forceFirstIDR) {
                        var D = c[0].flags;
                        D.dependsOn = 2,
                        D.isNonSync = 0
                    }
                    var P = Wr.moof(i, o);
                    i.samples = [n[n.length - 1]],
                    i.length = 0,
                    this._onMediaSegment("video", {
                        type: "video",
                        data: this._mergeBoxes(P, k).buffer,
                        sampleCount: c.length,
                        info: f
                    })
                }
            }
        }
        ,
        t._mergeBoxes = function(e, t) {
            var r = new Uint8Array(e.byteLength + t.byteLength);
            return r.set(e, 0),
            r.set(t, e.byteLength),
            r
        }
        ,
        r(e, [{
            key: "onInitSegment",
            get: function() {
                return this._onInitSegment
            },
            set: function(e) {
                this._onInitSegment = e
            }
        }, {
            key: "onMediaSegment",
            get: function() {
                return this._onMediaSegment
            },
            set: function(e) {
                this._onMediaSegment = e
            }
        }]),
        e
    }()
      , ti = function() {
        function e(e) {
            Wr.init(),
            this._config = {
                _isLive: !1
            },
            Object.assign(this._config, e),
            this.onInitSegment = null,
            this.onMediaSegment = null,
            this.onMediaInfo = null,
            this.seekCallBack = null,
            this.loadmetadata = !1,
            this.ftyp_moov = null,
            this._tagdemux = new qr,
            this._flvparse = new Kr,
            this.ftyp_moov_v = null,
            this.ftyp_moov_a = null,
            this.metaSuccRun = !1,
            this.metas = [],
            this.parseChunk = null,
            this.hasVideo = !1,
            this.hasAudio = !1,
            this._error = null,
            this._pendingResolveSeekPoint = -1,
            this._tempBaseTime = 0,
            this.setflvBase = this.setflvBasefrist,
            this._tagdemux._onTrackMetadata = this.Metadata.bind(this),
            this._tagdemux._onMediaInfo = this.metaSucc.bind(this),
            this._tagdemux._onDataAvailable = this.onDataAvailable.bind(this),
            this._tagdemux._onError = this.error.bind(this),
            this.m4mof = new ei(this._config),
            this.m4mof.onMediaSegment = this.onMdiaSegment.bind(this)
        }
        var t = e.prototype;
        return t.seek = function(e) {
            this._flvparse.dispose(),
            this.setflvBase = this.setflvBasefrist,
            null != e && 0 != e || (e = 0,
            this._pendingResolveSeekPoint = -1),
            this._tempBaseTime != e && (this._tempBaseTime = e,
            this._tagdemux._timestampBase = e,
            this.m4mof.seek(e),
            this.m4mof.insertDiscontinuity(),
            this._pendingResolveSeekPoint = e)
        }
        ,
        t.setflvBasefrist = function(e, t) {
            var r = 0;
            try {
                r = this._flvparse.setFlv(new Uint8Array(e))
            } catch (e) {
                this.error(e)
            }
            if (0 == this._flvparse.arrTag.length)
                return r;
            if (this._flvparse.arrTag.length > 0) {
                this._tagdemux.hasAudio = this.hasAudio = this._flvparse._hasAudio,
                this._tagdemux.hasVideo = this.hasVideo = this._flvparse._hasVideo,
                0 != this._tempBaseTime && this._tempBaseTime == this._flvparse.arrTag[0].getTime() && (this._tagdemux._timestampBase = 0);
                try {
                    this._tagdemux.moofTag(this._flvparse.arrTag)
                } catch (e) {
                    this.error(e)
                }
                this.setflvBase = this.setflvBaseUsually
            }
            return r
        }
        ,
        t.setflvBaseUsually = function(e, t) {
            var r = 0;
            try {
                r = this._flvparse.setFlv(new Uint8Array(e))
            } catch (e) {
                this.error(e)
            }
            if (this._flvparse.arrTag.length > 0)
                try {
                    this._tagdemux.moofTag(this._flvparse.arrTag)
                } catch (e) {
                    this.error(e)
                }
            return r
        }
        ,
        t.onMdiaSegment = function(e, t) {
            if (this.onMediaSegment && this.onMediaSegment(e, new Uint8Array(t.data)),
            -1 != this._pendingResolveSeekPoint && "video" == e) {
                var r = this._pendingResolveSeekPoint;
                this._pendingResolveSeekPoint = -1,
                this.seekCallBack && this.seekCallBack(r)
            }
        }
        ,
        t.Metadata = function(e, t) {
            switch (e) {
            case "video":
                if (this.metas.push(["video", t]),
                this.m4mof._videoMeta = t,
                this.hasVideo && !this.hasAudio)
                    return void this.metaSucc();
                break;
            case "audio":
                if (this.metas.push(["audio", t]),
                this.m4mof._audioMeta = t,
                !this.hasVideo && this.hasAudio)
                    return void this.metaSucc()
            }
            this.hasVideo && this.hasAudio && this.m4mof._videoMeta && this.m4mof._audioMeta && this.metaSucc()
        }
        ,
        t.metaSucc = function(e) {
            var t = this;
            this.onMediaInfo && e && this.onMediaInfo(e || this._tagdemux._mediaInfo, {
                hasAudio: this.hasAudio,
                hasVideo: this.hasVideo
            }),
            0 != this.metas.length ? e || (this.metas.length > 1 ? this.metas.map(function(e) {
                "video" == e[0] ? t.ftyp_moov_v = Wr.generateInitSegment([e[1]]) : t.ftyp_moov_a = Wr.generateInitSegment([e[1]])
            }) : this.ftyp_moov = Wr.generateInitSegment([this.metas[0][1]]),
            this.onInitSegment && 0 == this.loadmetadata && (this.ftyp_moov ? this.onInitSegment(this.ftyp_moov) : this.onInitSegment(this.ftyp_moov_v, this.ftyp_moov_a),
            this.loadmetadata = !0)) : this.metaSuccRun = !0
        }
        ,
        t.onDataAvailable = function(e, t) {
            try {
                this.m4mof.remux(e, t)
            } catch (e) {
                this.error(e)
            }
        }
        ,
        t.setflv = function(e, t) {
            return this.setflvBase(e, t)
        }
        ,
        t.setflvloc = function(e) {
            Kr.setFlv(new Uint8Array(e));
            if (Kr.arrTag.length > 0)
                return Kr.arrTag
        }
        ,
        t.error = function(e) {
            this._error && this._error(e)
        }
        ,
        e
    }()
      , ri = function(e) {
        function t(t) {
            var r;
            return (r = e.call(this) || this).f2m = new ti(t),
            r.f2m._error = r.error.bind(r),
            r._onInitSegment = null,
            r._onMediaSegment = null,
            r._onMediaInfo = null,
            r._seekCallBack = null,
            r
        }
        i(t, e);
        var n = t.prototype;
        return n.error = function(e) {
            this.emit("error", e.type)
        }
        ,
        n.seek = function(e) {
            this.f2m.seek(e)
        }
        ,
        n.setflv = function(e) {
            return this.f2m.setflv(e, 0)
        }
        ,
        n.setflvloc = function(e) {
            return this.f2m.setflvloc(e)
        }
        ,
        r(t, [{
            key: "onInitSegment",
            set: function(e) {
                this._onInitSegment = e,
                this.f2m.onInitSegment = e
            }
        }, {
            key: "onMediaSegment",
            set: function(e) {
                this._onMediaSegment = e,
                this.f2m.onMediaSegment = e
            }
        }, {
            key: "onMediaInfo",
            set: function(e) {
                this._onMediaInfo = e,
                this.f2m.onMediaInfo = e
            }
        }, {
            key: "seekCallBack",
            set: function(e) {
                this._seekCallBack = e,
                this.f2m.seekCallBack = e
            }
        }]),
        t
    }(Ve)
      , ii = te(function(e, t) {
        e.exports = function() {
            function e(e, t) {
                for (var r = 0; r < t.length; r++) {
                    var i = t[r];
                    i.enumerable = i.enumerable || !1,
                    i.configurable = !0,
                    "value"in i && (i.writable = !0),
                    Object.defineProperty(e, i.key, i)
                }
            }
            function t(t, r, i) {
                return r && e(t.prototype, r),
                i && e(t, i),
                Object.defineProperty(t, "prototype", {
                    writable: !1
                }),
                t
            }
            function r(e, t) {
                e.prototype = Object.create(t.prototype),
                e.prototype.constructor = e,
                function(e, t) {
                    (Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                        return e.__proto__ = t,
                        e
                    }
                    )(e, t)
                }(e, t)
            }
            var i = function() {
                function e() {
                    this.tagType = -1,
                    this.dataSize = -1,
                    this.Timestamp = -1,
                    this.StreamID = -1,
                    this.body = -1,
                    this.time = -1,
                    this.arr = [],
                    this.size = -1
                }
                return e.prototype.getTime = function() {
                    this.arr = [];
                    for (var e = 0; e < this.Timestamp.length; e++)
                        this.arr.push(1 == this.Timestamp[e].toString(16).length ? "0" + this.Timestamp[e].toString(16) : this.Timestamp[e].toString(16));
                    this.arr.pop();
                    var t = this.arr.join("");
                    return this.time = parseInt(t, 16),
                    parseInt(t, 16)
                }
                ,
                e
            }();
            function n(e) {
                for (var t = [], r = e, i = 0, n = e.length; i < n; )
                    if (r[i] < 128)
                        t.push(String.fromCharCode(r[i])),
                        ++i;
                    else {
                        if (r[i] < 192)
                            ;
                        else if (r[i] < 224) {
                            if (a(r, i, 1)) {
                                var o = (31 & r[i]) << 6 | 63 & r[i + 1];
                                if (o >= 128) {
                                    t.push(String.fromCharCode(65535 & o)),
                                    i += 2;
                                    continue
                                }
                            }
                        } else if (r[i] < 240) {
                            if (a(r, i, 2)) {
                                var s = (15 & r[i]) << 12 | (63 & r[i + 1]) << 6 | 63 & r[i + 2];
                                if (s >= 2048 && 55296 != (63488 & s)) {
                                    t.push(String.fromCharCode(65535 & s)),
                                    i += 3;
                                    continue
                                }
                            }
                        } else if (r[i] < 248 && a(r, i, 3)) {
                            var u = (7 & r[i]) << 18 | (63 & r[i + 1]) << 12 | (63 & r[i + 2]) << 6 | 63 & r[i + 3];
                            if (u > 65536 && u < 1114112) {
                                u -= 65536,
                                t.push(String.fromCharCode(u >>> 10 | 55296)),
                                t.push(String.fromCharCode(1023 & u | 56320)),
                                i += 4;
                                continue
                            }
                        }
                        t.push(String.fromCharCode(65533)),
                        ++i
                    }
                return t.join("")
            }
            function a(e, t, r) {
                var i = e;
                if (t + r < i.length) {
                    for (; r--; )
                        if (128 != (192 & i[++t]))
                            return !1;
                    return !0
                }
                return !1
            }
            var o = function() {
                function e(e) {
                    this.TAG = this.constructor.name,
                    this._buffer = e,
                    this._buffer_index = 0,
                    this._total_bytes = e.byteLength,
                    this._total_bits = 8 * e.byteLength,
                    this._current_word = 0,
                    this._current_word_bits_left = 0
                }
                var t = e.prototype;
                return t.destroy = function() {
                    this._buffer = null
                }
                ,
                t._fillCurrentWord = function() {
                    var e = this._total_bytes - this._buffer_index;
                    if (e <= 0)
                        throw new IllegalStateException("ExpGolomb: _fillCurrentWord() but no bytes available");
                    var t = Math.min(4, e)
                      , r = new Uint8Array(4);
                    r.set(this._buffer.subarray(this._buffer_index, this._buffer_index + t)),
                    this._current_word = new DataView(r.buffer).getUint32(0, !1),
                    this._buffer_index += t,
                    this._current_word_bits_left = 8 * t
                }
                ,
                t.readBits = function(e) {
                    if (e > 32)
                        throw new InvalidArgumentException("ExpGolomb: readBits() bits exceeded max 32bits!");
                    if (e <= this._current_word_bits_left) {
                        var t = this._current_word >>> 32 - e;
                        return this._current_word <<= e,
                        this._current_word_bits_left -= e,
                        t
                    }
                    var r = this._current_word_bits_left ? this._current_word : 0;
                    r >>>= 32 - this._current_word_bits_left;
                    var i = e - this._current_word_bits_left;
                    this._fillCurrentWord();
                    var n = Math.min(i, this._current_word_bits_left)
                      , a = this._current_word >>> 32 - n;
                    return this._current_word <<= n,
                    this._current_word_bits_left -= n,
                    r = r << n | a
                }
                ,
                t.readBool = function() {
                    return 1 === this.readBits(1)
                }
                ,
                t.readByte = function() {
                    return this.readBits(8)
                }
                ,
                t._skipLeadingZero = function() {
                    var e;
                    for (e = 0; e < this._current_word_bits_left; e++)
                        if (0 != (this._current_word & 2147483648 >>> e))
                            return this._current_word <<= e,
                            this._current_word_bits_left -= e,
                            e;
                    return this._fillCurrentWord(),
                    e + this._skipLeadingZero()
                }
                ,
                t.readUEG = function() {
                    var e = this._skipLeadingZero();
                    return this.readBits(e + 1) - 1
                }
                ,
                t.readSEG = function() {
                    var e = this.readUEG();
                    return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1)
                }
                ,
                e
            }()
              , s = function() {
                function e() {}
                return e._ebsp2rbsp = function(e) {
                    for (var t = e, r = t.byteLength, i = new Uint8Array(r), n = 0, a = 0; a < r; a++)
                        a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (i[n] = t[a],
                        n++);
                    return new Uint8Array(i.buffer,0,n)
                }
                ,
                e.parseSPS = function(t) {
                    var r = e._ebsp2rbsp(t)
                      , i = new o(r);
                    i.readByte();
                    var n = i.readByte();
                    i.readByte();
                    var a = i.readByte();
                    i.readUEG();
                    var s = e.getProfileString(n)
                      , u = e.getLevelString(a)
                      , h = 1
                      , d = 420
                      , f = 8;
                    if ((100 === n || 110 === n || 122 === n || 244 === n || 44 === n || 83 === n || 86 === n || 118 === n || 128 === n || 138 === n || 144 === n) && (3 === (h = i.readUEG()) && i.readBits(1),
                    h <= 3 && (d = [0, 420, 422, 444][h]),
                    f = i.readUEG() + 8,
                    i.readUEG(),
                    i.readBits(1),
                    i.readBool()))
                        for (var c = 3 !== h ? 8 : 12, l = 0; l < c; l++)
                            i.readBool() && (l < 6 ? e._skipScalingList(i, 16) : e._skipScalingList(i, 64));
                    i.readUEG();
                    var p = i.readUEG();
                    if (0 === p)
                        i.readUEG();
                    else if (1 === p) {
                        i.readBits(1),
                        i.readSEG(),
                        i.readSEG();
                        for (var m = i.readUEG(), g = 0; g < m; g++)
                            i.readSEG()
                    }
                    i.readUEG(),
                    i.readBits(1);
                    var v = i.readUEG()
                      , y = i.readUEG()
                      , b = i.readBits(1);
                    0 === b && i.readBits(1),
                    i.readBits(1);
                    var w = 0
                      , _ = 0
                      , S = 0
                      , E = 0;
                    i.readBool() && (w = i.readUEG(),
                    _ = i.readUEG(),
                    S = i.readUEG(),
                    E = i.readUEG());
                    var A = 1
                      , R = 1
                      , k = 0
                      , T = !0
                      , L = 0
                      , x = 0;
                    if (i.readBool()) {
                        if (i.readBool()) {
                            var B = i.readByte();
                            B > 0 && B < 16 ? (A = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2][B - 1],
                            R = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1][B - 1]) : 255 === B && (A = i.readByte() << 8 | i.readByte(),
                            R = i.readByte() << 8 | i.readByte())
                        }
                        if (i.readBool() && i.readBool(),
                        i.readBool() && (i.readBits(4),
                        i.readBool() && i.readBits(24)),
                        i.readBool() && (i.readUEG(),
                        i.readUEG()),
                        i.readBool()) {
                            var D = i.readBits(32)
                              , P = i.readBits(32);
                            T = i.readBool(),
                            k = (L = P) / (x = 2 * D)
                        }
                    }
                    var M = 1;
                    1 === A && 1 === R || (M = A / R);
                    var U = 0
                      , I = 0;
                    0 === h ? (U = 1,
                    I = 2 - b) : (U = 3 === h ? 1 : 2,
                    I = (1 === h ? 2 : 1) * (2 - b));
                    var O = 16 * (v + 1)
                      , C = 16 * (y + 1) * (2 - b);
                    O -= (w + _) * U,
                    C -= (S + E) * I;
                    var F = Math.ceil(O * M);
                    return i.destroy(),
                    i = null,
                    {
                        profile_string: s,
                        level_string: u,
                        bit_depth: f,
                        chroma_format: d,
                        chroma_format_string: e.getChromaFormatString(d),
                        frame_rate: {
                            fixed: T,
                            fps: k,
                            fps_den: x,
                            fps_num: L
                        },
                        sar_ratio: {
                            width: A,
                            height: R
                        },
                        codec_size: {
                            width: O,
                            height: C
                        },
                        present_size: {
                            width: F,
                            height: C
                        }
                    }
                }
                ,
                e._skipScalingList = function(e, t) {
                    for (var r = 8, i = 8, n = 0; n < t; n++)
                        0 !== i && (i = (r + e.readSEG() + 256) % 256),
                        r = 0 === i ? r : i
                }
                ,
                e.getProfileString = function(e) {
                    switch (e) {
                    case 66:
                        return "Baseline";
                    case 77:
                        return "Main";
                    case 88:
                        return "Extended";
                    case 100:
                        return "High";
                    case 110:
                        return "High10";
                    case 122:
                        return "High422";
                    case 244:
                        return "High444";
                    default:
                        return "Unknown"
                    }
                }
                ,
                e.getLevelString = function(e) {
                    return (e / 10).toFixed(1)
                }
                ,
                e.getChromaFormatString = function(e) {
                    switch (e) {
                    case 420:
                        return "4:2:0";
                    case 422:
                        return "4:2:2";
                    case 444:
                        return "4:4:4";
                    default:
                        return "Unknown"
                    }
                }
                ,
                e
            }()
              , u = null
              , h = function() {
                function e() {}
                return e.parseObject = function(t, r, i) {
                    var n = e.parseString(t, r, i)
                      , a = e.parseScript(t, r + n.size)
                      , o = a.objectEnd;
                    return {
                        data: {
                            name: n.data,
                            value: a.data
                        },
                        size: a.size,
                        objectEnd: o
                    }
                }
                ,
                e.parseVariable = function(t, r, i) {
                    return e.parseObject(t, r, i)
                }
                ,
                e.parseLongString = function(e, t, r) {
                    var i = new DataView(e,t).getUint32(0, !u);
                    return {
                        data: i > 0 ? n(new Uint8Array(e,t + 4,i)) : "",
                        size: 4 + i
                    }
                }
                ,
                e.parseDate = function(e, t, r) {
                    var i = new DataView(e,t)
                      , n = i.getFloat64(0, !u)
                      , a = i.getInt16(8, !u);
                    return {
                        data: new Date(n += 60 * a * 1e3),
                        size: 10
                    }
                }
                ,
                e.parseString = function(e, t, r) {
                    var i = new DataView(e,t).getUint16(0, !u);
                    return {
                        data: i > 0 ? n(new Uint8Array(e,t + 2,i)) : "",
                        size: 2 + i
                    }
                }
                ,
                e.parseMetadata = function(t) {
                    var r;
                    r = new ArrayBuffer(2),
                    new DataView(r).setInt16(0, 256, !0),
                    u = 256 === new Int16Array(r)[0];
                    var i = e.parseScript(t, 0)
                      , n = e.parseScript(t, i.size, t.length - i.size)
                      , a = {};
                    return a[i.data] = n.data,
                    a
                }
                ,
                e.parseScript = function(t, r, i) {
                    var n = r
                      , a = new Uint8Array(t).buffer
                      , o = new DataView(a,0,i)
                      , s = null
                      , h = o.getUint8(n);
                    switch (n += 1,
                    h) {
                    case 0:
                        s = o.getFloat64(n, !u),
                        n += 8;
                        break;
                    case 1:
                        s = !!o.getUint8(n),
                        n += 1;
                        break;
                    case 2:
                        var d = e.parseString(a, n);
                        s = d.data,
                        n += d.size;
                        break;
                    case 3:
                        s = {};
                        var f = 0;
                        for (9 == (16777215 & o.getUint32(i - 4, !u)) && (f = 3); n < i - 4; ) {
                            var c = e.parseObject(a, n, i - r - f);
                            if (c.objectEnd)
                                break;
                            s[c.data.name] = c.data.value,
                            n = c.size
                        }
                        n <= i - 3 && 9 == (16777215 & v.getUint32(n - 1, !u)) && (n += 3);
                        break;
                    case 8:
                        for (s = {},
                        n += 4,
                        o.getUint32(i - 4, !u); n < i - 8; ) {
                            var l = e.parseVariable(a, n);
                            if (l.objectEnd)
                                break;
                            s[l.data.name] = l.data.value,
                            n = l.size
                        }
                        n <= i - 3 && 9 == (16777215 & o.getUint32(n - 1, !u)) && (n += 3);
                        break;
                    case 9:
                        s = void 0,
                        n = 1;
                        break;
                    case 10:
                        s = [];
                        var p = o.getUint32(n, !u);
                        n += 4;
                        for (var m = 0; m < p; m++) {
                            var g = e.parseScript(a, n);
                            s.push(g.data),
                            n = g.size
                        }
                        break;
                    case 11:
                        var y = e.parseDate(a, n + 1, i - 1);
                        s = y.data,
                        n += y.size;
                        break;
                    case 12:
                        var b = e.parseString(a, n + 1, i - 1);
                        s = b.data,
                        n += b.size;
                        break;
                    default:
                        n = i
                    }
                    return {
                        data: s,
                        size: n
                    }
                }
                ,
                e
            }()
              , d = function() {
                function e() {
                    this.mimeType = null,
                    this.duration = null,
                    this.hasAudio = null,
                    this.hasVideo = null,
                    this.audioCodec = null,
                    this.videoCodec = null,
                    this.audioDataRate = null,
                    this.videoDataRate = null,
                    this.audioSampleRate = null,
                    this.audioChannelCount = null,
                    this.width = null,
                    this.height = null,
                    this.fps = null,
                    this.profile = null,
                    this.level = null,
                    this.chromaFormat = null,
                    this.sarNum = null,
                    this.sarDen = null,
                    this.metadata = null,
                    this.segments = null,
                    this.segmentCount = null,
                    this.hasKeyframesIndex = null,
                    this.keyframesIndex = null
                }
                var t = e.prototype;
                return t.isComplete = function() {
                    var e = !1 === this.hasAudio || !0 === this.hasAudio && null != this.audioCodec && null != this.audioSampleRate && null != this.audioChannelCount
                      , t = !1 === this.hasVideo || !0 === this.hasVideo && null != this.videoCodec && null != this.width && null != this.height && null != this.fps && null != this.profile && null != this.level && null != this.chromaFormat && null != this.sarNum && null != this.sarDen;
                    return null != this.mimeType && null != this.duration && null != this.metadata && null != this.hasKeyframesIndex && e && t
                }
                ,
                t.isSeekable = function() {
                    return !0 === this.hasKeyframesIndex
                }
                ,
                e
            }()
              , f = function(e) {
                this.type = e
            }
              , c = function() {
                function e() {
                    var e;
                    this.TAG = this.constructor.name,
                    this._config = {},
                    this._onError = null,
                    this._onMediaInfo = null,
                    this._onTrackMetadata = null,
                    this._onDataAvailable = null,
                    this._dataOffset = 0,
                    this._firstParse = !0,
                    this._dispatch = !1,
                    this._hasAudio = !1,
                    this._hasVideo = !1,
                    this._audioInitialMetadataDispatched = !1,
                    this._videoInitialMetadataDispatched = !1,
                    this._mediaInfo = new d,
                    this._mediaInfo.hasAudio = this._hasAudio,
                    this._mediaInfo.hasVideo = this._hasVideo,
                    this._metadata = null,
                    this._audioMetadata = null,
                    this._videoMetadata = null,
                    this._naluLengthSize = 4,
                    this._timestampBase = 0,
                    this._timescale = 1e3,
                    this._duration = 0,
                    this._durationOverrided = !1,
                    this._referenceFrameRate = {
                        fixed: !0,
                        fps: 23.976,
                        fps_num: 23976,
                        fps_den: 1e3
                    },
                    this._videoTrack = {
                        type: "video",
                        id: 1,
                        sequenceNumber: 0,
                        addcoefficient: 2,
                        samples: [],
                        length: 0
                    },
                    this._audioTrack = {
                        type: "audio",
                        id: 2,
                        sequenceNumber: 0,
                        addcoefficient: 2,
                        samples: [],
                        length: 0
                    },
                    this._littleEndian = (e = new ArrayBuffer(2),
                    new DataView(e).setInt16(0, 256, !0),
                    256 === new Int16Array(e)[0])
                }
                var r = e.prototype;
                return r.onMediaInfo = function(e) {
                    this._onMediaInfo = e
                }
                ,
                r.parseMetadata = function(e) {
                    var t = h.parseMetadata(e);
                    this._parseScriptData(t)
                }
                ,
                r._parseScriptData = function(e) {
                    var t = e;
                    if (t.hasOwnProperty("onMetaData")) {
                        this._metadata,
                        this._metadata = t;
                        var r = this._metadata.onMetaData;
                        if ("boolean" == typeof r.hasAudio && (this._hasAudio = r.hasAudio,
                        this._mediaInfo.hasAudio = this._hasAudio),
                        "boolean" == typeof r.hasVideo && (this._hasVideo = r.hasVideo,
                        this._mediaInfo.hasVideo = this._hasVideo),
                        "number" == typeof r.audiodatarate && (this._mediaInfo.audioDataRate = r.audiodatarate),
                        "number" == typeof r.videodatarate && (this._mediaInfo.videoDataRate = r.videodatarate),
                        "number" == typeof r.width && (this._mediaInfo.width = r.width),
                        "number" == typeof r.height && (this._mediaInfo.height = r.height),
                        "number" == typeof r.duration) {
                            if (!this._durationOverrided) {
                                var i = Math.floor(r.duration * this._timescale);
                                this._duration = i,
                                this._mediaInfo.duration = i
                            }
                        } else
                            this._mediaInfo.duration = 0;
                        if ("number" == typeof r.framerate) {
                            var n = Math.floor(1e3 * r.framerate);
                            if (n > 0) {
                                var a = n / 1e3;
                                this._referenceFrameRate.fixed = !0,
                                this._referenceFrameRate.fps = a,
                                this._referenceFrameRate.fps_num = n,
                                this._referenceFrameRate.fps_den = 1e3,
                                this._mediaInfo.fps = a
                            }
                        }
                        if ("object" == typeof r.keyframes) {
                            this._mediaInfo.hasKeyframesIndex = !0;
                            var o = r.keyframes;
                            o.times = r.times,
                            o.filepositions = r.filepositions,
                            this._mediaInfo.keyframesIndex = this._parseKeyframesIndex(o),
                            r.keyframes = null
                        } else
                            this._mediaInfo.hasKeyframesIndex = !1;
                        return this._dispatch = !1,
                        this._mediaInfo.metadata = r,
                        this._mediaInfo
                    }
                }
                ,
                r._parseKeyframesIndex = function(e) {
                    for (var t = [], r = [], i = 1; i < e.times.length; i++) {
                        var n = this._timestampBase + Math.floor(1e3 * e.times[i]);
                        t.push(n),
                        r.push(e.filepositions[i])
                    }
                    return {
                        times: t,
                        filepositions: r
                    }
                }
                ,
                r.moofTag = function(e) {
                    for (var t = 0; t < e.length; t++)
                        this._dispatch = !0,
                        this.parseChunks(e[t]);
                    this._isInitialMetadataDispatched() && this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack)
                }
                ,
                r.parseChunks = function(e) {
                    switch (e.tagType) {
                    case 8:
                        this._parseAudioData(e.body.buffer, 0, e.body.length, e.getTime());
                        break;
                    case 9:
                        this._parseVideoData(e.body.buffer, 0, e.body.length, e.getTime(), 0);
                        break;
                    case 18:
                        this.parseMetadata(e.body)
                    }
                }
                ,
                r._parseVideoData = function(e, t, r, i, n) {
                    if (i == this._timestampBase && 0 != this._timestampBase)
                        throw new f(i,this._timestampBase,"夭寿啦这个视频不是从0开始");
                    if (!(r <= 1)) {
                        var a = new Uint8Array(e,t,r)[0]
                          , o = (240 & a) >>> 4
                          , s = 15 & a;
                        7 === s ? this._parseAVCVideoPacket(e, t + 1, r - 1, i, n, o) : this._onError && this._onError("Flv: Unsupported codec in video frame: " + s)
                    }
                }
                ,
                r._parseAVCVideoPacket = function(e, t, r, i, n, a) {
                    if (!(r < 4)) {
                        var o = this._littleEndian
                          , s = new DataView(e,t,r)
                          , u = s.getUint8(0)
                          , h = 16777215 & s.getUint32(0, !o);
                        if (0 === u)
                            this._parseAVCDecoderConfigurationRecord(e, t + 4, r - 4);
                        else if (1 === u)
                            this._parseAVCVideoData(e, t + 4, r - 4, i, n, a, h);
                        else if (2 !== u)
                            return void this._onError("Flv: Invalid video packet type " + u)
                    }
                }
                ,
                r._parseAVCDecoderConfigurationRecord = function(e, t, r) {
                    if (!(r < 7)) {
                        var i = this._videoMetadata
                          , n = this._videoTrack
                          , a = this._littleEndian
                          , o = new DataView(e,t,r);
                        i ? i.avcc : ((i = this._videoMetadata = {}).type = "video",
                        i.id = n.id,
                        i.timescale = this._timescale,
                        i.duration = this._duration);
                        var u = o.getUint8(0)
                          , h = o.getUint8(1);
                        if (o.getUint8(2),
                        o.getUint8(3),
                        1 === u && 0 !== h)
                            if (this._naluLengthSize = 1 + (3 & o.getUint8(4)),
                            3 === this._naluLengthSize || 4 === this._naluLengthSize) {
                                var d = 31 & o.getUint8(5);
                                if (0 === d || d > 1)
                                    this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid H264 SPS count: " + d);
                                else {
                                    for (var f = 6, c = 0; c < d; c++) {
                                        var l = o.getUint16(f, !a);
                                        if (f += 2,
                                        0 !== l) {
                                            var p = new Uint8Array(e,t + f,l);
                                            f += l;
                                            var m = s.parseSPS(p);
                                            i.codecWidth = m.codec_size.width,
                                            i.codecHeight = m.codec_size.height,
                                            i.presentWidth = m.present_size.width,
                                            i.presentHeight = m.present_size.height,
                                            i.config = m,
                                            i.profile = m.profile_string,
                                            i.level = m.level_string,
                                            i.bitDepth = m.bit_depth,
                                            i.chromaFormat = m.chroma_format,
                                            i.sarRatio = m.sar_ratio,
                                            i.frameRate = m.frame_rate,
                                            !1 !== m.frame_rate.fixed && 0 !== m.frame_rate.fps_num && 0 !== m.frame_rate.fps_den || (i.frameRate = this._referenceFrameRate);
                                            var g = i.frameRate.fps_den
                                              , v = i.frameRate.fps_num;
                                            i.refSampleDuration = Math.floor(i.timescale * (g / v));
                                            for (var y = p.subarray(1, 4), b = "avc1.", w = 0; w < 3; w++) {
                                                var _ = y[w].toString(16);
                                                _.length < 2 && (_ = "0" + _),
                                                b += _
                                            }
                                            i.codec = b;
                                            var S = this._mediaInfo;
                                            S.width = i.codecWidth,
                                            S.height = i.codecHeight,
                                            S.fps = i.frameRate.fps,
                                            S.profile = i.profile,
                                            S.level = i.level,
                                            S.chromaFormat = m.chroma_format_string,
                                            S.sarNum = i.sarRatio.width,
                                            S.sarDen = i.sarRatio.height,
                                            S.videoCodec = b,
                                            S.meta = i,
                                            S.hasAudio ? null != S.audioCodec && (S.mimeType = 'video/x-flv; codecs="' + S.videoCodec + "," + S.audioCodec + '"') : S.mimeType = 'video/x-flv; codecs="' + S.videoCodec + '"',
                                            S.isComplete() && this._onMediaInfo(S)
                                        }
                                    }
                                    var E = o.getUint8(f);
                                    if (0 === E || E > 1)
                                        this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid H264 PPS count: " + E);
                                    else {
                                        f++;
                                        for (var A = 0; A < E; A++) {
                                            var R = o.getUint16(f, !a);
                                            f += 2,
                                            0 !== R && (f += R)
                                        }
                                        i.avcc = new Uint8Array(r),
                                        i.avcc.set(new Uint8Array(e,t,r), 0),
                                        this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._videoInitialMetadataDispatched = !0,
                                        this._dispatch = !1,
                                        this._onTrackMetadata("video", i)
                                    }
                                }
                            } else
                                this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Strange NaluLengthSizeMinusOne: " + (this._naluLengthSize - 1));
                        else
                            this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid AVCDecoderConfigurationRecord")
                    }
                }
                ,
                r.timestampBase = function(e) {
                    this._timestampBase = e
                }
                ,
                r._parseAVCVideoData = function(e, t, r, i, n, a, o) {
                    for (var s = this._littleEndian, u = new DataView(e,t,r), h = [], d = 0, f = 0, c = this._naluLengthSize, l = this._timestampBase + i, p = 1 === a; f < r && !(f + 4 >= r); ) {
                        var m = u.getUint32(f, !s);
                        if (3 === c && (m >>>= 8),
                        m > r - c)
                            return;
                        var g = 31 & u.getUint8(f + c);
                        5 === g && (p = !0);
                        var v = new Uint8Array(e,t + f,c + m)
                          , y = {
                            type: g,
                            data: v
                        };
                        h.push(y),
                        d += v.byteLength,
                        f += c + m
                    }
                    if (h.length) {
                        var b = this._videoTrack
                          , w = {
                            units: h,
                            length: d,
                            isKeyframe: p,
                            dts: l,
                            cts: o,
                            pts: l + o
                        };
                        p && (w.fileposition = n),
                        b.samples.push(w),
                        b.length += d
                    }
                }
                ,
                r._parseAudioData = function(e, t, r, i) {
                    if (i == this._timestampBase && this._timestampBase,
                    !(r <= 1)) {
                        var n = this._audioMetadata
                          , a = this._audioTrack;
                        if (!n || !n.codec) {
                            (n = this._audioMetadata = {}).type = "audio",
                            n.id = a.id,
                            n.timescale = this._timescale,
                            n.duration = this._duration,
                            this._littleEndian;
                            var o = new DataView(e,t,r).getUint8(0)
                              , s = o >>> 4;
                            if (10 !== s)
                                return void this._onError(DemuxErrors.CODEC_UNSUPPORTED, "Flv: Unsupported audio codec idx: " + s);
                            var u = 0
                              , h = (12 & o) >>> 2
                              , d = [5500, 11025, 22050, 44100, 48e3];
                            if (!(h < d.length))
                                return void this._onError(DemuxErrors.FORMAT_ERROR, "Flv: Invalid audio sample rate idx: " + h);
                            u = d[h];
                            var f = 1 & o;
                            n.audioSampleRate = u,
                            n.channelCount = 0 === f ? 1 : 2,
                            n.refSampleDuration = Math.floor(1024 / n.audioSampleRate * n.timescale),
                            n.codec = "mp4a.40.5"
                        }
                        var c = this._parseAACAudioData(e, t + 1, r - 1);
                        if (null != c) {
                            if (0 === c.packetType) {
                                n.config;
                                var l = c.data;
                                n.audioSampleRate = l.samplingRate,
                                n.channelCount = l.channelCount,
                                n.codec = l.codec,
                                n.config = l.config,
                                n.refSampleDuration = Math.floor(1024 / n.audioSampleRate * n.timescale),
                                this._isInitialMetadataDispatched() ? this._dispatch && (this._audioTrack.length || this._videoTrack.length) && this._onDataAvailable(this._audioTrack, this._videoTrack) : this._audioInitialMetadataDispatched = !0,
                                this._dispatch = !1;
                                var p = this._mediaInfo;
                                return p.audioCodec = "mp4a.40." + l.originalAudioObjectType,
                                p.audioSampleRate = n.audioSampleRate,
                                p.audioChannelCount = n.channelCount,
                                p.hasVideo ? null != p.videoCodec && (p.mimeType = 'video/x-flv; codecs="' + p.videoCodec + "," + p.audioCodec + '"') : p.mimeType = 'video/x-flv; codecs="' + p.audioCodec + '"',
                                this._onTrackMetadata("audio", n),
                                void (p.isComplete() && this._onMediaInfo(p))
                            }
                            if (1 === c.packetType) {
                                var m = this._timestampBase + i
                                  , g = {
                                    unit: c.data,
                                    dts: m,
                                    pts: m
                                };
                                a.samples.push(g),
                                a.length += c.data.length
                            }
                        }
                    }
                }
                ,
                r._parseAACAudioData = function(e, t, r) {
                    if (!(r <= 1)) {
                        var i = {}
                          , n = new Uint8Array(e,t,r);
                        return i.packetType = n[0],
                        0 === n[0] ? i.data = this._parseAACAudioSpecificConfig(e, t + 1, r - 1) : i.data = n.subarray(1),
                        i
                    }
                }
                ,
                r._parseAACAudioSpecificConfig = function(e, t, r) {
                    var i, n, a = new Uint8Array(e,t,r), o = null, s = [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350], u = 0, h = null;
                    if (u = i = a[0] >>> 3,
                    (n = (7 & a[0]) << 1 | a[1] >>> 7) < 0 || n >= s.length)
                        this._onError(DemuxErrors.FORMAT_ERROR, "Flv: AAC invalid sampling frequency index!");
                    else {
                        var d = s[n]
                          , f = (120 & a[1]) >>> 3;
                        if (!(f < 0 || f >= 8)) {
                            5 === u && (h = (7 & a[1]) << 1 | a[2] >>> 7);
                            var c = self.navigator.userAgent.toLowerCase();
                            return -1 !== c.indexOf("firefox") ? n >= 6 ? (u = 5,
                            o = new Array(4),
                            h = n - 3) : (u = 2,
                            o = new Array(2),
                            h = n) : -1 !== c.indexOf("android") ? (u = 2,
                            o = new Array(2),
                            h = n) : (u = 5,
                            h = n,
                            o = new Array(4),
                            n >= 6 ? h = n - 3 : 1 === f && (u = 2,
                            o = new Array(2),
                            h = n)),
                            o[0] = u << 3,
                            o[0] |= (15 & n) >>> 1,
                            o[1] = (15 & n) << 7,
                            o[1] |= (15 & f) << 3,
                            5 === u && (o[1] |= (15 & h) >>> 1,
                            o[2] = (1 & h) << 7,
                            o[2] |= 8,
                            o[3] = 0),
                            {
                                config: o,
                                samplingRate: d,
                                channelCount: f,
                                codec: "mp4a.40." + u,
                                originalAudioObjectType: i
                            }
                        }
                        this._onError(DemuxErrors.FORMAT_ERROR, "Flv: AAC invalid channel configuration")
                    }
                }
                ,
                r._isInitialMetadataDispatched = function() {
                    return this._hasAudio && this._hasVideo ? this._audioInitialMetadataDispatched && this._videoInitialMetadataDispatched : this._hasAudio && !this._hasVideo ? this._audioInitialMetadataDispatched : !this._hasAudio && this._hasVideo ? this._videoInitialMetadataDispatched : void 0
                }
                ,
                t(e, [{
                    key: "hasAudio",
                    set: function(e) {
                        this._mediaInfo.hasAudio = this._hasAudio = e
                    }
                }, {
                    key: "hasVideo",
                    set: function(e) {
                        this._mediaInfo.hasVideo = this._hasVideo = e
                    }
                }]),
                e
            }()
              , l = function() {
                function e() {
                    this.tempUint8 = new Uint8Array,
                    this.arrTag = [],
                    this.index = 0,
                    this.tempArr = [],
                    this.stop = !1,
                    this.offset = 0,
                    this.frist = !0,
                    this._hasAudio = !1,
                    this._hasVideo = !1,
                    this._dispose = !1,
                    this.busy = !1,
                    this.busyArr = []
                }
                var t = e.prototype;
                return t.setFlv = function(e) {
                    return this.busy = !0,
                    this._dispose = !1,
                    this.stop = !1,
                    this.arrTag = [],
                    this.index = 0,
                    this.tempUint8 = e,
                    this.tempUint8.length > 13 && 70 == this.tempUint8[0] && 76 == this.tempUint8[1] && 86 == this.tempUint8[2] ? (this.probe(this.tempUint8.buffer),
                    this.read(9),
                    this.read(4),
                    this.parse(),
                    this.frist = !1,
                    this.busy = !1,
                    this.offset) : this.frist ? this.offset : (this.parse(),
                    this.offset)
                }
                ,
                t.probe = function(e) {
                    var t = new Uint8Array(e)
                      , r = {
                        match: !1
                    };
                    if (70 !== t[0] || 76 !== t[1] || 86 !== t[2] || 1 !== t[3])
                        return r;
                    var i = (4 & t[4]) >>> 2 != 0
                      , n = 0 != (1 & t[4]);
                    return i || n ? (this._hasAudio = c._hasAudio = i,
                    this._hasVideo = c._hasVideo = n,
                    {
                        match: !0,
                        hasAudioTrack: i,
                        hasVideoTrack: n
                    }) : r
                }
                ,
                t.dispose = function() {}
                ,
                t.parse = function() {
                    for (; this.index < this.tempUint8.length && !this.stop; ) {
                        this.offset = this.index;
                        var e = new i;
                        if (this.tempUint8.length - this.index >= 11) {
                            if (e.tagType = this.read(1)[0],
                            e.dataSize = this.read(3),
                            e.Timestamp = this.read(4),
                            e.StreamID = this.read(3),
                            18 != e.tagType && 8 != e.tagType && 9 != e.tagType)
                                throw new f("wrong tagType" + e.tagType);
                            this.tempUint8.length - this.index >= this.getBodySum(e.dataSize) + 4 ? (e.body = this.read(this.getBodySum(e.dataSize)),
                            9 == e.tagType && this._hasVideo && this.arrTag.push(e),
                            8 == e.tagType && this._hasAudio && this.arrTag.push(e),
                            18 == e.tagType && 0 == this.arrTag.length && this.arrTag.push(e),
                            e.size = this.read(4),
                            this.offset = this.index) : this.stop = !0
                        } else
                            this.stop = !0
                    }
                    return this.offset
                }
                ,
                t.read = function(e) {
                    var t = this.tempUint8.slice(this.index, this.index + e);
                    return this.index += e,
                    t
                }
                ,
                t.getBodySum = function(e) {
                    var t = "";
                    return t += 1 == e[0].toString(16).length ? "0" + e[0].toString(16) : e[0].toString(16),
                    t += 1 == e[1].toString(16).length ? "0" + e[1].toString(16) : e[1].toString(16),
                    t += 1 == e[2].toString(16).length ? "0" + e[2].toString(16) : e[2].toString(16),
                    parseInt(t, 16)
                }
                ,
                e
            }()
              , p = function() {
                function e() {}
                return e.init = function() {
                    for (var t in e.types = {
                        avc1: [],
                        avcC: [],
                        btrt: [],
                        dinf: [],
                        dref: [],
                        esds: [],
                        ftyp: [],
                        hdlr: [],
                        mdat: [],
                        mdhd: [],
                        mdia: [],
                        mfhd: [],
                        minf: [],
                        moof: [],
                        moov: [],
                        mp4a: [],
                        mvex: [],
                        mvhd: [],
                        sdtp: [],
                        stbl: [],
                        stco: [],
                        stsc: [],
                        stsd: [],
                        stsz: [],
                        stts: [],
                        tfdt: [],
                        tfhd: [],
                        traf: [],
                        trak: [],
                        trun: [],
                        trex: [],
                        tkhd: [],
                        vmhd: [],
                        smhd: []
                    },
                    e.types)
                        e.types.hasOwnProperty(t) && (e.types[t] = [t.charCodeAt(0), t.charCodeAt(1), t.charCodeAt(2), t.charCodeAt(3)]);
                    var r = e.constants = {};
                    r.FTYP = new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49]),
                    r.STSD_PREFIX = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1]),
                    r.STTS = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                    r.STSC = r.STCO = r.STTS,
                    r.STSZ = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                    r.HDLR_VIDEO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]),
                    r.HDLR_AUDIO = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 115, 111, 117, 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]),
                    r.DREF = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]),
                    r.SMHD = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]),
                    r.VMHD = new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])
                }
                ,
                e.box = function(e) {
                    for (var t = 8, r = null, i = Array.prototype.slice.call(arguments, 1), n = i.length, a = 0; a < n; a++)
                        t += i[a].byteLength;
                    (r = new Uint8Array(t))[0] = t >>> 24 & 255,
                    r[1] = t >>> 16 & 255,
                    r[2] = t >>> 8 & 255,
                    r[3] = 255 & t,
                    r.set(e, 4);
                    for (var o = 8, s = 0; s < n; s++)
                        r.set(i[s], o),
                        o += i[s].byteLength;
                    return r
                }
                ,
                e.generateInitSegment = function(t) {
                    t.constructor != Array && (t = [t]);
                    var r = e.box(e.types.ftyp, e.constants.FTYP)
                      , i = e.moov(t)
                      , n = new Uint8Array(r.byteLength + i.byteLength);
                    return n.set(r, 0),
                    n.set(i, r.byteLength),
                    n
                }
                ,
                e.moov = function(t) {
                    var r, i = e.mvhd(t[0].timescale, t[0].duration), n = e.trak(t[0]);
                    t.length > 1 && (r = e.trak(t[1]));
                    var a = e.mvex(t);
                    return t.length > 1 ? e.box(e.types.moov, i, n, r, a) : e.box(e.types.moov, i, n, a)
                }
                ,
                e.mvhd = function(t, r) {
                    return e.box(e.types.mvhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]))
                }
                ,
                e.trak = function(t) {
                    return e.box(e.types.trak, e.tkhd(t), e.mdia(t))
                }
                ,
                e.tkhd = function(t) {
                    var r = t.id
                      , i = t.duration
                      , n = t.presentWidth
                      , a = t.presentHeight;
                    return e.box(e.types.tkhd, new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, n >>> 8 & 255, 255 & n, 0, 0, a >>> 8 & 255, 255 & a, 0, 0]))
                }
                ,
                e.mdia = function(t) {
                    return e.box(e.types.mdia, e.mdhd(t), e.hdlr(t), e.minf(t))
                }
                ,
                e.mdhd = function(t) {
                    var r = t.timescale
                      , i = t.duration;
                    return e.box(e.types.mdhd, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 85, 196, 0, 0]))
                }
                ,
                e.hdlr = function(t) {
                    var r = null;
                    return r = "audio" === t.type ? e.constants.HDLR_AUDIO : e.constants.HDLR_VIDEO,
                    e.box(e.types.hdlr, r)
                }
                ,
                e.minf = function(t) {
                    var r = null;
                    return r = "audio" === t.type ? e.box(e.types.smhd, e.constants.SMHD) : e.box(e.types.vmhd, e.constants.VMHD),
                    e.box(e.types.minf, r, e.dinf(), e.stbl(t))
                }
                ,
                e.dinf = function() {
                    return e.box(e.types.dinf, e.box(e.types.dref, e.constants.DREF))
                }
                ,
                e.stbl = function(t) {
                    return e.box(e.types.stbl, e.stsd(t), e.box(e.types.stts, e.constants.STTS), e.box(e.types.stsc, e.constants.STSC), e.box(e.types.stsz, e.constants.STSZ), e.box(e.types.stco, e.constants.STCO))
                }
                ,
                e.stsd = function(t) {
                    return "audio" === t.type ? e.box(e.types.stsd, e.constants.STSD_PREFIX, e.mp4a(t)) : e.box(e.types.stsd, e.constants.STSD_PREFIX, e.avc1(t))
                }
                ,
                e.mp4a = function(t) {
                    var r = t.channelCount
                      , i = t.audioSampleRate
                      , n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, r, 0, 16, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, 0, 0]);
                    return e.box(e.types.mp4a, n, e.esds(t))
                }
                ,
                e.esds = function(t) {
                    var r = t.config
                      , i = r.length
                      , n = new Uint8Array([0, 0, 0, 0, 3, 23 + i, 0, 1, 0, 4, 15 + i, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([i]).concat(r).concat([6, 1, 2]));
                    return e.box(e.types.esds, n)
                }
                ,
                e.avc1 = function(t) {
                    var r = t.avcc
                      , i = t.codecWidth
                      , n = t.codecHeight
                      , a = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 8 & 255, 255 & i, n >>> 8 & 255, 255 & n, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 4, 103, 49, 49, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255]);
                    return e.box(e.types.avc1, a, e.box(e.types.avcC, r))
                }
                ,
                e.mvex = function(t) {
                    return t.length > 1 ? e.box(e.types.mvex, e.trex(t[0]), e.trex(t[1])) : e.box(e.types.mvex, e.trex(t[0]))
                }
                ,
                e.trex = function(t) {
                    var r = t.id
                      , i = new Uint8Array([0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
                    return e.box(e.types.trex, i)
                }
                ,
                e.moof = function(t, r) {
                    return e.box(e.types.moof, e.mfhd(t.sequenceNumber), e.traf(t, r))
                }
                ,
                e.mfhd = function(t) {
                    var r = new Uint8Array([0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t]);
                    return e.box(e.types.mfhd, r)
                }
                ,
                e.traf = function(t, r) {
                    var i = t.id
                      , n = e.box(e.types.tfhd, new Uint8Array([0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i]))
                      , a = e.box(e.types.tfdt, new Uint8Array([0, 0, 0, 0, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r]))
                      , o = e.sdtp(t)
                      , s = e.trun(t, o.byteLength + 16 + 16 + 8 + 16 + 8 + 8);
                    return e.box(e.types.traf, n, a, s, o)
                }
                ,
                e.sdtp = function(t) {
                    for (var r = t.samples || [], i = r.length, n = new Uint8Array(4 + i), a = 0; a < i; a++) {
                        var o = r[a].flags;
                        n[a + 4] = o.isLeading << 6 | o.dependsOn << 4 | o.isDependedOn << 2 | o.hasRedundancy
                    }
                    return e.box(e.types.sdtp, n)
                }
                ,
                e.trun = function(t, r) {
                    var i = t.samples || []
                      , n = i.length
                      , a = 12 + 16 * n
                      , o = new Uint8Array(a);
                    r += 8 + a,
                    o.set([0, 0, 15, 1, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, r >>> 24 & 255, r >>> 16 & 255, r >>> 8 & 255, 255 & r], 0);
                    for (var s = 0; s < n; s++) {
                        var u = i[s].duration
                          , h = i[s].size
                          , d = i[s].flags
                          , f = i[s].cts;
                        o.set([u >>> 24 & 255, u >>> 16 & 255, u >>> 8 & 255, 255 & u, h >>> 24 & 255, h >>> 16 & 255, h >>> 8 & 255, 255 & h, d.isLeading << 2 | d.dependsOn, d.isDependedOn << 6 | d.hasRedundancy << 4 | d.isNonSync, 0, 0, f >>> 24 & 255, f >>> 16 & 255, f >>> 8 & 255, 255 & f], 12 + 16 * s)
                    }
                    return e.box(e.types.trun, o)
                }
                ,
                e.mdat = function(t) {
                    return e.box(e.types.mdat, t)
                }
                ,
                e
            }()
              , m = function() {
                function e() {}
                return e.getSilentFrame = function(e) {
                    return 1 === e ? new Uint8Array([0, 200, 0, 128, 35, 128]) : 2 === e ? new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]) : 3 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]) : 4 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]) : 5 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]) : 6 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]) : null
                }
                ,
                e
            }()
              , g = {};
            !function() {
                var e = self.navigator.userAgent.toLowerCase()
                  , t = /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []
                  , r = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || []
                  , i = {
                    browser: t[5] || t[3] || t[1] || "",
                    version: t[2] || t[4] || "0",
                    majorVersion: t[4] || t[2] || "0",
                    platform: r[0] || ""
                }
                  , n = {};
                if (i.browser) {
                    n[i.browser] = !0;
                    var a = i.majorVersion.split(".");
                    n.version = {
                        major: parseInt(i.majorVersion, 10),
                        string: i.version
                    },
                    a.length > 1 && (n.version.minor = parseInt(a[1], 10)),
                    a.length > 2 && (n.version.build = parseInt(a[2], 10))
                }
                for (var o in i.platform && (n[i.platform] = !0),
                (n.chrome || n.opr || n.safari) && (n.webkit = !0),
                (n.rv || n.iemobile) && (n.rv && delete n.rv,
                i.browser = "msie",
                n.msie = !0),
                n.edge && (delete n.edge,
                i.browser = "msedge",
                n.msedge = !0),
                n.opr && (i.browser = "opera",
                n.opera = !0),
                n.safari && n.android && (i.browser = "android",
                n.android = !0),
                n.name = i.browser,
                n.platform = i.platform,
                g)
                    g.hasOwnProperty(o) && delete g[o];
                g = n
            }();
            var y = g
              , b = function(e, t, r, i, n) {
                this.dts = e,
                this.pts = t,
                this.duration = r,
                this.originalDts = i,
                this.isSyncPoint = n,
                this.fileposition = null
            }
              , w = function() {
                function e() {
                    this.beginDts = 0,
                    this.endDts = 0,
                    this.beginPts = 0,
                    this.endPts = 0,
                    this.originalBeginDts = 0,
                    this.originalEndDts = 0,
                    this.syncPoints = [],
                    this.firstSample = null,
                    this.lastSample = null
                }
                return e.prototype.appendSyncPoint = function(e) {
                    e.isSyncPoint = !0,
                    this.syncPoints.push(e)
                }
                ,
                e
            }()
              , _ = function() {
                function e(e) {
                    this._type = e,
                    this._list = [],
                    this._lastAppendLocation = -1
                }
                var r = e.prototype;
                return r.isEmpty = function() {
                    return 0 === this._list.length
                }
                ,
                r.clear = function() {
                    this._list = [],
                    this._lastAppendLocation = -1
                }
                ,
                r._searchNearestSegmentBefore = function(e) {
                    var t = this._list;
                    if (0 === t.length)
                        return -2;
                    var r = t.length - 1
                      , i = 0
                      , n = 0
                      , a = r
                      , o = 0;
                    if (e < t[0].originalBeginDts)
                        return o = -1;
                    for (; n <= a; ) {
                        if ((i = n + Math.floor((a - n) / 2)) === r || e > t[i].lastSample.originalDts && e < t[i + 1].originalBeginDts) {
                            o = i;
                            break
                        }
                        t[i].originalBeginDts < e ? n = i + 1 : a = i - 1
                    }
                    return o
                }
                ,
                r._searchNearestSegmentAfter = function(e) {
                    return this._searchNearestSegmentBefore(e) + 1
                }
                ,
                r.append = function(e) {
                    var t = this._list
                      , r = e
                      , i = this._lastAppendLocation
                      , n = 0;
                    -1 !== i && i < t.length && r.originalBeginDts >= t[i].lastSample.originalDts && (i === t.length - 1 || i < t.length - 1 && r.originalBeginDts < t[i + 1].originalBeginDts) ? n = i + 1 : t.length > 0 && (n = this._searchNearestSegmentBefore(r.originalBeginDts) + 1),
                    this._lastAppendLocation = n,
                    this._list.splice(n, 0, r)
                }
                ,
                r.getLastSegmentBefore = function(e) {
                    var t = this._searchNearestSegmentBefore(e);
                    return t >= 0 ? this._list[t] : null
                }
                ,
                r.getLastSampleBefore = function(e) {
                    var t = this.getLastSegmentBefore(e);
                    return null != t ? t.lastSample : null
                }
                ,
                r.getLastSyncPointBefore = function(e) {
                    for (var t = this._searchNearestSegmentBefore(e), r = this._list[t].syncPoints; 0 === r.length && t > 0; )
                        t--,
                        r = this._list[t].syncPoints;
                    return r.length > 0 ? r[r.length - 1] : null
                }
                ,
                t(e, [{
                    key: "type",
                    get: function() {
                        return this._type
                    }
                }, {
                    key: "length",
                    get: function() {
                        return this._list.length
                    }
                }]),
                e
            }()
              , S = function() {
                function e(e) {
                    this.TAG = "MP4Remuxer",
                    this._config = e,
                    this._isLive = !0 === e.isLive,
                    this._dtsBase = -1,
                    this._dtsBaseInited = !1,
                    this._audioDtsBase = 1 / 0,
                    this._videoDtsBase = 1 / 0,
                    this._audioNextDts = void 0,
                    this._videoNextDts = void 0,
                    this._audioMeta = null,
                    this._videoMeta = null,
                    this._audioSegmentInfoList = new _("audio"),
                    this._videoSegmentInfoList = new _("video"),
                    this._onInitSegment = null,
                    this._onMediaSegment = null,
                    this._forceFirstIDR = !(!y.chrome || !(y.version.major < 50 || 50 === y.version.major && y.version.build < 2661)),
                    this._fillSilentAfterSeek = y.msedge || y.msie,
                    this._mp3UseMpegAudio = !y.firefox
                }
                var r = e.prototype;
                return r.destroy = function() {
                    this._dtsBase = -1,
                    this._dtsBaseInited = !1,
                    this._audioMeta = null,
                    this._videoMeta = null,
                    this._audioSegmentInfoList.clear(),
                    this._audioSegmentInfoList = null,
                    this._videoSegmentInfoList.clear(),
                    this._videoSegmentInfoList = null,
                    this._onInitSegment = null,
                    this._onMediaSegment = null
                }
                ,
                r.bindDataSource = function(e) {
                    return e.onDataAvailable = this.remux.bind(this),
                    e.onTrackMetadata = this._onTrackMetadataReceived.bind(this),
                    this
                }
                ,
                r.insertDiscontinuity = function() {
                    this._audioNextDts = this._videoNextDts = void 0
                }
                ,
                r.seek = function(e) {
                    this._videoSegmentInfoList.clear(),
                    this._audioSegmentInfoList.clear()
                }
                ,
                r.remux = function(e, t) {
                    if (!this._onMediaSegment)
                        throw new IllegalStateException("MP4Remuxer: onMediaSegment callback must be specificed!");
                    this._dtsBaseInited || this._calculateDtsBase(e, t),
                    this._remuxVideo(t),
                    this._remuxAudio(e)
                }
                ,
                r._onTrackMetadataReceived = function(e, t) {
                    var r = null
                      , i = "mp4"
                      , n = t.codec;
                    if ("audio" === e)
                        this._audioMeta = t,
                        "mp3" === t.codec && this._mp3UseMpegAudio ? (i = "mpeg",
                        n = "",
                        r = new Uint8Array) : r = p.generateInitSegment(t);
                    else {
                        if ("video" !== e)
                            return;
                        this._videoMeta = t,
                        r = p.generateInitSegment(t)
                    }
                    if (!this._onInitSegment)
                        throw new IllegalStateException("MP4Remuxer: onInitSegment callback must be specified!");
                    this._onInitSegment(e, {
                        type: e,
                        data: r.buffer,
                        codec: n,
                        container: e + "/" + i,
                        mediaDuration: t.duration
                    })
                }
                ,
                r._calculateDtsBase = function(e, t) {
                    this._dtsBaseInited || (e.samples && e.samples.length && (this._audioDtsBase = e.samples[0].dts),
                    t.samples && t.samples.length && (this._videoDtsBase = t.samples[0].dts),
                    this._dtsBase = Math.min(this._audioDtsBase, this._videoDtsBase),
                    this._dtsBaseInited = !0)
                }
                ,
                r._remuxAudio = function(e) {
                    if (null != this._audioMeta) {
                        var t, r = e, i = r.samples, n = void 0, a = -1, o = this._audioMeta.refSampleDuration, s = "mp3" === this._audioMeta.codec && this._mp3UseMpegAudio, u = this._dtsBaseInited && void 0 === this._audioNextDts, h = !1;
                        if (i && !(i.length <= 1)) {
                            var d = 0
                              , f = null
                              , c = 0;
                            s ? (d = 0,
                            c = r.length) : (d = 8,
                            c = 8 + r.length);
                            var l = i[0].dts - this._dtsBase;
                            if (this._audioNextDts)
                                n = l - this._audioNextDts;
                            else if (this._audioSegmentInfoList.isEmpty())
                                n = 0,
                                this._fillSilentAfterSeek && !this._videoSegmentInfoList.isEmpty() && "mp3" !== this._audioMeta.originalCodec && (h = !0);
                            else {
                                var g = this._audioSegmentInfoList.getLastSampleBefore(l);
                                if (null != g) {
                                    var v = l - (g.originalDts + g.duration);
                                    v <= 3 && (v = 0),
                                    n = l - (g.dts + g.duration + v)
                                } else
                                    n = 0
                            }
                            if (h) {
                                var y = l - n
                                  , _ = this._videoSegmentInfoList.getLastSegmentBefore(l);
                                if (null != _ && _.beginDts < y) {
                                    var S = m.getSilentFrame(this._audioMeta.originalCodec, this._audioMeta.channelCount);
                                    if (S) {
                                        var E = _.beginDts
                                          , A = y - _.beginDts;
                                        Log.v(this.TAG, "InsertPrefixSilentAudio: dts: " + E + ", duration: " + A),
                                        i.unshift({
                                            unit: S,
                                            dts: E,
                                            pts: E
                                        }),
                                        c += S.byteLength
                                    }
                                } else
                                    h = !1
                            }
                            var R = [];
                            n = 0;
                            for (var k = 0; k + 1 < i.length; k++) {
                                var T = i[k]
                                  , L = (T.unit,
                                T.dts - this._dtsBase)
                                  , x = L - n;
                                -1 === a && (a = x);
                                var B = 0;
                                B = k !== i.length - 1 ? i[k + 1].dts - this._dtsBase - n - x : R.length >= 1 ? R[R.length - 1].duration : Math.floor(o),
                                R.push({
                                    dts: x,
                                    pts: x,
                                    cts: 0,
                                    unit: T.unit,
                                    size: T.unit.byteLength,
                                    duration: B,
                                    originalDts: L,
                                    flags: {
                                        isLeading: 0,
                                        dependsOn: 1,
                                        isDependedOn: 0,
                                        hasRedundancy: 0
                                    }
                                })
                            }
                            if (s)
                                f = new Uint8Array(c);
                            else {
                                for (var D = 8, P = 0; P < R.length; ++P)
                                    D += R[P].size;
                                (f = new Uint8Array(D))[0] = D >>> 24 & 255,
                                f[1] = D >>> 16 & 255,
                                f[2] = D >>> 8 & 255,
                                f[3] = 255 & D,
                                f.set(p.types.mdat, 4)
                            }
                            for (var M = 0; M < R.length; M++) {
                                var U = R[M].unit;
                                f.set(U, d),
                                d += U.byteLength
                            }
                            var I = R[R.length - 1];
                            t = I.dts + I.duration,
                            this._audioNextDts = t;
                            var O = new w;
                            O.beginDts = a,
                            O.endDts = t,
                            O.beginPts = a,
                            O.endPts = t,
                            O.originalBeginDts = R[0].originalDts,
                            O.originalEndDts = I.originalDts + I.duration,
                            O.firstSample = new b(R[0].dts,R[0].pts,R[0].duration,R[0].originalDts,!1),
                            O.lastSample = new b(I.dts,I.pts,I.duration,I.originalDts,!1),
                            this._isLive || this._audioSegmentInfoList.append(O),
                            r.samples = R,
                            r.sequenceNumber++;
                            var C = null;
                            C = s ? new Uint8Array : p.moof(r, a),
                            r.samples = [i[i.length - 1]],
                            r.length = 0;
                            var F = {
                                type: "audio",
                                data: this._mergeBoxes(C, f).buffer,
                                sampleCount: R.length,
                                info: O
                            };
                            s && u && (F.timestampOffset = a),
                            this._onMediaSegment("audio", F)
                        }
                    }
                }
                ,
                r._remuxVideo = function(e) {
                    if (null != this._videoMeta) {
                        var t, r, i = e, n = i.samples, a = void 0, o = -1, s = -1;
                        if (n && !(n.length <= 1)) {
                            var u = n[0].dts - this._dtsBase;
                            if (this._videoNextDts)
                                a = Math.max(u - this._videoNextDts, 0);
                            else if (this._videoSegmentInfoList.isEmpty())
                                a = 0;
                            else {
                                var h = this._videoSegmentInfoList.getLastSampleBefore(u);
                                if (null != h) {
                                    var d = u - (h.originalDts + h.duration);
                                    d <= 3 && (d = 0),
                                    a = u - (h.dts + h.duration + d)
                                } else
                                    a = 0
                            }
                            var f = new w
                              , c = []
                              , l = a;
                            a = 0;
                            for (var m = 0; m + 1 < n.length; m++) {
                                var g = n[m]
                                  , v = g.dts - this._dtsBase - (0 == m ? l : 0)
                                  , y = g.isKeyframe
                                  , _ = v - a
                                  , S = g.cts
                                  , E = _ + S;
                                -1 === o && (o = _,
                                s = E);
                                var A = 0;
                                if (A = m !== n.length - 1 ? n[m + 1].dts - this._dtsBase - a - _ : c.length >= 1 ? c[c.length - 1].duration : Math.floor(this._videoMeta.refSampleDuration),
                                y) {
                                    var R = new b(_,E,A,g.dts,!0);
                                    R.fileposition = g.fileposition,
                                    f.appendSyncPoint(R)
                                }
                                c.push({
                                    dts: _,
                                    pts: E,
                                    cts: S,
                                    units: g.units,
                                    size: g.length,
                                    isKeyframe: y,
                                    duration: A,
                                    originalDts: v,
                                    flags: {
                                        isLeading: 0,
                                        dependsOn: y ? 2 : 1,
                                        isDependedOn: y ? 1 : 0,
                                        hasRedundancy: 0,
                                        isNonSync: y ? 0 : 1
                                    }
                                })
                            }
                            for (var k = 8, T = 8, L = 0; L < c.length; ++L)
                                T += c[L].size;
                            var x = new Uint8Array(T);
                            x[0] = T >>> 24 & 255,
                            x[1] = T >>> 16 & 255,
                            x[2] = T >>> 8 & 255,
                            x[3] = 255 & T,
                            x.set(p.types.mdat, 4);
                            for (var B = 0; B < c.length; B++)
                                for (var D = c[B].units; D.length; ) {
                                    var P = D.shift().data;
                                    x.set(P, k),
                                    k += P.byteLength
                                }
                            var M = c[c.length - 1];
                            if (t = M.dts + M.duration,
                            r = M.pts + M.duration,
                            this._videoNextDts = t,
                            f.beginDts = o,
                            f.endDts = t,
                            f.beginPts = s,
                            f.endPts = r,
                            f.originalBeginDts = c[0].originalDts,
                            f.originalEndDts = M.originalDts + M.duration,
                            f.firstSample = new b(c[0].dts,c[0].pts,c[0].duration,c[0].originalDts,c[0].isKeyframe),
                            f.lastSample = new b(M.dts,M.pts,M.duration,M.originalDts,M.isKeyframe),
                            this._isLive || this._videoSegmentInfoList.append(f),
                            i.samples = c,
                            i.sequenceNumber++,
                            this._forceFirstIDR) {
                                var U = c[0].flags;
                                U.dependsOn = 2,
                                U.isNonSync = 0
                            }
                            var I = p.moof(i, o);
                            i.samples = [n[n.length - 1]],
                            i.length = 0,
                            this._onMediaSegment("video", {
                                type: "video",
                                data: this._mergeBoxes(I, x).buffer,
                                sampleCount: c.length,
                                info: f
                            })
                        }
                    }
                }
                ,
                r._mergeBoxes = function(e, t) {
                    var r = new Uint8Array(e.byteLength + t.byteLength);
                    return r.set(e, 0),
                    r.set(t, e.byteLength),
                    r
                }
                ,
                t(e, [{
                    key: "onInitSegment",
                    get: function() {
                        return this._onInitSegment
                    },
                    set: function(e) {
                        this._onInitSegment = e
                    }
                }, {
                    key: "onMediaSegment",
                    get: function() {
                        return this._onMediaSegment
                    },
                    set: function(e) {
                        this._onMediaSegment = e
                    }
                }]),
                e
            }();
            function E(e) {
                return "string" == typeof e || e instanceof String
            }
            var A = void 0 !== J ? J : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {};
            function R() {
                throw new Error("setTimeout has not been defined")
            }
            function k() {
                throw new Error("clearTimeout has not been defined")
            }
            var T = R
              , L = k;
            function x(e) {
                if (T === setTimeout)
                    return setTimeout(e, 0);
                if ((T === R || !T) && setTimeout)
                    return T = setTimeout,
                    setTimeout(e, 0);
                try {
                    return T(e, 0)
                } catch (t) {
                    try {
                        return T.call(null, e, 0)
                    } catch (t) {
                        return T.call(this, e, 0)
                    }
                }
            }
            "function" == typeof A.setTimeout && (T = setTimeout),
            "function" == typeof A.clearTimeout && (L = clearTimeout);
            var B, D = [], P = !1, M = -1;
            function U() {
                P && B && (P = !1,
                B.length ? D = B.concat(D) : M = -1,
                D.length && I())
            }
            function I() {
                if (!P) {
                    var e = x(U);
                    P = !0;
                    for (var t = D.length; t; ) {
                        for (B = D,
                        D = []; ++M < t; )
                            B && B[M].run();
                        M = -1,
                        t = D.length
                    }
                    B = null,
                    P = !1,
                    function(e) {
                        if (L === clearTimeout)
                            return clearTimeout(e);
                        if ((L === k || !L) && clearTimeout)
                            return L = clearTimeout,
                            clearTimeout(e);
                        try {
                            L(e)
                        } catch (t) {
                            try {
                                return L.call(null, e)
                            } catch (t) {
                                return L.call(this, e)
                            }
                        }
                    }(e)
                }
            }
            function O(e, t) {
                this.fun = e,
                this.array = t
            }
            O.prototype.run = function() {
                this.fun.apply(null, this.array)
            }
            ;
            var C = A.performance || {};
            function F(e, t) {
                return e(t = {
                    exports: {}
                }, t.exports),
                t.exports
            }
            C.now || C.mozNow || C.msNow || C.oNow || C.webkitNow,
            "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : void 0 !== J || "undefined" != typeof self && self;
            var N = F(function(e, t) {
                var r;
                e.exports = (r = "undefined" != typeof window && window.Math === Math ? window : "undefined" != typeof self && self.Math === Math ? self : Function("return this")(),
                "number" == typeof __g && (__g = r),
                r)
            });
            "undefined" != typeof window && window.document,
            function() {
                var e = self.navigator.userAgent.toLowerCase()
                  , t = /(firefox)\/([\w.]+)/.exec(e) || /(edg)\/([\w.]+)/.exec(e) || /(edge)\/([\w.]+)/.exec(e) || /(opr)[\/]([\w.]+)/.exec(e) || /(chrome)[ \/]([\w.]+)/.exec(e) || /(iemobile)[\/]([\w.]+)/.exec(e) || /(version)(applewebkit)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+).*(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(e) || /(webkit)[ \/]([\w.]+)/.exec(e) || /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(e) || /(msie) ([\w.]+)/.exec(e) || e.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(e) || e.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(e) || []
                  , r = /(ipad)/.exec(e) || /(ipod)/.exec(e) || /(windows phone)/.exec(e) || /(iphone)/.exec(e) || /(kindle)/.exec(e) || /(android)/.exec(e) || /(windows)/.exec(e) || /(mac)/.exec(e) || /(linux)/.exec(e) || /(cros)/.exec(e) || []
                  , i = {
                    browser: t[5] || t[3] || t[1] || "",
                    version: t[2] || t[4] || "0",
                    majorVersion: t[4] || t[2] || "0",
                    platform: r[0] || ""
                }
                  , n = {};
                if (i.browser) {
                    n[i.browser] = !0;
                    var a = i.majorVersion.split(".");
                    n.version = {
                        major: parseInt(i.majorVersion, 10),
                        string: i.version
                    },
                    a.length > 1 && (n.version.minor = parseInt(a[1], 10)),
                    a.length > 2 && (n.version.build = parseInt(a[2], 10))
                }
                i.platform && (n[i.platform] = !0),
                (n.chrome || n.opr || n.safari) && (n.webkit = !0),
                (n.rv || n.iemobile) && (n.rv && delete n.rv,
                i.browser = "msie",
                n.msie = !0),
                (n.edge || n.edg) && (delete n.edge,
                i.browser = "msedge",
                n.msedge = !0),
                n.opr && (i.browser = "opera",
                n.opera = !0),
                n.safari && n.android && (i.browser = "android",
                n.android = !0),
                n.name = i.browser,
                n.platform = i.platform
            }();
            var z, j, G, V = void 0 !== N && "[object Object]" !== Object.prototype.toString.call(N), H = (V && (N.requestAnimationFrame || N.mozRequestAnimationFrame || N.webkitRequestAnimationFrame || N.msRequestAnimationFrame || N.oRequestAnimationFrame),
            V && (N.cancelAnimationFrame || N.mozCancelAnimationFrame || N.webkitCancelAnimationFrame || N.webkitCancelRequestAnimationFrame || N.msCancelAnimationFrame || N.oCancelAnimationFrame),
            N.setImmediate || function(e) {
                var t = new Array(arguments.length - 1);
                if (arguments.length > 1)
                    for (var r = 1; r < arguments.length; r++)
                        t[r - 1] = arguments[r];
                D.push(new O(e,t)),
                1 !== D.length || P || x(I)
            }
            ), q = {
                getUserAgent: function() {
                    return navigator.userAgent
                },
                getPlatform: function() {
                    return navigator.platform
                },
                isIos: function() {
                    return /iPhone|iPad|iPod/.test(q.getPlatform())
                },
                isAndroid: function() {
                    return /Android/.test(q.getUserAgent())
                },
                isBlackBerry: function() {
                    return /BlackBerry/.test(q.getPlatform())
                },
                isMac: function() {
                    return /Mac/.test(q.getPlatform())
                },
                isWindows: function() {
                    return /Win/.test(q.getPlatform())
                },
                isLinux: function() {
                    return /Linux/.test(q.getPlatform()) && !q.isAndroid()
                },
                get: function() {
                    return q.isIos() ? "iOS" : q.isAndroid() ? "Android" : q.isBlackBerry() ? "BlackBerry" : q.isMac() ? "Mac" : q.isWindows() ? "Windows" : q.isLinux() ? "Linux" : "Unknown"
                }
            }, K = {
                getUserAgent: function() {
                    return navigator.userAgent
                },
                get: function() {
                    var e = q.get()
                      , t = "Unknown";
                    switch (e) {
                    case "Android":
                        var r = K.getUserAgent().split("Android ");
                        r.length > 1 && (t = r[1].split(";")[0]);
                        break;
                    case "Windows":
                        var i = K.getUserAgent().split("Windows NT ");
                        if (i.length > 1) {
                            var n = i[1];
                            n.startsWith("5.0") ? t = "2000" : n.startsWith("5.1") ? t = "XP" : n.startsWith("5.2") ? t = "Server" : n.startsWith("6.0") ? t = "Vista" : n.startsWith("6.1") ? t = "7" : n.startsWith("6.2") ? t = "8" : n.startsWith("6.3") ? t = "8.1" : n.startsWith("10.0") && (t = "10")
                        }
                        break;
                    case "iOS":
                        var a = K.getUserAgent().split("OS ");
                        a.length > 1 && (t = a[1].split(" ")[0].split("_").join("."));
                        break;
                    case "Mac":
                        var o = K.getUserAgent().split("Mac OS X ");
                        if (o.length > 1) {
                            var s = o[1].indexOf(";")
                              , u = o[1].indexOf(")");
                            u > -1 && (u < s || -1 == s) && (s = u),
                            t = o[1].substring(0, s).split("_").join(".")
                        }
                        break;
                    case "BlackBerry":
                        var h = K.getUserAgent().split("BlackBerry9700/");
                        h.length > 1 ? t = h[1].split(" ")[0] : (h = K.getUserAgent().split("Version/")).length > 1 && (t = h[1].split(" ")[0])
                    }
                    return {
                        os: e,
                        version: t
                    }
                }
            }, W = (K.get(),
            Date.now || function() {
                return +new Date
            }
            ), Y = "function" == typeof WeakMap && (WeakMap.prototype || 0).set ? (z = new WeakMap,
            function(e, t) {
                var r = z.get(e);
                return null === t ? void 0 !== r && z.delete(e) : !r && t ? (z.set(e, r = {}),
                r) : r
            }
            ) : (j = W(),
            G = "__$widΦ" + j.toString(36),
            z = {},
            function(e, t) {
                if (!e || "object" != typeof e)
                    throw TypeError("Invalid host object apply with weak data");
                var r;
                return null === t ? e[G] && (delete z[e[G]],
                delete e[G]) : (r = e[G] || t && (r = ++j,
                z[r] = {},
                e[G] = r)) && z[r]
            }
            ), X = {}.hasOwnProperty;
            function $(e, t) {
                for (var r in e)
                    X.call(e, r) && t(e[r], r)
            }
            var Z = Date.now || function() {
                return +new Date
            }
              , Q = Object.defineProperty
              , ee = Q ? function(e, t, r) {
                return Q(e, t, {
                    writable: !0,
                    value: r
                })
            }
            : function(e, t, r) {
                return e[t] = r
            }
              , te = Object.keys || function(e) {
                var t = [];
                return $(e, function(e, r) {
                    t.push(r)
                }),
                t
            }
              , re = 2
              , ie = 0
              , ne = 1
              , ae = 2
              , oe = /\s+/
              , se = Z() * Math.random() & 65535
              , ue = function(e, t, r) {
                var i = [];
                return i[ie] = e,
                i[ne] = t,
                i[ae] = r,
                i
            };
            function he() {}
            var de = he.prototype;
            function fe(e, t, r) {
                var i;
                switch (r.length) {
                case 0:
                    i = t ? e.call(t) : e();
                    break;
                case 1:
                    i = e.call(t, r[0]);
                    break;
                case 2:
                    i = e.call(t, r[0], r[1]);
                    break;
                default:
                    i = e.apply(t, r)
                }
                return i
            }
            function ce(e, t, r, i) {
                var n = !0;
                if (t)
                    for (var a, o, s, u = -1, h = {
                        type: e,
                        timeStamp: Z(),
                        data: r
                    }; a = t[++u]; ) {
                        o = a[ie],
                        s = a[ne] || i;
                        try {
                            n = a[ae] === re ? !1 !== fe(o, s, [h, r]) && n : !1 !== fe(o, s, r) && n
                        } catch (e) {
                            setTimeout(function() {}, 1)
                        }
                    }
                return n
            }
            de.addListener = function(e, t, r, i) {
                var n, a, o = 1;
                if (t && "object" == typeof t && (t = (r = t).handleEvent,
                o = re),
                !t)
                    return this;
                for (n = Y(this, 1),
                this._events || ee(this, "_events", n),
                e = e.split(oe); a = e.shift(); )
                    (!i && n[a] || (n[a] = [])).push(ue(t, r, o));
                return this
            }
            ,
            de.on = de.addListener,
            de.once = function(e, t, r) {
                var i = !1
                  , n = this
                  , a = function a() {
                    n.removeListener(e, a),
                    i || (i = !0,
                    t.apply(r || n, arguments))
                };
                return a.guid = t.guid || (t.guid = se++),
                n.on(e, a)
            }
            ,
            de.removeListener = function(e, t, r) {
                var i, n, a, o, s, u;
                if (t && "object" == typeof t && (t = (r = t).handleEvent),
                !(i = Y(this)))
                    return this;
                if (!(e || t || r))
                    return $(i, function(e, t) {
                        delete i[t]
                    }),
                    Y(this, null),
                    this;
                for (e = e ? e.split(oe) : te(i); n = e.shift(); )
                    if (a = i[n])
                        if (t || r) {
                            for (o = a.length; --o >= 0; )
                                u = (s = a[o])[ie],
                                t && u !== t && (void 0 === u.guid || u.guid !== t.guid) || r && s[ne] !== r || a.splice(o, 1);
                            a.length || delete i[n]
                        } else
                            delete i[n];
                return function(e) {
                    for (var t in e)
                        if (X.call(e, t))
                            return !1;
                    return !0
                }(i) && Y(this, null),
                this
            }
            ,
            de.off = de.removeListener,
            de.removeAllListeners = function(e) {
                return this.removeListener(e)
            }
            ,
            de.emit = function(e) {
                var t, r, i, n, a = !0;
                if (!(t = Y(this)))
                    return this;
                e = e.split(oe);
                for (var o = arguments.length, s = new Array(o > 1 ? o - 1 : 0), u = 1; u < o; u++)
                    s[u - 1] = arguments[u];
                for (; r = e.shift(); )
                    (i = t.all) && (i = i.slice()),
                    (n = t[r]) && (n = n.slice()),
                    "all" !== r && (a = ce(r, n, s, this) && a),
                    a = ce(r, i, [r].concat(s), this) && a;
                return a
            }
            ,
            de.listenerCount = function(e) {
                var t, r = Y(this);
                return r && (t = r[e]) ? t.length : 0
            }
            ,
            he.EventEmitter = he;
            var le = function(e) {
                function t() {
                    return e.apply(this, arguments) || this
                }
                return r(t, e),
                t.prototype.emit = function(t, r) {
                    var i = Object.assign(Object.create(null), {
                        type: t,
                        data: r,
                        target: this
                    });
                    return e.prototype.emit.call(this, t, i)
                }
                ,
                t
            }(he.EventEmitter);
            V && document.createElement("div");
            try {
                var pe = Object.defineProperty({}, "passive", {
                    get: function() {}
                });
                V && window.addEventListener("test", null, pe)
            } catch (e) {}
            var me = []
              , ge = []
              , ve = "undefined" != typeof Uint8Array ? Uint8Array : Array
              , ye = !1;
            function be() {
                ye = !0;
                for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", t = 0, r = e.length; t < r; ++t)
                    me[t] = e[t],
                    ge[e.charCodeAt(t)] = t;
                ge["-".charCodeAt(0)] = 62,
                ge["_".charCodeAt(0)] = 63
            }
            function we(e, t, r) {
                for (var i, n, a = [], o = t; o < r; o += 3)
                    i = (e[o] << 16) + (e[o + 1] << 8) + e[o + 2],
                    a.push(me[(n = i) >> 18 & 63] + me[n >> 12 & 63] + me[n >> 6 & 63] + me[63 & n]);
                return a.join("")
            }
            function _e(e) {
                var t;
                ye || be();
                for (var r = e.length, i = r % 3, n = "", a = [], o = 0, s = r - i; o < s; o += 16383)
                    a.push(we(e, o, o + 16383 > s ? s : o + 16383));
                return 1 === i ? (t = e[r - 1],
                n += me[t >> 2],
                n += me[t << 4 & 63],
                n += "==") : 2 === i && (t = (e[r - 2] << 8) + e[r - 1],
                n += me[t >> 10],
                n += me[t >> 4 & 63],
                n += me[t << 2 & 63],
                n += "="),
                a.push(n),
                a.join("")
            }
            function Se(e, t, r, i, n) {
                var a, o, s = 8 * n - i - 1, u = (1 << s) - 1, h = u >> 1, d = -7, f = r ? n - 1 : 0, c = r ? -1 : 1, l = e[t + f];
                for (f += c,
                a = l & (1 << -d) - 1,
                l >>= -d,
                d += s; d > 0; a = 256 * a + e[t + f],
                f += c,
                d -= 8)
                    ;
                for (o = a & (1 << -d) - 1,
                a >>= -d,
                d += i; d > 0; o = 256 * o + e[t + f],
                f += c,
                d -= 8)
                    ;
                if (0 === a)
                    a = 1 - h;
                else {
                    if (a === u)
                        return o ? NaN : 1 / 0 * (l ? -1 : 1);
                    o += Math.pow(2, i),
                    a -= h
                }
                return (l ? -1 : 1) * o * Math.pow(2, a - i)
            }
            function Ee(e, t, r, i, n, a) {
                var o, s, u, h = 8 * a - n - 1, d = (1 << h) - 1, f = d >> 1, c = 23 === n ? Math.pow(2, -24) - Math.pow(2, -77) : 0, l = i ? 0 : a - 1, p = i ? 1 : -1, m = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;
                for (t = Math.abs(t),
                isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0,
                o = d) : (o = Math.floor(Math.log(t) / Math.LN2),
                t * (u = Math.pow(2, -o)) < 1 && (o--,
                u *= 2),
                (t += o + f >= 1 ? c / u : c * Math.pow(2, 1 - f)) * u >= 2 && (o++,
                u /= 2),
                o + f >= d ? (s = 0,
                o = d) : o + f >= 1 ? (s = (t * u - 1) * Math.pow(2, n),
                o += f) : (s = t * Math.pow(2, f - 1) * Math.pow(2, n),
                o = 0)); n >= 8; e[r + l] = 255 & s,
                l += p,
                s /= 256,
                n -= 8)
                    ;
                for (o = o << n | s,
                h += n; h > 0; e[r + l] = 255 & o,
                l += p,
                o /= 256,
                h -= 8)
                    ;
                e[r + l - p] |= 128 * m
            }
            var Ae = {}.toString
              , Re = Array.isArray || function(e) {
                return "[object Array]" == Ae.call(e)
            }
            ;
            function ke() {
                return Le.TYPED_ARRAY_SUPPORT ? 2147483647 : 1073741823
            }
            function Te(e, t) {
                if (ke() < t)
                    throw new RangeError("Invalid typed array length");
                return Le.TYPED_ARRAY_SUPPORT ? (e = new Uint8Array(t)).__proto__ = Le.prototype : (null === e && (e = new Le(t)),
                e.length = t),
                e
            }
            function Le(e, t, r) {
                if (!(Le.TYPED_ARRAY_SUPPORT || this instanceof Le))
                    return new Le(e,t,r);
                if ("number" == typeof e) {
                    if ("string" == typeof t)
                        throw new Error("If encoding is specified then the first argument must be a string");
                    return De(this, e)
                }
                return xe(this, e, t, r)
            }
            function xe(e, t, r, i) {
                if ("number" == typeof t)
                    throw new TypeError('"value" argument must not be a number');
                return "undefined" != typeof ArrayBuffer && t instanceof ArrayBuffer ? function(e, t, r, i) {
                    if (t.byteLength,
                    r < 0 || t.byteLength < r)
                        throw new RangeError("'offset' is out of bounds");
                    if (t.byteLength < r + (i || 0))
                        throw new RangeError("'length' is out of bounds");
                    return t = void 0 === r && void 0 === i ? new Uint8Array(t) : void 0 === i ? new Uint8Array(t,r) : new Uint8Array(t,r,i),
                    Le.TYPED_ARRAY_SUPPORT ? (e = t).__proto__ = Le.prototype : e = Pe(e, t),
                    e
                }(e, t, r, i) : "string" == typeof t ? function(e, t, r) {
                    if ("string" == typeof r && "" !== r || (r = "utf8"),
                    !Le.isEncoding(r))
                        throw new TypeError('"encoding" must be a valid string encoding');
                    var i = 0 | Ie(t, r)
                      , n = (e = Te(e, i)).write(t, r);
                    return n !== i && (e = e.slice(0, n)),
                    e
                }(e, t, r) : function(e, t) {
                    if (Ue(t)) {
                        var r = 0 | Me(t.length);
                        return 0 === (e = Te(e, r)).length ? e : (t.copy(e, 0, 0, r),
                        e)
                    }
                    if (t) {
                        if ("undefined" != typeof ArrayBuffer && t.buffer instanceof ArrayBuffer || "length"in t)
                            return "number" != typeof t.length || (i = t.length) != i ? Te(e, 0) : Pe(e, t);
                        if ("Buffer" === t.type && Re(t.data))
                            return Pe(e, t.data)
                    }
                    var i;
                    throw new TypeError("First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.")
                }(e, t)
            }
            function Be(e) {
                if ("number" != typeof e)
                    throw new TypeError('"size" argument must be a number');
                if (e < 0)
                    throw new RangeError('"size" argument must not be negative')
            }
            function De(e, t) {
                if (Be(t),
                e = Te(e, t < 0 ? 0 : 0 | Me(t)),
                !Le.TYPED_ARRAY_SUPPORT)
                    for (var r = 0; r < t; ++r)
                        e[r] = 0;
                return e
            }
            function Pe(e, t) {
                var r = t.length < 0 ? 0 : 0 | Me(t.length);
                e = Te(e, r);
                for (var i = 0; i < r; i += 1)
                    e[i] = 255 & t[i];
                return e
            }
            function Me(e) {
                if (e >= ke())
                    throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + ke().toString(16) + " bytes");
                return 0 | e
            }
            function Ue(e) {
                return !(null == e || !e._isBuffer)
            }
            function Ie(e, t) {
                if (Ue(e))
                    return e.length;
                if ("undefined" != typeof ArrayBuffer && "function" == typeof ArrayBuffer.isView && (ArrayBuffer.isView(e) || e instanceof ArrayBuffer))
                    return e.byteLength;
                "string" != typeof e && (e = "" + e);
                var r = e.length;
                if (0 === r)
                    return 0;
                for (var i = !1; ; )
                    switch (t) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return r;
                    case "utf8":
                    case "utf-8":
                    case void 0:
                        return ut(e).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * r;
                    case "hex":
                        return r >>> 1;
                    case "base64":
                        return ht(e).length;
                    default:
                        if (i)
                            return ut(e).length;
                        t = ("" + t).toLowerCase(),
                        i = !0
                    }
            }
            function Oe(e, t, r) {
                var i = e[t];
                e[t] = e[r],
                e[r] = i
            }
            function Ce(e, t, r, i, n) {
                if (0 === e.length)
                    return -1;
                if ("string" == typeof r ? (i = r,
                r = 0) : r > 2147483647 ? r = 2147483647 : r < -2147483648 && (r = -2147483648),
                r = +r,
                isNaN(r) && (r = n ? 0 : e.length - 1),
                r < 0 && (r = e.length + r),
                r >= e.length) {
                    if (n)
                        return -1;
                    r = e.length - 1
                } else if (r < 0) {
                    if (!n)
                        return -1;
                    r = 0
                }
                if ("string" == typeof t && (t = Le.from(t, i)),
                Ue(t))
                    return 0 === t.length ? -1 : Fe(e, t, r, i, n);
                if ("number" == typeof t)
                    return t &= 255,
                    Le.TYPED_ARRAY_SUPPORT && "function" == typeof Uint8Array.prototype.indexOf ? n ? Uint8Array.prototype.indexOf.call(e, t, r) : Uint8Array.prototype.lastIndexOf.call(e, t, r) : Fe(e, [t], r, i, n);
                throw new TypeError("val must be string, number or Buffer")
            }
            function Fe(e, t, r, i, n) {
                var a, o = 1, s = e.length, u = t.length;
                if (void 0 !== i && ("ucs2" === (i = String(i).toLowerCase()) || "ucs-2" === i || "utf16le" === i || "utf-16le" === i)) {
                    if (e.length < 2 || t.length < 2)
                        return -1;
                    o = 2,
                    s /= 2,
                    u /= 2,
                    r /= 2
                }
                function h(e, t) {
                    return 1 === o ? e[t] : e.readUInt16BE(t * o)
                }
                if (n) {
                    var d = -1;
                    for (a = r; a < s; a++)
                        if (h(e, a) === h(t, -1 === d ? 0 : a - d)) {
                            if (-1 === d && (d = a),
                            a - d + 1 === u)
                                return d * o
                        } else
                            -1 !== d && (a -= a - d),
                            d = -1
                } else
                    for (r + u > s && (r = s - u),
                    a = r; a >= 0; a--) {
                        for (var f = !0, c = 0; c < u; c++)
                            if (h(e, a + c) !== h(t, c)) {
                                f = !1;
                                break
                            }
                        if (f)
                            return a
                    }
                return -1
            }
            function Ne(e, t, r, i) {
                r = Number(r) || 0;
                var n = e.length - r;
                i ? (i = Number(i)) > n && (i = n) : i = n;
                var a = t.length;
                if (a % 2 != 0)
                    throw new TypeError("Invalid hex string");
                i > a / 2 && (i = a / 2);
                for (var o = 0; o < i; ++o) {
                    var s = parseInt(t.substr(2 * o, 2), 16);
                    if (isNaN(s))
                        return o;
                    e[r + o] = s
                }
                return o
            }
            function ze(e, t, r, i) {
                return dt(ut(t, e.length - r), e, r, i)
            }
            function je(e, t, r, i) {
                return dt(function(e) {
                    for (var t = [], r = 0; r < e.length; ++r)
                        t.push(255 & e.charCodeAt(r));
                    return t
                }(t), e, r, i)
            }
            function Ge(e, t, r, i) {
                return je(e, t, r, i)
            }
            function Ve(e, t, r, i) {
                return dt(ht(t), e, r, i)
            }
            function He(e, t, r, i) {
                return dt(function(e, t) {
                    for (var r, i, n, a = [], o = 0; o < e.length && !((t -= 2) < 0); ++o)
                        r = e.charCodeAt(o),
                        i = r >> 8,
                        n = r % 256,
                        a.push(n),
                        a.push(i);
                    return a
                }(t, e.length - r), e, r, i)
            }
            function qe(e, t, r) {
                return 0 === t && r === e.length ? _e(e) : _e(e.slice(t, r))
            }
            function Ke(e, t, r) {
                r = Math.min(e.length, r);
                for (var i = [], n = t; n < r; ) {
                    var a, o, s, u, h = e[n], d = null, f = h > 239 ? 4 : h > 223 ? 3 : h > 191 ? 2 : 1;
                    if (n + f <= r)
                        switch (f) {
                        case 1:
                            h < 128 && (d = h);
                            break;
                        case 2:
                            128 == (192 & (a = e[n + 1])) && (u = (31 & h) << 6 | 63 & a) > 127 && (d = u);
                            break;
                        case 3:
                            a = e[n + 1],
                            o = e[n + 2],
                            128 == (192 & a) && 128 == (192 & o) && (u = (15 & h) << 12 | (63 & a) << 6 | 63 & o) > 2047 && (u < 55296 || u > 57343) && (d = u);
                            break;
                        case 4:
                            a = e[n + 1],
                            o = e[n + 2],
                            s = e[n + 3],
                            128 == (192 & a) && 128 == (192 & o) && 128 == (192 & s) && (u = (15 & h) << 18 | (63 & a) << 12 | (63 & o) << 6 | 63 & s) > 65535 && u < 1114112 && (d = u)
                        }
                    null === d ? (d = 65533,
                    f = 1) : d > 65535 && (d -= 65536,
                    i.push(d >>> 10 & 1023 | 55296),
                    d = 56320 | 1023 & d),
                    i.push(d),
                    n += f
                }
                return function(e) {
                    var t = e.length;
                    if (t <= We)
                        return String.fromCharCode.apply(String, e);
                    for (var r = "", i = 0; i < t; )
                        r += String.fromCharCode.apply(String, e.slice(i, i += We));
                    return r
                }(i)
            }
            Le.TYPED_ARRAY_SUPPORT = void 0 === A.TYPED_ARRAY_SUPPORT || A.TYPED_ARRAY_SUPPORT,
            Le.poolSize = 8192,
            Le._augment = function(e) {
                return e.__proto__ = Le.prototype,
                e
            }
            ,
            Le.from = function(e, t, r) {
                return xe(null, e, t, r)
            }
            ,
            Le.TYPED_ARRAY_SUPPORT && (Le.prototype.__proto__ = Uint8Array.prototype,
            Le.__proto__ = Uint8Array),
            Le.alloc = function(e, t, r) {
                return function(e, t, r, i) {
                    return Be(t),
                    t <= 0 ? Te(e, t) : void 0 !== r ? "string" == typeof i ? Te(e, t).fill(r, i) : Te(e, t).fill(r) : Te(e, t)
                }(null, e, t, r)
            }
            ,
            Le.allocUnsafe = function(e) {
                return De(null, e)
            }
            ,
            Le.allocUnsafeSlow = function(e) {
                return De(null, e)
            }
            ,
            Le.isBuffer = function(e) {
                return null != e && (!!e._isBuffer || ft(e) || function(e) {
                    return "function" == typeof e.readFloatLE && "function" == typeof e.slice && ft(e.slice(0, 0))
                }(e))
            }
            ,
            Le.compare = function(e, t) {
                if (!Ue(e) || !Ue(t))
                    throw new TypeError("Arguments must be Buffers");
                if (e === t)
                    return 0;
                for (var r = e.length, i = t.length, n = 0, a = Math.min(r, i); n < a; ++n)
                    if (e[n] !== t[n]) {
                        r = e[n],
                        i = t[n];
                        break
                    }
                return r < i ? -1 : i < r ? 1 : 0
            }
            ,
            Le.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                case "hex":
                case "utf8":
                case "utf-8":
                case "ascii":
                case "latin1":
                case "binary":
                case "base64":
                case "ucs2":
                case "ucs-2":
                case "utf16le":
                case "utf-16le":
                    return !0;
                default:
                    return !1
                }
            }
            ,
            Le.concat = function(e, t) {
                if (!Re(e))
                    throw new TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length)
                    return Le.alloc(0);
                var r;
                if (void 0 === t)
                    for (t = 0,
                    r = 0; r < e.length; ++r)
                        t += e[r].length;
                var i = Le.allocUnsafe(t)
                  , n = 0;
                for (r = 0; r < e.length; ++r) {
                    var a = e[r];
                    if (!Ue(a))
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    a.copy(i, n),
                    n += a.length
                }
                return i
            }
            ,
            Le.byteLength = Ie,
            Le.prototype._isBuffer = !0,
            Le.prototype.swap16 = function() {
                var e = this.length;
                if (e % 2 != 0)
                    throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var t = 0; t < e; t += 2)
                    Oe(this, t, t + 1);
                return this
            }
            ,
            Le.prototype.swap32 = function() {
                var e = this.length;
                if (e % 4 != 0)
                    throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var t = 0; t < e; t += 4)
                    Oe(this, t, t + 3),
                    Oe(this, t + 1, t + 2);
                return this
            }
            ,
            Le.prototype.swap64 = function() {
                var e = this.length;
                if (e % 8 != 0)
                    throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var t = 0; t < e; t += 8)
                    Oe(this, t, t + 7),
                    Oe(this, t + 1, t + 6),
                    Oe(this, t + 2, t + 5),
                    Oe(this, t + 3, t + 4);
                return this
            }
            ,
            Le.prototype.toString = function() {
                var e = 0 | this.length;
                return 0 === e ? "" : 0 === arguments.length ? Ke(this, 0, e) : function(e, t, r) {
                    var i = !1;
                    if ((void 0 === t || t < 0) && (t = 0),
                    t > this.length)
                        return "";
                    if ((void 0 === r || r > this.length) && (r = this.length),
                    r <= 0)
                        return "";
                    if ((r >>>= 0) <= (t >>>= 0))
                        return "";
                    for (e || (e = "utf8"); ; )
                        switch (e) {
                        case "hex":
                            return $e(this, t, r);
                        case "utf8":
                        case "utf-8":
                            return Ke(this, t, r);
                        case "ascii":
                            return Ye(this, t, r);
                        case "latin1":
                        case "binary":
                            return Xe(this, t, r);
                        case "base64":
                            return qe(this, t, r);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return Ze(this, t, r);
                        default:
                            if (i)
                                throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase(),
                            i = !0
                        }
                }
                .apply(this, arguments)
            }
            ,
            Le.prototype.equals = function(e) {
                if (!Ue(e))
                    throw new TypeError("Argument must be a Buffer");
                return this === e || 0 === Le.compare(this, e)
            }
            ,
            Le.prototype.inspect = function() {
                var e = "";
                return this.length > 0 && (e = this.toString("hex", 0, 50).match(/.{2}/g).join(" "),
                this.length > 50 && (e += " ... ")),
                "<Buffer " + e + ">"
            }
            ,
            Le.prototype.compare = function(e, t, r, i, n) {
                if (!Ue(e))
                    throw new TypeError("Argument must be a Buffer");
                if (void 0 === t && (t = 0),
                void 0 === r && (r = e ? e.length : 0),
                void 0 === i && (i = 0),
                void 0 === n && (n = this.length),
                t < 0 || r > e.length || i < 0 || n > this.length)
                    throw new RangeError("out of range index");
                if (i >= n && t >= r)
                    return 0;
                if (i >= n)
                    return -1;
                if (t >= r)
                    return 1;
                if (this === e)
                    return 0;
                for (var a = (n >>>= 0) - (i >>>= 0), o = (r >>>= 0) - (t >>>= 0), s = Math.min(a, o), u = this.slice(i, n), h = e.slice(t, r), d = 0; d < s; ++d)
                    if (u[d] !== h[d]) {
                        a = u[d],
                        o = h[d];
                        break
                    }
                return a < o ? -1 : o < a ? 1 : 0
            }
            ,
            Le.prototype.includes = function(e, t, r) {
                return -1 !== this.indexOf(e, t, r)
            }
            ,
            Le.prototype.indexOf = function(e, t, r) {
                return Ce(this, e, t, r, !0)
            }
            ,
            Le.prototype.lastIndexOf = function(e, t, r) {
                return Ce(this, e, t, r, !1)
            }
            ,
            Le.prototype.write = function(e, t, r, i) {
                if (void 0 === t)
                    i = "utf8",
                    r = this.length,
                    t = 0;
                else if (void 0 === r && "string" == typeof t)
                    i = t,
                    r = this.length,
                    t = 0;
                else {
                    if (!isFinite(t))
                        throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                    t |= 0,
                    isFinite(r) ? (r |= 0,
                    void 0 === i && (i = "utf8")) : (i = r,
                    r = void 0)
                }
                var n = this.length - t;
                if ((void 0 === r || r > n) && (r = n),
                e.length > 0 && (r < 0 || t < 0) || t > this.length)
                    throw new RangeError("Attempt to write outside buffer bounds");
                i || (i = "utf8");
                for (var a = !1; ; )
                    switch (i) {
                    case "hex":
                        return Ne(this, e, t, r);
                    case "utf8":
                    case "utf-8":
                        return ze(this, e, t, r);
                    case "ascii":
                        return je(this, e, t, r);
                    case "latin1":
                    case "binary":
                        return Ge(this, e, t, r);
                    case "base64":
                        return Ve(this, e, t, r);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return He(this, e, t, r);
                    default:
                        if (a)
                            throw new TypeError("Unknown encoding: " + i);
                        i = ("" + i).toLowerCase(),
                        a = !0
                    }
            }
            ,
            Le.prototype.toJSON = function() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }
            ;
            var We = 4096;
            function Ye(e, t, r) {
                var i = "";
                r = Math.min(e.length, r);
                for (var n = t; n < r; ++n)
                    i += String.fromCharCode(127 & e[n]);
                return i
            }
            function Xe(e, t, r) {
                var i = "";
                r = Math.min(e.length, r);
                for (var n = t; n < r; ++n)
                    i += String.fromCharCode(e[n]);
                return i
            }
            function $e(e, t, r) {
                var i = e.length;
                (!t || t < 0) && (t = 0),
                (!r || r < 0 || r > i) && (r = i);
                for (var n = "", a = t; a < r; ++a)
                    n += st(e[a]);
                return n
            }
            function Ze(e, t, r) {
                for (var i = e.slice(t, r), n = "", a = 0; a < i.length; a += 2)
                    n += String.fromCharCode(i[a] + 256 * i[a + 1]);
                return n
            }
            function Qe(e, t, r) {
                if (e % 1 != 0 || e < 0)
                    throw new RangeError("offset is not uint");
                if (e + t > r)
                    throw new RangeError("Trying to access beyond buffer length")
            }
            function Je(e, t, r, i, n, a) {
                if (!Ue(e))
                    throw new TypeError('"buffer" argument must be a Buffer instance');
                if (t > n || t < a)
                    throw new RangeError('"value" argument is out of bounds');
                if (r + i > e.length)
                    throw new RangeError("Index out of range")
            }
            function et(e, t, r, i) {
                t < 0 && (t = 65535 + t + 1);
                for (var n = 0, a = Math.min(e.length - r, 2); n < a; ++n)
                    e[r + n] = (t & 255 << 8 * (i ? n : 1 - n)) >>> 8 * (i ? n : 1 - n)
            }
            function tt(e, t, r, i) {
                t < 0 && (t = 4294967295 + t + 1);
                for (var n = 0, a = Math.min(e.length - r, 4); n < a; ++n)
                    e[r + n] = t >>> 8 * (i ? n : 3 - n) & 255
            }
            function rt(e, t, r, i, n, a) {
                if (r + i > e.length)
                    throw new RangeError("Index out of range");
                if (r < 0)
                    throw new RangeError("Index out of range")
            }
            function it(e, t, r, i, n) {
                return n || rt(e, 0, r, 4),
                Ee(e, t, r, i, 23, 4),
                r + 4
            }
            function nt(e, t, r, i, n) {
                return n || rt(e, 0, r, 8),
                Ee(e, t, r, i, 52, 8),
                r + 8
            }
            Le.prototype.slice = function(e, t) {
                var r, i = this.length;
                if ((e = ~~e) < 0 ? (e += i) < 0 && (e = 0) : e > i && (e = i),
                (t = void 0 === t ? i : ~~t) < 0 ? (t += i) < 0 && (t = 0) : t > i && (t = i),
                t < e && (t = e),
                Le.TYPED_ARRAY_SUPPORT)
                    (r = this.subarray(e, t)).__proto__ = Le.prototype;
                else {
                    var n = t - e;
                    r = new Le(n,void 0);
                    for (var a = 0; a < n; ++a)
                        r[a] = this[a + e]
                }
                return r
            }
            ,
            Le.prototype.readUIntLE = function(e, t, r) {
                e |= 0,
                t |= 0,
                r || Qe(e, t, this.length);
                for (var i = this[e], n = 1, a = 0; ++a < t && (n *= 256); )
                    i += this[e + a] * n;
                return i
            }
            ,
            Le.prototype.readUIntBE = function(e, t, r) {
                e |= 0,
                t |= 0,
                r || Qe(e, t, this.length);
                for (var i = this[e + --t], n = 1; t > 0 && (n *= 256); )
                    i += this[e + --t] * n;
                return i
            }
            ,
            Le.prototype.readUInt8 = function(e, t) {
                return t || Qe(e, 1, this.length),
                this[e]
            }
            ,
            Le.prototype.readUInt16LE = function(e, t) {
                return t || Qe(e, 2, this.length),
                this[e] | this[e + 1] << 8
            }
            ,
            Le.prototype.readUInt16BE = function(e, t) {
                return t || Qe(e, 2, this.length),
                this[e] << 8 | this[e + 1]
            }
            ,
            Le.prototype.readUInt32LE = function(e, t) {
                return t || Qe(e, 4, this.length),
                (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
            }
            ,
            Le.prototype.readUInt32BE = function(e, t) {
                return t || Qe(e, 4, this.length),
                16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
            }
            ,
            Le.prototype.readIntLE = function(e, t, r) {
                e |= 0,
                t |= 0,
                r || Qe(e, t, this.length);
                for (var i = this[e], n = 1, a = 0; ++a < t && (n *= 256); )
                    i += this[e + a] * n;
                return i >= (n *= 128) && (i -= Math.pow(2, 8 * t)),
                i
            }
            ,
            Le.prototype.readIntBE = function(e, t, r) {
                e |= 0,
                t |= 0,
                r || Qe(e, t, this.length);
                for (var i = t, n = 1, a = this[e + --i]; i > 0 && (n *= 256); )
                    a += this[e + --i] * n;
                return a >= (n *= 128) && (a -= Math.pow(2, 8 * t)),
                a
            }
            ,
            Le.prototype.readInt8 = function(e, t) {
                return t || Qe(e, 1, this.length),
                128 & this[e] ? -1 * (255 - this[e] + 1) : this[e]
            }
            ,
            Le.prototype.readInt16LE = function(e, t) {
                t || Qe(e, 2, this.length);
                var r = this[e] | this[e + 1] << 8;
                return 32768 & r ? 4294901760 | r : r
            }
            ,
            Le.prototype.readInt16BE = function(e, t) {
                t || Qe(e, 2, this.length);
                var r = this[e + 1] | this[e] << 8;
                return 32768 & r ? 4294901760 | r : r
            }
            ,
            Le.prototype.readInt32LE = function(e, t) {
                return t || Qe(e, 4, this.length),
                this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
            }
            ,
            Le.prototype.readInt32BE = function(e, t) {
                return t || Qe(e, 4, this.length),
                this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
            }
            ,
            Le.prototype.readFloatLE = function(e, t) {
                return t || Qe(e, 4, this.length),
                Se(this, e, !0, 23, 4)
            }
            ,
            Le.prototype.readFloatBE = function(e, t) {
                return t || Qe(e, 4, this.length),
                Se(this, e, !1, 23, 4)
            }
            ,
            Le.prototype.readDoubleLE = function(e, t) {
                return t || Qe(e, 8, this.length),
                Se(this, e, !0, 52, 8)
            }
            ,
            Le.prototype.readDoubleBE = function(e, t) {
                return t || Qe(e, 8, this.length),
                Se(this, e, !1, 52, 8)
            }
            ,
            Le.prototype.writeUIntLE = function(e, t, r, i) {
                e = +e,
                t |= 0,
                r |= 0,
                i || Je(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                var n = 1
                  , a = 0;
                for (this[t] = 255 & e; ++a < r && (n *= 256); )
                    this[t + a] = e / n & 255;
                return t + r
            }
            ,
            Le.prototype.writeUIntBE = function(e, t, r, i) {
                e = +e,
                t |= 0,
                r |= 0,
                i || Je(this, e, t, r, Math.pow(2, 8 * r) - 1, 0);
                var n = r - 1
                  , a = 1;
                for (this[t + n] = 255 & e; --n >= 0 && (a *= 256); )
                    this[t + n] = e / a & 255;
                return t + r
            }
            ,
            Le.prototype.writeUInt8 = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 1, 255, 0),
                Le.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                this[t] = 255 & e,
                t + 1
            }
            ,
            Le.prototype.writeUInt16LE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 2, 65535, 0),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8) : et(this, e, t, !0),
                t + 2
            }
            ,
            Le.prototype.writeUInt16BE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 2, 65535, 0),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
                this[t + 1] = 255 & e) : et(this, e, t, !1),
                t + 2
            }
            ,
            Le.prototype.writeUInt32LE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 4, 4294967295, 0),
                Le.TYPED_ARRAY_SUPPORT ? (this[t + 3] = e >>> 24,
                this[t + 2] = e >>> 16,
                this[t + 1] = e >>> 8,
                this[t] = 255 & e) : tt(this, e, t, !0),
                t + 4
            }
            ,
            Le.prototype.writeUInt32BE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 4, 4294967295, 0),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
                this[t + 1] = e >>> 16,
                this[t + 2] = e >>> 8,
                this[t + 3] = 255 & e) : tt(this, e, t, !1),
                t + 4
            }
            ,
            Le.prototype.writeIntLE = function(e, t, r, i) {
                if (e = +e,
                t |= 0,
                !i) {
                    var n = Math.pow(2, 8 * r - 1);
                    Je(this, e, t, r, n - 1, -n)
                }
                var a = 0
                  , o = 1
                  , s = 0;
                for (this[t] = 255 & e; ++a < r && (o *= 256); )
                    e < 0 && 0 === s && 0 !== this[t + a - 1] && (s = 1),
                    this[t + a] = (e / o >> 0) - s & 255;
                return t + r
            }
            ,
            Le.prototype.writeIntBE = function(e, t, r, i) {
                if (e = +e,
                t |= 0,
                !i) {
                    var n = Math.pow(2, 8 * r - 1);
                    Je(this, e, t, r, n - 1, -n)
                }
                var a = r - 1
                  , o = 1
                  , s = 0;
                for (this[t + a] = 255 & e; --a >= 0 && (o *= 256); )
                    e < 0 && 0 === s && 0 !== this[t + a + 1] && (s = 1),
                    this[t + a] = (e / o >> 0) - s & 255;
                return t + r
            }
            ,
            Le.prototype.writeInt8 = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 1, 127, -128),
                Le.TYPED_ARRAY_SUPPORT || (e = Math.floor(e)),
                e < 0 && (e = 255 + e + 1),
                this[t] = 255 & e,
                t + 1
            }
            ,
            Le.prototype.writeInt16LE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 2, 32767, -32768),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8) : et(this, e, t, !0),
                t + 2
            }
            ,
            Le.prototype.writeInt16BE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 2, 32767, -32768),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 8,
                this[t + 1] = 255 & e) : et(this, e, t, !1),
                t + 2
            }
            ,
            Le.prototype.writeInt32LE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 4, 2147483647, -2147483648),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = 255 & e,
                this[t + 1] = e >>> 8,
                this[t + 2] = e >>> 16,
                this[t + 3] = e >>> 24) : tt(this, e, t, !0),
                t + 4
            }
            ,
            Le.prototype.writeInt32BE = function(e, t, r) {
                return e = +e,
                t |= 0,
                r || Je(this, e, t, 4, 2147483647, -2147483648),
                e < 0 && (e = 4294967295 + e + 1),
                Le.TYPED_ARRAY_SUPPORT ? (this[t] = e >>> 24,
                this[t + 1] = e >>> 16,
                this[t + 2] = e >>> 8,
                this[t + 3] = 255 & e) : tt(this, e, t, !1),
                t + 4
            }
            ,
            Le.prototype.writeFloatLE = function(e, t, r) {
                return it(this, e, t, !0, r)
            }
            ,
            Le.prototype.writeFloatBE = function(e, t, r) {
                return it(this, e, t, !1, r)
            }
            ,
            Le.prototype.writeDoubleLE = function(e, t, r) {
                return nt(this, e, t, !0, r)
            }
            ,
            Le.prototype.writeDoubleBE = function(e, t, r) {
                return nt(this, e, t, !1, r)
            }
            ,
            Le.prototype.copy = function(e, t, r, i) {
                if (r || (r = 0),
                i || 0 === i || (i = this.length),
                t >= e.length && (t = e.length),
                t || (t = 0),
                i > 0 && i < r && (i = r),
                i === r)
                    return 0;
                if (0 === e.length || 0 === this.length)
                    return 0;
                if (t < 0)
                    throw new RangeError("targetStart out of bounds");
                if (r < 0 || r >= this.length)
                    throw new RangeError("sourceStart out of bounds");
                if (i < 0)
                    throw new RangeError("sourceEnd out of bounds");
                i > this.length && (i = this.length),
                e.length - t < i - r && (i = e.length - t + r);
                var n, a = i - r;
                if (this === e && r < t && t < i)
                    for (n = a - 1; n >= 0; --n)
                        e[n + t] = this[n + r];
                else if (a < 1e3 || !Le.TYPED_ARRAY_SUPPORT)
                    for (n = 0; n < a; ++n)
                        e[n + t] = this[n + r];
                else
                    Uint8Array.prototype.set.call(e, this.subarray(r, r + a), t);
                return a
            }
            ,
            Le.prototype.fill = function(e, t, r, i) {
                if ("string" == typeof e) {
                    if ("string" == typeof t ? (i = t,
                    t = 0,
                    r = this.length) : "string" == typeof r && (i = r,
                    r = this.length),
                    1 === e.length) {
                        var n = e.charCodeAt(0);
                        n < 256 && (e = n)
                    }
                    if (void 0 !== i && "string" != typeof i)
                        throw new TypeError("encoding must be a string");
                    if ("string" == typeof i && !Le.isEncoding(i))
                        throw new TypeError("Unknown encoding: " + i)
                } else
                    "number" == typeof e && (e &= 255);
                if (t < 0 || this.length < t || this.length < r)
                    throw new RangeError("Out of range index");
                if (r <= t)
                    return this;
                var a;
                if (t >>>= 0,
                r = void 0 === r ? this.length : r >>> 0,
                e || (e = 0),
                "number" == typeof e)
                    for (a = t; a < r; ++a)
                        this[a] = e;
                else {
                    var o = Ue(e) ? e : ut(new Le(e,i).toString())
                      , s = o.length;
                    for (a = 0; a < r - t; ++a)
                        this[a + t] = o[a % s]
                }
                return this
            }
            ;
            var at, ot = /[^+\/0-9A-Za-z-_]/g;
            function st(e) {
                return e < 16 ? "0" + e.toString(16) : e.toString(16)
            }
            function ut(e, t) {
                var r;
                t = t || 1 / 0;
                for (var i = e.length, n = null, a = [], o = 0; o < i; ++o) {
                    if ((r = e.charCodeAt(o)) > 55295 && r < 57344) {
                        if (!n) {
                            if (r > 56319) {
                                (t -= 3) > -1 && a.push(239, 191, 189);
                                continue
                            }
                            if (o + 1 === i) {
                                (t -= 3) > -1 && a.push(239, 191, 189);
                                continue
                            }
                            n = r;
                            continue
                        }
                        if (r < 56320) {
                            (t -= 3) > -1 && a.push(239, 191, 189),
                            n = r;
                            continue
                        }
                        r = 65536 + (n - 55296 << 10 | r - 56320)
                    } else
                        n && (t -= 3) > -1 && a.push(239, 191, 189);
                    if (n = null,
                    r < 128) {
                        if ((t -= 1) < 0)
                            break;
                        a.push(r)
                    } else if (r < 2048) {
                        if ((t -= 2) < 0)
                            break;
                        a.push(r >> 6 | 192, 63 & r | 128)
                    } else if (r < 65536) {
                        if ((t -= 3) < 0)
                            break;
                        a.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                    } else {
                        if (!(r < 1114112))
                            throw new Error("Invalid code point");
                        if ((t -= 4) < 0)
                            break;
                        a.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                    }
                }
                return a
            }
            function ht(e) {
                return function(e) {
                    var t, r, i, n, a, o;
                    ye || be();
                    var s = e.length;
                    if (s % 4 > 0)
                        throw new Error("Invalid string. Length must be a multiple of 4");
                    a = "=" === e[s - 2] ? 2 : "=" === e[s - 1] ? 1 : 0,
                    o = new ve(3 * s / 4 - a),
                    i = a > 0 ? s - 4 : s;
                    var u = 0;
                    for (t = 0,
                    r = 0; t < i; t += 4,
                    r += 3)
                        n = ge[e.charCodeAt(t)] << 18 | ge[e.charCodeAt(t + 1)] << 12 | ge[e.charCodeAt(t + 2)] << 6 | ge[e.charCodeAt(t + 3)],
                        o[u++] = n >> 16 & 255,
                        o[u++] = n >> 8 & 255,
                        o[u++] = 255 & n;
                    return 2 === a ? (n = ge[e.charCodeAt(t)] << 2 | ge[e.charCodeAt(t + 1)] >> 4,
                    o[u++] = 255 & n) : 1 === a && (n = ge[e.charCodeAt(t)] << 10 | ge[e.charCodeAt(t + 1)] << 4 | ge[e.charCodeAt(t + 2)] >> 2,
                    o[u++] = n >> 8 & 255,
                    o[u++] = 255 & n),
                    o
                }(function(e) {
                    if ((e = function(e) {
                        return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
                    }(e).replace(ot, "")).length < 2)
                        return "";
                    for (; e.length % 4 != 0; )
                        e += "=";
                    return e
                }(e))
            }
            function dt(e, t, r, i) {
                for (var n = 0; n < i && !(n + r >= t.length || n >= e.length); ++n)
                    t[n + r] = e[n];
                return n
            }
            function ft(e) {
                return !!e.constructor && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
            }
            !function() {
                var e = window.crypto || window.msCrypto;
                if (!at && e && e.getRandomValues)
                    try {
                        var t = new Uint8Array(16);
                        (at = function() {
                            return e.getRandomValues(t),
                            t
                        }
                        )()
                    } catch (e) {}
                if (!at) {
                    var r = new Array(16);
                    at = function() {
                        for (var e, t = 0; t < 16; t++)
                            0 == (3 & t) && (e = 4294967296 * Math.random()),
                            r[t] = e >>> ((3 & t) << 3) & 255;
                        return r
                    }
                }
            }();
            for (var ct = [], lt = 0; lt < 256; lt++)
                ct[lt] = (lt + 256).toString(16).substr(1);
            var pt = N.localStorage;
            try {
                pt.setItem("a", "a"),
                pt.getItem("a")
            } catch (e) {}
            /iPad/i.test(navigator.userAgent),
            F(function(e, t) {
                var r, i, n, a, o;
                r = /^(?=((?:[a-zA-Z0-9+\-.]+:)?))\1(?=((?:\/\/[^\/?#]*)?))\2(?=((?:(?:[^?#\/]*\/)*[^;?#\/]*)?))\3((?:;[^?#]*)?)(\?[^#]*)?(#[^]*)?$/,
                i = /^(?=([^\/?#]*))\1([^]*)$/,
                n = /(?:\/|^)\.(?=\/)/g,
                a = /(?:\/|^)\.\.\/(?!\.\.\/)[^\/]*(?=\/)/g,
                o = {
                    buildAbsoluteURL: function(e, t, r) {
                        if (r = r || {},
                        e = e.trim(),
                        !(t = t.trim())) {
                            if (!r.alwaysNormalize)
                                return e;
                            var n = o.parseURL(e);
                            if (!n)
                                throw new Error("Error trying to parse base URL.");
                            return n.path = o.normalizePath(n.path),
                            o.buildURLFromParts(n)
                        }
                        var a = o.parseURL(t);
                        if (!a)
                            throw new Error("Error trying to parse relative URL.");
                        if (a.scheme)
                            return r.alwaysNormalize ? (a.path = o.normalizePath(a.path),
                            o.buildURLFromParts(a)) : t;
                        var s = o.parseURL(e);
                        if (!s)
                            throw new Error("Error trying to parse base URL.");
                        if (!s.netLoc && s.path && "/" !== s.path[0]) {
                            var u = i.exec(s.path);
                            s.netLoc = u[1],
                            s.path = u[2]
                        }
                        s.netLoc && !s.path && (s.path = "/");
                        var h = {
                            scheme: s.scheme,
                            netLoc: a.netLoc,
                            path: null,
                            params: a.params,
                            query: a.query,
                            fragment: a.fragment
                        };
                        if (!a.netLoc && (h.netLoc = s.netLoc,
                        "/" !== a.path[0]))
                            if (a.path) {
                                var d = s.path
                                  , f = d.substring(0, d.lastIndexOf("/") + 1) + a.path;
                                h.path = o.normalizePath(f)
                            } else
                                h.path = s.path,
                                a.params || (h.params = s.params,
                                a.query || (h.query = s.query));
                        return null === h.path && (h.path = r.alwaysNormalize ? o.normalizePath(a.path) : a.path),
                        o.buildURLFromParts(h)
                    },
                    parseURL: function(e) {
                        var t = r.exec(e);
                        return t ? {
                            scheme: t[1] || "",
                            netLoc: t[2] || "",
                            path: t[3] || "",
                            params: t[4] || "",
                            query: t[5] || "",
                            fragment: t[6] || ""
                        } : null
                    },
                    normalizePath: function(e) {
                        for (e = e.split("").reverse().join("").replace(n, ""); e.length !== (e = e.replace(a, "")).length; )
                            ;
                        return e.split("").reverse().join("")
                    },
                    buildURLFromParts: function(e) {
                        return e.scheme + e.netLoc + e.path + e.params + e.query + e.fragment
                    }
                },
                e.exports = o
            });
            var mt = window.sessionStorage
              , gt = 0;
            !function() {
                try {
                    Object.keys(mt).forEach(function(e, t) {
                        -1 !== e.indexOf("vplayer-log-") && mt.removeItem(e)
                    })
                } catch (e) {}
            }();
            var vt = {
                error: 0,
                warn: 1,
                info: 2,
                log: 3,
                debug: 4,
                verbose: 5
            }
              , yt = function() {
                var e = this;
                e.level = 4;
                var t = A.console || 0
                  , r = -1 !== window.location.href.indexOf("playerdebug");
                ["log", "info", "error", "warn", "debug", "verbose"].forEach(function(i) {
                    var n = vt[i];
                    e[i] = function(e, a) {
                        a && "object" == typeof a && (a = JSON.stringify(a));
                        var o = function(e, t) {
                            if (!E(e))
                                throw new TypeError("Log's method only acccept string as argument, but not " + e + " in " + typeof e);
                            return E(t) ? "[mango-player][" + (e = yt.FORCE_GLOBAL_TAG ? yt.GLOBAL_TAG : e || yt.GLOBAL_TAG) + "] > " + t : "[" + yt.GLOBAL_TAG + "] > " + e
                        }(e, a);
                        if (n < vt.log && function(e) {
                            var t = "vplayer-log-" + gt;
                            H(function() {
                                try {
                                    mt.setItem(t, e)
                                } catch (e) {}
                            }),
                            gt++
                        }(o),
                        !(this.level < n) && r && t) {
                            for (var s = t[i] || t.log, u = arguments.length, h = new Array(u > 2 ? u - 2 : 0), d = 2; d < u; d++)
                                h[d - 2] = arguments[d];
                            s.apply(t, [o].concat(h))
                        }
                    }
                    .bind(e)
                }),
                e.setLevel = function(e) {
                    var t = vt[e] || 0;
                    this.level = t
                }
                .bind(e)
            };
            yt.GLOBAL_TAG = "mango-player",
            yt.FORCE_GLOBAL_TAG = !1;
            var bt = new yt
              , wt = {}.hasOwnProperty
              , _t = function(e, t) {
                return wt.call(e, t)
            }
              , St = function(e, t, r) {
                return null == t ? e : e + "=" + (r ? function(e) {
                    try {
                        return encodeURIComponent(e)
                    } catch (e) {}
                    return e
                }(String(t)) : t)
            }
              , Et = function(e, t) {
                if (!(e instanceof t))
                    throw new TypeError("Cannot call a class as a function")
            }
              , At = window
              , Rt = function() {}
              , kt = At.setImmediate || function(e) {
                return setTimeout(e, 1)
            }
              , Tt = function(e) {
                return "function" == typeof e
            }
              , Lt = function() {
                function e() {
                    Et(this, e),
                    this._l = new Image,
                    this._r = !1
                }
                return e.prototype.load = function(e, t) {
                    var r = this;
                    this._r = !0;
                    var i = this._l
                      , n = function(e, n) {
                        i.onload = i.onerror = Rt,
                        t(e, n),
                        r.reset()
                    };
                    i.onload = function(e) {
                        return n(null, e)
                    }
                    ,
                    i.onerror = function(e) {
                        return n(e)
                    }
                    ,
                    i.src = e
                }
                ,
                e.prototype.reset = function() {
                    this._r = !1
                }
                ,
                e
            }()
              , xt = []
              , Bt = (At.$nextRequest || (At.$nextRequest = new function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {}
                  , t = 0
                  , r = e.concurrent || 5
                  , i = [];
                return {
                    push: function() {
                        var e = function(e) {
                            for (var t = e.length, r = Array(t), i = 0; i < t; i++)
                                r[i] = e[i];
                            return r
                        }(arguments)
                          , n = e[1];
                        2 === e.length && Tt(n) && (e[2] = n,
                        e[1] = null),
                        i.push(e),
                        function e() {
                            if (i.length && t < r) {
                                var n = i.shift();
                                ++t,
                                function(e, t) {
                                    var r = e[0]
                                      , i = e[1]
                                      , n = e[2]
                                      , a = i && function(e, t) {
                                        if ("object" != typeof e)
                                            return e;
                                        var r, i, n, a = [];
                                        for (r in t = void 0 === t ? 1 : 0,
                                        e)
                                            if (_t(e, r))
                                                if ((i = e[r]) && "object" == typeof i) {
                                                    if ("number" == typeof i.length)
                                                        for (n = i.length; n--; )
                                                            a.push(St(r, i[n], t))
                                                } else
                                                    a.push(St(r, i, t));
                                        return a.join("&").replace(/%20/g, "+")
                                    }(i)
                                      , o = r + (a ? (~r.indexOf("?") ? "&" : "?") + a : "");
                                    kt(function() {
                                        return function() {
                                            for (var e, t = -1, r = xt.length; ++t < r; )
                                                if (!(r = xt[t])._r)
                                                    return r;
                                            return e = new Lt,
                                            xt.length < 5 && xt.push(e),
                                            e
                                        }().load(o, function(e, r) {
                                            if (Tt(n))
                                                try {
                                                    n(e, r)
                                                } catch (r) {}
                                            t(e)
                                        })
                                    })
                                }(n, function() {
                                    --t,
                                    e()
                                })
                            }
                        }()
                    }
                }
            }
            ),
            function() {
                function e(e) {
                    p.init(),
                    this._config = {
                        _isLive: !1
                    },
                    Object.assign(this._config, e),
                    this.onInitSegment = null,
                    this.onMediaSegment = null,
                    this.onMediaInfo = null,
                    this.seekCallBack = null,
                    this.loadmetadata = !1,
                    this.ftyp_moov = null,
                    this._tagdemux = new c,
                    this._flvparse = new l,
                    this.ftyp_moov_v = null,
                    this.ftyp_moov_a = null,
                    this.metaSuccRun = !1,
                    this.metas = [],
                    this.parseChunk = null,
                    this.hasVideo = !1,
                    this.hasAudio = !1,
                    this._error = null,
                    this._pendingResolveSeekPoint = -1,
                    this._tempBaseTime = 0,
                    this.setflvBase = this.setflvBasefrist,
                    this._tagdemux._onTrackMetadata = this.Metadata.bind(this),
                    this._tagdemux._onMediaInfo = this.metaSucc.bind(this),
                    this._tagdemux._onDataAvailable = this.onDataAvailable.bind(this),
                    this._tagdemux._onError = this.error.bind(this),
                    this.m4mof = new S(this._config),
                    this.m4mof.onMediaSegment = this.onMdiaSegment.bind(this)
                }
                var t = e.prototype;
                return t.seek = function(e) {
                    this._flvparse.dispose(),
                    this.setflvBase = this.setflvBasefrist,
                    null != e && 0 != e || (e = 0,
                    this._pendingResolveSeekPoint = -1),
                    this._tempBaseTime != e && (this._tempBaseTime = e,
                    this._tagdemux._timestampBase = e,
                    this.m4mof.seek(e),
                    this.m4mof.insertDiscontinuity(),
                    this._pendingResolveSeekPoint = e)
                }
                ,
                t.setflvBasefrist = function(e, t) {
                    var r = 0;
                    try {
                        r = this._flvparse.setFlv(new Uint8Array(e))
                    } catch (e) {
                        this.error(e)
                    }
                    if (0 == this._flvparse.arrTag.length)
                        return r;
                    if (this._flvparse.arrTag.length > 0) {
                        this._tagdemux.hasAudio = this.hasAudio = this._flvparse._hasAudio,
                        this._tagdemux.hasVideo = this.hasVideo = this._flvparse._hasVideo,
                        0 != this._tempBaseTime && this._tempBaseTime == this._flvparse.arrTag[0].getTime() && (this._tagdemux._timestampBase = 0);
                        try {
                            this._tagdemux.moofTag(this._flvparse.arrTag)
                        } catch (e) {
                            this.error(e)
                        }
                        this.setflvBase = this.setflvBaseUsually
                    }
                    return r
                }
                ,
                t.setflvBaseUsually = function(e, t) {
                    var r = 0;
                    try {
                        r = this._flvparse.setFlv(new Uint8Array(e))
                    } catch (e) {
                        this.error(e)
                    }
                    if (this._flvparse.arrTag.length > 0)
                        try {
                            this._tagdemux.moofTag(this._flvparse.arrTag)
                        } catch (e) {
                            this.error(e)
                        }
                    return r
                }
                ,
                t.onMdiaSegment = function(e, t) {
                    if (this.onMediaSegment && this.onMediaSegment(e, new Uint8Array(t.data)),
                    -1 != this._pendingResolveSeekPoint && "video" == e) {
                        var r = this._pendingResolveSeekPoint;
                        this._pendingResolveSeekPoint = -1,
                        this.seekCallBack && this.seekCallBack(r)
                    }
                }
                ,
                t.Metadata = function(e, t) {
                    switch (e) {
                    case "video":
                        if (this.metas.push(["video", t]),
                        this.m4mof._videoMeta = t,
                        this.hasVideo && !this.hasAudio)
                            return void this.metaSucc();
                        break;
                    case "audio":
                        if (this.metas.push(["audio", t]),
                        this.m4mof._audioMeta = t,
                        !this.hasVideo && this.hasAudio)
                            return void this.metaSucc()
                    }
                    this.hasVideo && this.hasAudio && this.m4mof._videoMeta && this.m4mof._audioMeta && this.metaSucc()
                }
                ,
                t.metaSucc = function(e) {
                    var t = this;
                    this.onMediaInfo && e && this.onMediaInfo(e || this._tagdemux._mediaInfo, {
                        hasAudio: this.hasAudio,
                        hasVideo: this.hasVideo
                    }),
                    0 != this.metas.length ? e || (this.metas.length > 1 ? this.metas.map(function(e) {
                        "video" == e[0] ? t.ftyp_moov_v = p.generateInitSegment([e[1]]) : t.ftyp_moov_a = p.generateInitSegment([e[1]])
                    }) : this.ftyp_moov = p.generateInitSegment([this.metas[0][1]]),
                    this.onInitSegment && 0 == this.loadmetadata && (this.ftyp_moov ? this.onInitSegment(this.ftyp_moov) : this.onInitSegment(this.ftyp_moov_v, this.ftyp_moov_a),
                    this.loadmetadata = !0)) : this.metaSuccRun = !0
                }
                ,
                t.onDataAvailable = function(e, t) {
                    try {
                        this.m4mof.remux(e, t)
                    } catch (e) {
                        this.error(e)
                    }
                }
                ,
                t.setflv = function(e, t) {
                    return this.setflvBase(e, t)
                }
                ,
                t.setflvloc = function(e) {
                    if (l.setFlv(new Uint8Array(e)),
                    l.arrTag.length > 0)
                        return l.arrTag
                }
                ,
                t.error = function(e) {
                    this._error && this._error(e)
                }
                ,
                e
            }())
              , Dt = function(e) {
                function i(t) {
                    var r;
                    return (r = e.call(this) || this).f2m = new Bt(t),
                    r.f2m._error = r.error.bind(r),
                    r._onInitSegment = null,
                    r._onMediaSegment = null,
                    r._onMediaInfo = null,
                    r._seekCallBack = null,
                    r
                }
                r(i, e);
                var n = i.prototype;
                return n.error = function(e) {
                    this.emit("error", e.type)
                }
                ,
                n.seek = function(e) {
                    this.f2m.seek(e)
                }
                ,
                n.setflv = function(e) {
                    return this.f2m.setflv(e, 0)
                }
                ,
                n.setflvloc = function(e) {
                    return this.f2m.setflvloc(e)
                }
                ,
                t(i, [{
                    key: "onInitSegment",
                    set: function(e) {
                        this._onInitSegment = e,
                        this.f2m.onInitSegment = e
                    }
                }, {
                    key: "onMediaSegment",
                    set: function(e) {
                        this._onMediaSegment = e,
                        this.f2m.onMediaSegment = e
                    }
                }, {
                    key: "onMediaInfo",
                    set: function(e) {
                        this._onMediaInfo = e,
                        this.f2m.onMediaInfo = e
                    }
                }, {
                    key: "seekCallBack",
                    set: function(e) {
                        this._seekCallBack = e,
                        this.f2m.seekCallBack = e
                    }
                }]),
                i
            }(le)
              , Pt = 100
              , Mt = function(e) {
                function t(t, r) {
                    var i;
                    return (i = e.call(this) || this).tag = "fetch",
                    i.fetching = !1,
                    i.config = r,
                    i.range = {
                        from: 0,
                        to: 524288
                    },
                    i.src = t,
                    i.totalRange = null,
                    i.block = 524288,
                    i.reader = null,
                    i.requestAbort = !1,
                    i.arrivalDataCallback = null,
                    i.bytesStart = 0,
                    i.heartbeat = null,
                    i
                }
                r(t, e),
                t.isSupport = function() {
                    return !(!self.fetch || !self.ReadableStream)
                }
                ;
                var i = t.prototype;
                return i.open = function(e, t) {
                    var r = this;
                    this.requestAbort = !1;
                    var i = new Headers
                      , n = e || {
                        from: 0,
                        to: -1
                    };
                    if (!this.config.isLive) {
                        this.range.from = n.from,
                        this.range.to = n.to;
                        var a = function(e, t) {
                            if ("range" === t.seekType) {
                                var r, i = {};
                                return r = -1 !== e.to ? "bytes=" + e.from.toString() + "-" + e.to.toString() : "bytes=" + e.from.toString() + "-",
                                i.Range = r,
                                i
                            }
                            return -1 !== e.to ? "?start=" + e.from.toString() + "&end=" + e.to.toString() : "?start=" + e.from.toString()
                        }(n, this.config);
                        if ("string" == typeof a)
                            this.src = this.config.src + a;
                        else
                            for (var o in a)
                                i.append(o, a[o])
                    }
                    t && (this.bytesStart = 0),
                    this.bytesStart = e.from;
                    var s = {
                        method: "GET",
                        headers: i,
                        mode: "cors",
                        cache: "default",
                        referrerPolicy: "no-referrer-when-downgrade"
                    };
                    fetch(this.src, s).then(function(e) {
                        if (e.ok) {
                            var i = e.body.getReader();
                            return r.pump(i, t)
                        }
                    }).catch(function(e) {
                        r.emit("error", {
                            errno: Pt,
                            errmsg: e
                        })
                    })
                }
                ,
                i.pause = function() {
                    this.requestAbort = !0
                }
                ,
                i.pump = function(e, t) {
                    var r = this;
                    return e.read().then(function(i) {
                        if (!i.done) {
                            if (!0 === r.requestAbort)
                                return r.requestAbort = !1,
                                e.cancel();
                            var n = i.value.buffer;
                            return r.arrivalDataCallback && (r.arrivalDataCallback(n, r.bytesStart, t),
                            r.bytesStart += n.byteLength),
                            r.pump(e)
                        }
                        r.emit("end"),
                        bt.verbose(r.tag, "load end")
                    }).catch(function(e) {
                        r.emit("error", {
                            errno: Pt,
                            errmsg: e.message
                        })
                    })
                }
                ,
                t
            }(le);
            function Ut(e) {
                var t, r = {};
                return t = -1 !== e.to ? "bytes=" + e.from.toString() + "-" + e.to.toString() : "bytes=" + e.from.toString() + "-",
                r.Range = t,
                {
                    headers: r
                }
            }
            var It = function(e) {
                function t(t, r) {
                    var i;
                    return (i = e.call(this) || this).tag = "RangeLoader",
                    i.xhr = null,
                    i.src = t,
                    i.totalLength = null,
                    i.chunkSizeKB = 524288,
                    i.range = {},
                    i.bytesStart = 0,
                    i.needSeek = !1,
                    i.keyframePoint = null,
                    i
                }
                r(t, e),
                t.isSupport = function() {
                    try {
                        var e = new XMLHttpRequest;
                        return e.open("GET", "https://example.com", !0),
                        e.responseType = "arraybuffer",
                        "arraybuffer" === e.responseType
                    } catch (e) {
                        return !1
                    }
                }
                ;
                var i = t.prototype;
                return i.open = function(e, t) {
                    var r = this.xhr = new XMLHttpRequest;
                    r.open("GET", this.src, !0),
                    r.responseType = "arraybuffer",
                    r.onreadystatechange = this.onReadyStateChange.bind(this),
                    r.onprogress = this.onProgress.bind(this),
                    r.onload = this.onLoad.bind(this),
                    r.onerror = this.onXhrError.bind(this);
                    var i = e || {
                        from: 0,
                        to: -1
                    };
                    this.range.from = i.from,
                    -1 === i.to && (i.to = i.from + this.chunkSizeKB),
                    t && (this.bytesStart = e.from,
                    this.needSeek = !0,
                    this.keyframePoint = t),
                    this.range.to = i.to;
                    var n = Ut(i).headers;
                    for (var a in n)
                        r.setRequestHeader(a, n[a]);
                    r.send()
                }
                ,
                i.pause = function() {
                    this.abort()
                }
                ,
                i.abort = function() {
                    this.xhr && (this.xhr.onreadystatechange = null,
                    this.xhr.onprogress = null,
                    this.xhr.onload = null,
                    this.xhr.onerror = null,
                    this.xhr.abort(),
                    this.xhr = null)
                }
                ,
                i.destroy = function() {
                    this.xhr && (this.abort(),
                    this.xhr.onreadystatechange = null,
                    this.xhr.onprogress = null,
                    this.xhr.onload = null,
                    this.xhr.onerror = null,
                    this.xhr = null),
                    this.totalLength = null,
                    this.bytesStart = null,
                    this.range = {}
                }
                ,
                i.onReadyStateChange = function(e) {
                    var t = this.xhr;
                    if (2 === t.readyState && t.status < 200 && t.status > 299) {
                        var r = {
                            from: this.range.from,
                            to: this.range.to,
                            url: this.src,
                            msg: "http Error: http code " + t.status
                        };
                        this.emit("error", {
                            errno: Pt,
                            errmsg: r
                        })
                    }
                }
                ,
                i.onProgress = function(e) {
                    this.totalLength || (this.totalLength = e.total,
                    this.abort(),
                    this.open())
                }
                ,
                i.onLoad = function(e) {
                    if (this.totalLength && this.arrivalDataCallback) {
                        var t = e.target.response;
                        this.needSeek ? (this.needSeek = !1,
                        this.arrivalDataCallback(t, this.bytesStart, this.keyframePoint)) : this.arrivalDataCallback(t, this.bytesStart),
                        this.bytesStart += t.byteLength,
                        this.open({
                            from: this.bytesStart,
                            to: -1
                        })
                    }
                }
                ,
                i.onXhrError = function(e) {
                    var t = {
                        from: this.range.from,
                        to: this.range.to,
                        url: this.src,
                        msg: e.constructor.name + " " + e.type
                    };
                    this.emit("error", {
                        errno: Pt,
                        errmsg: t
                    })
                }
                ,
                t
            }(le)
              , Ot = function(e) {
                function t(t, r) {
                    var i;
                    return (i = e.call(this) || this).tag = "WebSocket",
                    i.src = t,
                    i._ws = null,
                    i._requestAbort = !1,
                    i._receivedLength = 0,
                    i
                }
                r(t, e),
                t.isSupported = function() {
                    try {
                        return void 0 !== window.WebSocket
                    } catch (e) {
                        return !1
                    }
                }
                ;
                var i = t.prototype;
                return i.open = function(e, t) {
                    try {
                        var r = this._ws = new self.WebSocket(this.src);
                        r.binaryType = "arraybuffer",
                        r.onopen = this.onWebSocketOpen.bind(this),
                        r.onclose = this.onWebSocketClose.bind(this),
                        r.onmessage = this.onWebSocketMessage.bind(this),
                        r.onerror = this.onWebSocketError.bind(this)
                    } catch (e) {
                        var i = {
                            code: e.code,
                            msg: e.message
                        };
                        this.emit("error", {
                            errno: Pt,
                            errmsg: i
                        })
                    }
                }
                ,
                i.pause = function() {
                    var e = this._ws;
                    !e || 0 !== e.readyState && 1 !== e.readyState || (this._requestAbort = !0,
                    e.close()),
                    this._ws = null
                }
                ,
                i.onWebSocketClose = function(e) {
                    !0 !== this._requestAbort ? this.emit("end") : this._requestAbort = !1
                }
                ,
                i.onWebSocketOpen = function() {}
                ,
                i.onWebSocketMessage = function(e) {
                    var t = this;
                    if (e.data instanceof ArrayBuffer)
                        this.dispatchArrayBuffer(e.data);
                    else if (e.data instanceof Blob) {
                        var r = new FileReader;
                        r.onload = function() {
                            t.dispatchArrayBuffer(r.result)
                        }
                        ,
                        r.readAsArrayBuffer(e.data)
                    } else {
                        var i = {
                            code: -1,
                            msg: "Unsupported WebSocket message type: " + e.data.constructor.name
                        };
                        this.emit("error", {
                            errno: Pt,
                            errmsg: i
                        })
                    }
                }
                ,
                i.dispatchArrayBuffer = function(e) {
                    var t = e
                      , r = this.receivedLength;
                    this.receivedLength += t.byteLength,
                    this.arrivalDataCallback && this.arrivalDataCallback(t, r)
                }
                ,
                i.onWebSocketError = function(e) {
                    var t = {
                        code: e.code,
                        msg: e.message
                    };
                    this.emit("error", {
                        errno: Pt,
                        errmsg: t
                    })
                }
                ,
                t
            }(le)
              , Ct = function(e) {
                function t(t, r) {
                    var i;
                    return (i = e.call(this) || this).tag = "mozChunkLoader",
                    i.xhr = null,
                    i.src = t,
                    i.config = r,
                    i.totalLength = null,
                    i.chunkSizeKB = 393216,
                    i.range = {},
                    i.bytesStart = 0,
                    i.keyframePoint = null,
                    i
                }
                r(t, e),
                t.isSupport = function() {
                    try {
                        var e = new XMLHttpRequest;
                        return e.open("GET", "https://example.com", !0),
                        e.responseType = "moz-chunked-arraybuffer",
                        "moz-chunked-arraybuffer" === e.responseType
                    } catch (e) {
                        return !1
                    }
                }
                ;
                var i = t.prototype;
                return i.open = function(e, t) {
                    var r = this.xhr = new XMLHttpRequest;
                    if (r.open("GET", this.src, !0),
                    r.responseType = "moz-chunked-arraybuffer",
                    r.onreadystatechange = this.onReadyStateChange.bind(this),
                    r.onprogress = this.onProgress.bind(this),
                    r.onload = this.onLoadEnd.bind(this),
                    r.onerror = this.onXhrError.bind(this),
                    !this.config.isLive) {
                        var i = e || {
                            from: 0,
                            to: -1
                        };
                        this.range.from = i.from,
                        this.range.to = i.to,
                        t && (this.needSeek = !0,
                        this.keyframePoint = t);
                        var n = Ut(i).headers;
                        for (var a in n)
                            r.setRequestHeader(a, n[a])
                    }
                    r.send()
                }
                ,
                i.pause = function() {
                    this.abort()
                }
                ,
                i.abort = function() {
                    this.xhr && (this.xhr.onreadystatechange = null,
                    this.xhr.onprogress = null,
                    this.xhr.onload = null,
                    this.xhr.onerror = null,
                    this.xhr.abort(),
                    this.xhr = null)
                }
                ,
                i.destroy = function() {
                    this.xhr && (this.abort(),
                    this.xhr.onreadystatechange = null,
                    this.xhr.onprogress = null,
                    this.xhr.onload = null,
                    this.xhr.onerror = null,
                    this.xhr = null),
                    this.totalLength = null,
                    this.bytesStart = null,
                    this.range = {}
                }
                ,
                i.onReadyStateChange = function(e) {
                    var t = this.xhr;
                    if (2 === t.readyState && t.status < 200 && t.status > 299) {
                        var r = {
                            from: this.range.from,
                            to: this.range.to,
                            url: this.src,
                            msg: "http Error: http code " + t.status
                        };
                        this.emit("error", {
                            errno: Pt,
                            errmsg: r
                        })
                    }
                }
                ,
                i.onProgress = function(e) {
                    this.totalLength || (this.totalLength = e.total,
                    null !== e.total && 0 !== e.total && (this.totalLength = e.total));
                    var t = e.target.response;
                    this.needSeek ? (this.needSeek = !1,
                    this.arrivalDataCallback(t, this.bytesStart, this.keyframePoint)) : this.arrivalDataCallback(t, this.bytesStart),
                    this.bytesStart += t.byteLength
                }
                ,
                i.onLoadEnd = function(e) {
                    this.emit(this.tag, "video load end")
                }
                ,
                i.onXhrError = function(e) {
                    var t = {
                        from: this.range.from,
                        to: this.range.to,
                        url: this.src,
                        msg: e.constructor.name + " " + e.type
                    };
                    this.emit("error", {
                        errno: Pt,
                        errmsg: t
                    })
                }
                ,
                t
            }(le)
              , Ft = function(e) {
                function t(t) {
                    var r;
                    return (r = e.call(this) || this).loader = null,
                    r.config = {},
                    r.config = t || {},
                    r.bufferSize = 3145728,
                    r.cacheBuffer = new ArrayBuffer(r.bufferSize),
                    r.cacheRemain = 0,
                    r.stashByteStart = 0,
                    r.enableStash = !0,
                    r.stashSize = r.config.stashSize || 393216,
                    r.resumeFrom = 0,
                    r.currentRange = {},
                    r.totalReceive = 0,
                    r.seekPonit = void 0,
                    r.timer = null,
                    r.heartBeatInterval = null,
                    r.preTotalReceive = 0,
                    r.seekLock = !1,
                    r.webSocketURLReg = /wss?:\/\/(.+?)/,
                    r.selectLoader(),
                    r.bindEvent(),
                    r
                }
                r(t, e);
                var i = t.prototype;
                return i.selectLoader = function() {
                    var e = this.config
                      , t = this.config.src;
                    this.webSocketURLReg.test(t) ? this.loader = new Ot(t,e,this.queryHandle) : Mt.isSupport() ? this.loader = new Mt(t,e,this.queryHandle) : Ct.isSupport() ? this.loader = new Ct(t,e,this.queryHandle) : It.isSupport() && (this.loader = new It(t,e,this.queryHandle)),
                    this.loader.arrivalDataCallback = this.onLoaderChunkArrival.bind(this)
                }
                ,
                i.bindEvent = function() {
                    var e = this;
                    this.loader.on("end", function() {
                        var t = e.cacheBuffer.slice(0, e.cacheRemain);
                        e.arrivalDataCallback(t, e.stashByteStart),
                        e.emit("end")
                    }),
                    this.loader.on("error", function(t) {
                        e.emit("error", t.data)
                    })
                }
                ,
                i.onLoaderChunkArrival = function(e, t, r) {
                    if ((!this.seekLock || void 0 !== r) && (void 0 !== r && (this.seekPonit = r,
                    this.seekLock = !1),
                    this.arrivalDataCallback))
                        if (this.totalReceive += e.byteLength,
                        0 === this.cacheRemain && 0 === this.stashByteStart && (this.stashByteStart = t),
                        this.cacheRemain + e.byteLength <= this.stashSize)
                            new Uint8Array(this.cacheBuffer,0,this.stashSize).set(new Uint8Array(e), this.cacheRemain),
                            this.cacheRemain += e.byteLength;
                        else {
                            var i = new Uint8Array(this.cacheBuffer,0,this.bufferSize);
                            if (this.cacheRemain > 0) {
                                var n = this.cacheBuffer.slice(0, this.cacheRemain)
                                  , a = 0;
                                if (void 0 !== this.seekPonit ? (a = this.arrivalDataCallback(n, this.stashByteStart, this.seekPonit),
                                this.seekPonit = void 0) : a = this.arrivalDataCallback(n, this.stashByteStart),
                                a < n.byteLength) {
                                    if (a > 0) {
                                        var o = new Uint8Array(n,a);
                                        i.set(o, 0),
                                        this.cacheRemain = o.byteLength,
                                        this.stashByteStart += a
                                    }
                                } else
                                    this.cacheRemain = 0,
                                    this.stashByteStart += a;
                                this.cacheRemain + e.byteLength > this.bufferSize && (this.expandBuffer(this.cacheRemain + e.byteLength),
                                i = new Uint8Array(this.cacheBuffer,0,this.bufferSize)),
                                i.set(new Uint8Array(e), this.cacheRemain),
                                this.cacheRemain += e.byteLength
                            } else {
                                var s = 0;
                                if (void 0 !== this.seekPonit ? (s = this.arrivalDataCallback(e, t, this.seekPonit),
                                this.seekPonit = void 0) : s = this.arrivalDataCallback(e, t),
                                s < e.byteLength) {
                                    var u = e.byteLength - s;
                                    u > this.bufferSize && (this.expandBuffer(u),
                                    i = new Uint8Array(this.cacheBuffer,0,this.bufferSize)),
                                    i.set(new Uint8Array(e,s), 0),
                                    this.cacheRemain += u,
                                    this.stashByteStart = t + s
                                }
                            }
                        }
                }
                ,
                i.initCacheBuffer = function() {
                    this.cacheRemain = 0,
                    this.totalReceive = 0,
                    this.cacheBuffer = new ArrayBuffer(this.bufferSize)
                }
                ,
                i.expandBuffer = function(e) {
                    var t = this.bufferSize;
                    t < e && (t = e),
                    this.cacheBuffer = new ArrayBuffer(t),
                    this.bufferSize = t
                }
                ,
                i.pause = function() {
                    this.loader.pause()
                }
                ,
                i.open = function(e, t) {
                    this.loader.open({
                        from: e || 0,
                        to: -1
                    }, t),
                    this.heartbeat()
                }
                ,
                i.heartbeat = function() {
                    var e = this;
                    window.clearInterval(this.heartBeatInterval),
                    this.heartBeatInterval = setInterval(function() {
                        e.emit("heartbeat", {
                            speed: e.totalReceive - e.preTotalReceive,
                            totalReceive: e.totalReceive
                        }),
                        e.preTotalReceive = e.totalReceive
                    }, 1e3)
                }
                ,
                i.resume = function() {
                    this.paused = !1;
                    var e = this.totalReceive;
                    this.open(e)
                }
                ,
                i.seek = function(e, t, r) {
                    this.seekLock = !0,
                    this.totalReceive = e,
                    this.preTotalReceive = e,
                    this.initCacheBuffer(),
                    this.cacheRemain = 0,
                    this.stashByteStart = 0,
                    this.open(e, r)
                }
                ,
                i.destroy = function() {
                    this.pause(),
                    this.initCacheBuffer(),
                    window.clearInterval(this.heartBeatInterval),
                    this.heartBeatInterval = null
                }
                ,
                t
            }(le);
            return function(e) {
                var t = null
                  , r = null
                  , i = {};
                function n(e, t) {
                    self.postMessage({
                        cmd: "mediaSegmentInit",
                        source: {
                            type: "video",
                            data: e
                        }
                    }),
                    t && self.postMessage({
                        cmd: "mediaSegmentInit",
                        source: {
                            type: "audio",
                            data: t
                        }
                    })
                }
                function a(e, t) {
                    self.postMessage({
                        cmd: "mediaSegment",
                        source: {
                            type: e,
                            data: t
                        }
                    })
                }
                function o(e) {
                    self.postMessage({
                        cmd: "error",
                        source: e
                    })
                }
                function s(e) {
                    self.postMessage({
                        cmd: "mediainfo",
                        source: e
                    })
                }
                function u(e, r, i) {
                    return t || ((t = new Dt).onInitSegment = n,
                    t.onMediaSegment = a,
                    t.onError = o,
                    t.onMediaInfo = s,
                    t.on("error", function(e) {
                        self.postMessage({
                            cmd: "error",
                            source: e.data
                        })
                    })),
                    i && t.seek(i),
                    t.setflv(e)
                }
                e.addEventListener("message", function(e) {
                    switch (e.data.cmd) {
                    case "init":
                        i = e.data.data;
                        break;
                    case "loadSource":
                        (r = new Ft(i)).arrivalDataCallback = u,
                        r.open();
                        break;
                    case "pause":
                        r.pause();
                        break;
                    case "seek":
                        n = e.data.keyframe,
                        r.pause(),
                        (r = new Ft(i)).arrivalDataCallback = u,
                        r.seek(n.keyframePoint, !1, n.keyframetime);
                        break;
                    case "resume":
                        r.resume();
                        break;
                    case "destroy":
                        r.destroy(),
                        r = null,
                        t = null
                    }
                    var n
                })
            }
        }()
    })
      , ni = function(e) {
        function t(t, r, i) {
            var n;
            return (n = e.call(this) || this).config = r || {},
            n.tag = "transmuxer",
            n.loader = null,
            n.CPU = null,
            n.keyframePoint = !1,
            n.w = null,
            n.config.webWorker && (n.w = new ii,
            n.w.addEventListener("message", function(e) {
                n.parseCallback.call(n, e.data)
            }),
            n.w.postMessage({
                cmd: "init",
                data: r
            })),
            n.lock = 0,
            n
        }
        i(t, e);
        var r = t.prototype;
        return r.loadSource = function() {
            this.config.webWorker ? this.w.postMessage({
                cmd: "loadSource"
            }) : (this.loader = new Ir(this.config),
            this.loader.arrivalDataCallback = this.arrivalDataCallback.bind(this),
            this.loader.open(),
            this.loaderBindEvent(this.loader))
        }
        ,
        r.loaderBindEvent = function(e) {
            var t = this;
            e.on("end", function() {
                t.emit("end")
            }),
            e.on("error", function(e) {
                t.emit("error", e.data)
            }),
            e.on("heartbeat", function(e) {
                t.emit("heartbeat", e.data)
            })
        }
        ,
        r.arrivalDataCallback = function(e, t, r) {
            var i = this;
            return this.CPU || (this.config.isLive ? this.config._isLive = !0 : this.config._isLive = !1,
            this.CPU = new ri(this.config),
            this.CPU.onInitSegment = this.onRemuxerInitSegmentArrival.bind(this),
            this.CPU.onMediaSegment = this.onRemuxerMediaSegmentArrival.bind(this),
            this.CPU.onMediaInfo = this.onMediaInfo.bind(this),
            this.CPU.on("error", function(e) {
                i.emit("error", {
                    errno: Er,
                    errmsg: e.data
                })
            })),
            void 0 !== r && this.CPU.seek(r),
            this.CPU.setflv(e)
        }
        ,
        r.parseCallback = function(e) {
            switch (e.cmd) {
            case "mediaSegmentInit":
                this.emit("mediaSegmentInit", e.source);
                break;
            case "mediaSegment":
                this.emit("mediaSegment", e.source);
                break;
            case "mediainfo":
                this.mediaInfo = e.source,
                this.emit("mediaInfo", e.source);
                break;
            case "error":
                this.emit("error", e.source)
            }
        }
        ,
        r.onMediaInfo = function(e) {
            this.mediaInfo = e,
            this.emit("mediaInfo", e)
        }
        ,
        r.onRemuxerInitSegmentArrival = function(e, t) {
            this.emit("mediaSegmentInit", {
                type: "video",
                data: e
            }),
            t && this.emit("mediaSegmentInit", {
                type: "audio",
                data: t
            })
        }
        ,
        r.onRemuxerMediaSegmentArrival = function(e, t) {
            this.emit("mediaSegment", {
                type: e,
                data: t
            })
        }
        ,
        r.getMediaInfo = function() {
            return this.mediaInfo
        }
        ,
        r.pause = function() {
            this.config.webWorker ? this.w.postMessage({
                cmd: "pause"
            }) : this.loader.pause()
        }
        ,
        r.resume = function() {
            this.config.webWorker ? this.w.postMessage({
                cmd: "resume"
            }) : this.loader.resume()
        }
        ,
        r.isSeekable = function() {
            return this.mediaInfo.hasKeyframesIndex
        }
        ,
        r.seek = function(e) {
            if (!this.isSeekable())
                return this.emit("error", {
                    errno: Ar,
                    errmsg: "这个flv视频不支持seek"
                }),
                !1;
            this.config.webWorker ? this.w.postMessage({
                cmd: "seek",
                keyframe: e
            }) : this.loader.seek(e.keyframePoint, !1, e.keyframetime)
        }
        ,
        r.destroy = function() {
            this.config.webWorker ? this.w.postMessage({
                cmd: "destroy"
            }) : (this.loader.destroy(),
            this.loader = null,
            this.CPU = null)
        }
        ,
        r.getNearestKeyframe = function(e) {
            if (this.mediaInfo && this.mediaInfo.keyframesIndex) {
                var t = this.mediaInfo.keyframesIndex.times
                  , r = this.mediaInfo.keyframesIndex.filepositions
                  , i = function(e, n) {
                    var a = e.length
                      , o = Math.floor(a / 2);
                    if (1 === a) {
                        var s = t.indexOf(e[0]);
                        return {
                            keyframetime: e[0],
                            keyframePoint: r[s]
                        }
                    }
                    if (e[o] > n)
                        return i(e.slice(0, o), n);
                    if (e[o] < n)
                        return i(e.slice(o), n);
                    var u = t.indexOf(e[0]);
                    return {
                        keyframetime: e[0],
                        keyframePoint: r[u]
                    }
                };
                return i(t, e)
            }
            return 0
        }
        ,
        t
    }(Ve)
      , ai = {
        isLive: !1,
        box: "flv",
        seekInKeyframe: !0,
        alwaysSeekKeyframe: !0,
        lazyLoadMaxDuration: 120,
        lazyLoadRecoverDuration: 30,
        lockInternalProperty: !1,
        debug: !0,
        webWorker: !1,
        autoCleanupSourceBuffer: !0,
        autoCleanupMaxBackwardDuration: 30,
        autoCleanupMinBackwardDuration: 30,
        stashSize: 393216,
        seekType: "range"
    }
      , oi = function(e) {
        function t(t, r) {
            var i;
            return (i = e.call(this) || this).tag = "flv-player",
            i.video = t,
            i.box = "flv",
            i.timer = null,
            i.seekTimer = null,
            i.config = w({}, ai, r),
            i.requestSetTime = !1,
            i.throttle = null,
            i.bindEvents(),
            i.attachMedia(),
            i
        }
        i(t, e),
        t.isSupport = function() {
            var e = se;
            return !(e.safari && parseInt(e.version.major) < 10) && !(!window.MediaSource || !window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.640020,mp4a.40.2"'))
        }
        ,
        r(t, null, [{
            key: "version",
            get: function() {
                return "2.2.35-"
            }
        }]);
        var n = t.prototype;
        return n.internalPropertyHandle = function() {
            if (Object.getOwnPropertyDescriptor) {
                var e = this
                  , t = Object.getOwnPropertyDescriptor(HTMLMediaElement.prototype, "currentTime");
                Object.defineProperty(this.video, "currentTime", {
                    get: function() {
                        return t.get.call(e.video)
                    },
                    set: function(r) {
                        if (e.currentTimeLock)
                            return t.set.call(e.video, r);
                        throw new Error("can not set currentTime by youself")
                    }
                })
            }
        }
        ,
        n.bindEvents = function() {
            var e = this;
            this.video && this.video.addEventListener("canplay", function() {
                e.config.isLive,
                e.config.lockInternalProperty && e.internalPropertyHandle()
            })
        }
        ,
        n.attachMedia = function() {
            var e = this;
            this.mediaSource = new xr(this.video,this.config),
            this.mediaSource.on("error", function(t) {
                e.emit("error", t.data),
                e.transmuxer && e.transmuxer.pause()
            }),
            this.mediaSource.on("bufferFull", function() {
                e.pauseTransmuxer()
            }),
            this.mediaSource.on("updateend", function() {
                e.onmseUpdateEnd()
            })
        }
        ,
        n.load = function(e) {
            e && (this.config.src = e),
            this.transmuxer = new ni(this.mediaSource,this.config,this.globalEvent),
            this.transmuxerEvent(this.transmuxer),
            this.transmuxer.loadSource()
        }
        ,
        n.transmuxerEvent = function(e) {
            var t = this
              , r = this.mediaSource;
            e.on("mediaSegment", function(e) {
                r.emit("mediaSegment", e.data)
            }),
            e.on("mediaSegmentInit", function(e) {
                r.emit("mediaSegmentInit", e.data)
            }),
            e.on("error", function(i) {
                t.emit("flvStreamError", i.data),
                e.pause(),
                r.pause()
            }),
            e.on("end", function(e) {
                r.endOfStream()
            }),
            e.on("heartbeat", function(e) {
                t.emit("heartbeat", e.data)
            }),
            e.on("mediaInfo", function(e) {
                t.mediaInfo || (t.mediaInfo = e,
                t.emit("mediaInfo", e.data),
                r.init(e.data),
                t.video.src = URL.createObjectURL(r.mediaSource),
                t.video.addEventListener("seeking", t._throttle.call(t)))
            })
        }
        ,
        n._throttle = function() {
            return this.throttle = function(e, t, r, i) {
                var n, a, o, s = null, u = 0;
                r || (r = {});
                var h = function() {
                    u = !1 === r.leading ? 0 : new Date - 0,
                    s = null,
                    o = e.apply(n, a),
                    s || (n = a = null)
                };
                return t = t || 0,
                function() {
                    var d = new Date;
                    u || !1 !== r.leading || (u = d);
                    var f = t - (d - u);
                    return n = i || this,
                    a = arguments,
                    f <= 0 || f > t ? (s && (clearTimeout(s),
                    s = null),
                    u = d,
                    o = e.apply(n, a),
                    s || (n = a = null)) : s || !1 === r.trailing || (s = setTimeout(h, f)),
                    o
                }
            }(this._seek.bind(this), 200, {
                leading: !1
            }),
            this.throttle
        }
        ,
        n.isTimeinBuffered = function(e) {
            for (var t = this.video.buffered, r = 0; r < t.length; r++) {
                var i = t.start(r)
                  , n = t.end(r);
                if (e >= i && e < n)
                    return !0
            }
            return !1
        }
        ,
        n.getCurrentBufferEnd = function() {
            for (var e = this.video.buffered, t = this.video.currentTime, r = 0; r < e.length; r++) {
                var i = e.start(r)
                  , n = e.end(r);
                if (i <= t && t < n)
                    return n
            }
        }
        ,
        n._seek = function(e) {
            var t = this;
            this.currentTimeLock = !0;
            var r = d(e) && !isNaN(e) ? e : this.video.currentTime;
            if (this.requestSetTime)
                return this.requestSetTime = !1,
                void (this.currentTimeLock = !1);
            if (this.isTimeinBuffered(r)) {
                if (this.config.alwaysSeekKeyframe) {
                    var i = this.transmuxer.getNearestKeyframe(Math.floor(1e3 * r));
                    i && (this.requestSetTime = !0,
                    this.video.currentTime = i.keyframetime / 1e3)
                }
            } else {
                ir.verbose(this.tag, "do seek"),
                this.transmuxer.pause();
                var n = this.transmuxer.getNearestKeyframe(Math.floor(1e3 * r));
                r = n.keyframetime / 1e3,
                this.seekTimer = setTimeout(function() {
                    t.mediaSource.seek(r),
                    t.transmuxer.seek(n)
                }, 100),
                this.requestSetTime = !0,
                this.video.currentTime = r,
                window.clearInterval(this.timer),
                this.timer = null
            }
            return this.currentTimeLock = !1,
            r
        }
        ,
        n.onmseUpdateEnd = function() {
            this.config.isLive || this.getCurrentBufferEnd() >= this.video.currentTime + this.config.lazyLoadMaxDuration && null === this.timer && (ir.verbose(this.tag, "Maximum buffering duration exceeded, suspend transmuxing task"),
            this.pauseTransmuxer())
        }
        ,
        n.heartbeat = function() {
            for (var e = this.video.currentTime, t = this.video.buffered, r = !1, i = 0; i < t.length; i++) {
                var n = t.start(i)
                  , a = t.end(i);
                if (e >= n && e < a) {
                    e >= a - this.config.lazyLoadRecoverDuration && (r = !0);
                    break
                }
            }
            r && (window.clearInterval(this.timer),
            this.timer = null,
            ir.verbose(this.tag, "Continue loading from paused position"),
            this.transmuxer.resume(),
            this.mediaSource.resume())
        }
        ,
        n.pauseTransmuxer = function() {
            this.transmuxer.pause(),
            this.mediaSource.pause(),
            this.timer || (this.timer = setInterval(this.heartbeat.bind(this), 1e3))
        }
        ,
        n.resume = function() {
            this._seek(0)
        }
        ,
        n.destroy = function() {
            window.clearInterval(this.timer),
            window.clearInterval(this.seekTimer),
            this.video.removeEventListener("seeking", this.throttle),
            this.video && (URL.revokeObjectURL(this.video.src),
            this.video.src = "",
            this.video.removeAttribute("src"),
            this.transmuxer && (this.transmuxer.pause(),
            this.transmuxer.destroy(),
            this.transmuxer = null),
            this.mediaSource && (this.mediaSource.destroy(),
            this.mediaSource = null))
        }
        ,
        n.seek = function(e) {
            return this._seek(e)
        }
        ,
        n.play = function() {
            return this.video.play()
        }
        ,
        n.pause = function() {
            return this.video.pause()
        }
        ,
        n.refresh = function() {
            this.transmuxer && this.mediaSource ? this._seek(0) : ir.verbose(this.tag, "transmuxer & mediaSource not ready")
        }
        ,
        n.stopLoad = function() {
            this.transmuxer && this.transmuxer.pause(),
            this.mediaSource && this.mediaSource.pause()
        }
        ,
        n.getSpeed = function() {
            return 0
        }
        ,
        t
    }(Ve)
      , si = function() {
        var e = this;
        e.peers = void 0,
        e.peerId = void 0,
        e.downloadTotals = void 0,
        e.uploadTotal = void 0,
        e.uploadStats = void 0,
        e.downloadStats = void 0,
        e.hls = void 0,
        e.getPeerID = void 0,
        e.setHls = function(t) {
            e.hls = t
        }
        ,
        e.setPeerID = function(t) {
            e.peerId = t
        }
        ,
        e.setPeers = function(t) {
            e.peers.set(t.id, t)
        }
        ,
        e.delPeers = function(t) {
            e.peers.delete(t)
        }
        ,
        e.handleDownload = function(t, r) {
            e.downloadStats.push({
                method: t,
                size: r,
                timeStamp: performance.now()
            }),
            e.downloadTotals[t] += r,
            e.emitStats({
                stats: e.getStats()
            })
        }
        ,
        e.handleUpload = function(t, r) {
            e.uploadStats.push({
                size: r,
                timeStamp: performance.now()
            }),
            e.uploadTotal += r,
            e.emitStats({
                stats: e.getStats()
            })
        }
        ,
        e.reset = function() {
            e.peers.clear(),
            e.downloadTotals = {
                p2p: 0,
                http: 0
            },
            e.uploadStats.length = 0,
            e.uploadTotal = 0,
            e.downloadStats.length = 0
        }
        ,
        e.getStats = function() {
            var t = e.downloadTotals
              , r = t.http
              , i = t.p2p
              , n = e.uploadTotal
              , a = r + i;
            return {
                peerId: e.peerId || "",
                total: a,
                http: r,
                p2p: i,
                upload: n,
                peers: e.peers.size,
                p2pRatio: +(i / a).toFixed(3)
            }
        }
        ,
        e.handlePeers = function(t, r) {
            var i = e.getPeerID ? e.getPeerID() : "";
            e.hls.trigger("peers", {
                event: t,
                peer: r,
                peerId: i
            }),
            ir.info("mango-kernel-hls:hls", "peers => " + JSON.stringify(Array.from(e.peers.values()).map(function(e) {
                return e.id + (e.remoteAddress ? "@" + e.remoteAddress + ":" + e.remotePort : "")
            })))
        }
        ,
        e.emitStats = function(t) {
            e.hls.trigger("stats", t)
        }
        ,
        e.handleByteReport = function(t, r, i) {
            var n, a, o, s = r.id, u = r.method, h = r.bytesLoaded, d = r.tfirst, f = r.tload, c = r.hDate, l = r.timeLoad, p = r.url, m = r.sn;
            switch (a = o = 0,
            t) {
            case ui.SegmentLoaded:
                o = 1,
                n = "0",
                Math.max(Math.floor(f - d), 0),
                a = ~~h || 0;
                break;
            case ui.SegmentAbort:
                n = "0",
                Math.max(Math.floor(f - d), 0),
                a = ~~h || 0;
                break;
            case ui.SegmentError:
                n = 304e3 + ~~i.code,
                Math.max(Math.floor(f - d), 0),
                a = ~~h || 0;
                break;
            case ui.SegmentTimeout:
                n = 304600,
                Math.max(Math.floor(f - d), 0),
                a = ~~h || 0
            }
            -1 === e.segmentId.indexOf(s) && e.segmentId.push(s);
            var g = le(p).hostname
              , v = {
                from: "p2p" == u || u.indexOf("hezi-") > -1 || u.indexOf("thirdP2P-") > -1 ? u : /^(?=.*[^\.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.?){4}$/.test(g) ? "mgcdn" : g,
                delay: c && l ? l - new Date(c) : "",
                len: a,
                eff: o,
                err: n,
                seq: m
            };
            e.emitStats({
                byteStats: {
                    detail: v
                }
            })
        }
        ,
        e.peers = new Map,
        e.downloadTotals = {
            p2p: 0,
            http: 0
        },
        e.uploadTotal = 0,
        e.uploadStats = [],
        e.downloadStats = [],
        e.segmentId = []
    }
      ,
       ui = {
        SegmentLoaded: "SegmentLoaded",
        SegmentAbort: "SegmentAbort",
        SegmentError: "SegmentError",
        SegmentTimeout: "SegmentTimeout"
    }
      , hi = window.Hls.Events
      , di = window.Hls.isSupported
      , fi = window.P2Hls.isSupported;

    window.si = si;//siyuan: add gloable variable
    hi.P2P_STATS = "stats",
    hi.P2P_ERROR = "p2p-error",
    hi.SEGMENT_LOADED = "segment-loaded",
    hi.P2P_REPORT = "p2p-report",
    hi.P2P_PEERS = "peers";
    var ci, li, pi = Qt.parseURL, mi = function(e) {
        e = Object.assign({}, e);
        var t, r = window.P2Hls, i = window.Hls, n = new si, a = e.p2p || {};
        delete e.p2p;
        var o = window.performance.memory && window.performance.memory.jsHeapSizeLimit / 1024 / 1024 / 1024 || 2.4;
        if (o = Math.min(.5 * o, 1.2),
        a.enable && h(r) && u(r.isSupported) && r.isSupported()) {
            var s = ["signal.api.mgtv.com", "signal2.api.mgtv.com"].map(function(e) {
                return location.protocol.replace("http", "ws") + "//" + e + "/ws"
            })
              , d = new r.Engine(w({
                cdnld: e.cdnld,
                xhrLoader: i.DefaultConfig.loader,
                loader: {
                    trackerAnnounce: [s],
                    rtcConfig: {
                        iceServers: [{
                            urls: "stun:stun.hitv.com"
                        }]
                    },
                    cacheSize: o + "gb",
                    getFPSig: function(e) {
                        var t, r = ((pi(e.url) || "").path || "").split("/").pop();
                        return r && -1 !== (t = r.indexOf("_")) ? r.substring(0, t) : null
                    }
                },
                segments: {
                    swarmId: function(e) {
                        var t = e.split("?")[0]
                          , r = pi(t);
                        return r && r.path || t
                    }
                }
            }, a))
              , f = d.peerId;
            ir.info("mango-kernel-hls:hls", "\n----------------------------\nHLS.js: v" + i.version + "\nP2P Client: v" + r.version + "\nPeer Id: " + f + "\n----------------------------");
            var c = r.Events;
            n.setPeerID(f),
            n.getPeerID = function() {
                return d.peerId
            }
            ,
            d.on(c.PeerConnect, function(e) {
                n.setPeers(e),
                n.handlePeers(c.PeerConnect, e)
            }).on(c.PeerClose, function(e) {
                n.delPeers(e),
                n.handlePeers(c.PeerClose, {
                    id: e
                })
            }).on(c.PieceBytesLoaded, function(e, t) {
                n.handleDownload(e, t)
            }).on(c.PieceBytesUploaded, function(e, t) {
                n.handleUpload(e, t)
            }).on(c.SegmentLoaded, function(e) {
                t.trigger(c.SegmentLoaded, e),
                n.handleByteReport(ui.SegmentLoaded, e)
            }).on(c.SegmentAbort, function(e) {
                n.handleByteReport(ui.SegmentAbort, e)
            }).on(c.SegmentError, function(e, r) {
                t.trigger("segment-error", e),
                n.handleByteReport(ui.SegmentError, e, r)
            }).on(c.SegmentTimeout, function(e) {
                n.handleByteReport(ui.SegmentTimeout, e)
            }).on(c.P2PError, function(e) {
                t.trigger(c.P2PError, e)
            }).on(c.P2PReport, function(e) {
                t.trigger(c.P2PReport, e)
            }),
            (t = new i(Object.assign({}, e, {
                loader: d.loaderCreator()
            }))).on(hi.DESTROYING, function() {
                ir.info("mango-kernel-hls:hls", "HLS instance destroying..."),
                d.destroy(),
                n.reset()
            }),
            d.attach(t)
        } else
            t = new i(e);
        return n.setHls(t),
        t
    }, gi = {
        debug: !1,
        enableBitrateTest: !1,
        enableWorker: !0,
        maxBufferLength: 60,
        maxBufferSize: 6e6,
        manifestLoadingMaxRetry: 0,
        manifestLoadingTimeOut: 11e3,
        levelLoadingTimeOut: 11e3,
        levelLoadingMaxRetry: 2,
        nudgeMaxRetry: 20,
        fragLoadingRetryDelay: 0,
        levelLoadingRetryDelay: 0,
        fragLoadingMaxRetry: 2,
        autoStartLoad: !1
    }, vi = "1.0.1", yi = "mango-kernel-hls", bi = ((li = function(e) {
        function t(t, r, i) {
            var n;
            if (void 0 === i && (i = {}),
            (n = e.call(this) || this).version = vi,
            n._speed = 0,
            n._stats = {},
            n._startPosition = 0,
            !m(t))
                throw new Error("video element passed in " + yi + " must be a HTMLVideoElement, but not " + typeof t);
            if (!h(r))
                throw new Error("config of " + yi + " must be an Object but not " + typeof r);
            n.video = t,
            n.config = r;
            var a = w({}, gi, i);
            return n.config.drmData && (a.emeEnabled = !0,
            a.widevineLicenseUrl = unescape(n.config.drmData["com.widevine.alpha"].serverURL)),
            0 == n.config.p2pSwitch && (a.p2p = {
                enable: !1
            }),
            n.config.cdnld && (a.cdnld = n.config.cdnld),
            n.hlsKernel = mi(a),
            n.bytestat = new si,
            n.bytestat.setHls(n.hlsKernel),
            n.bindEvents(),
            n.attachMedia(),
            n
        }
        i(t, e),
        t.isSupport = function() {
            return di()
        }
        ;
        var n = t.prototype;
        return n.bindEvents = function(e) {
            var t = this;
            void 0 === e && (e = !1);
            var r = this.hlsKernel;
            if (r) {
                var i = e ? "off" : "on";
                [hi.MANIFEST_LOADED, hi.MANIFEST_PARSED, hi.DISPATCHER_LOADED, hi.DISPATCHER_ERROR, hi.ERROR, hi.BUFFER_EMPTY, hi.BUFFER_FULL, hi.FRAG_PARSING_INIT_SEGMENT, hi.FRAG_LOADED, hi.FRAG_LOAD_PROGRESS, hi.FRAG_PARSING_DATA, hi.LEVEL_SWITCHING, hi.LEVEL_SWITCHED, hi.LEVEL_LOADED, hi.P2P_STATS, hi.P2P_ERROR, hi.SEGMENT_LOADED, "segment-error", hi.P2P_PEERS, hi.P2P_REPORT].forEach(function(e) {
                    r[i](e, t.hlsEventHandler)
                })
            }
        }
        ,
        n.load = function(e, t, r, i, n, a) {
            void 0 === t && (t = -1),
            void 0 === n && (n = -1),
            void 0 === a && (a = ""),
            -1 != n && (this.hlsKernel.nextLevel = n),
            this._startPosition = t,
            this.hlsKernel.loadSource(this.config.src, this.config.playlist, a)
        }
        ,
        n.startLoad = function(e, t) {
            return void 0 === t && (t = -1),
            this.hlsKernel.startLoad(t)
        }
        ,
        n.stopLoad = function() {
            return this.hlsKernel.stopLoad()
        }
        ,
        n.attachMedia = function() {
            return this.hlsKernel.attachMedia(this.video)
        }
        ,
        n.play = function() {
            return this.video.play()
        }
        ,
        n.destroy = function() {
            return this.bindEvents(!0),
            this.removeAllListeners(),
            this.hlsKernel.destroy()
        }
        ,
        n.loadLevel = function(e) {
            var t = this;
            return new Promise(function(r, i) {
                t._loadLevel(e, function() {
                    r("level switched.")
                })
            }
            )
        }
        ,
        n._loadLevel = function(e, t) {
            this.hlsKernel.nextLevel = e,
            this.loadLevelCallback = t
        }
        ,
        n.seek = function(e) {
            this.video.currentTime = e
        }
        ,
        n.pause = function() {
            return this.video.pause()
        }
        ,
        n.refresh = function() {
            return this.hlsKernel.stopLoad(),
            this.hlsKernel.loadSource(this.config.src, this.config.fakeMasterPlaylist)
        }
        ,
        n.getMetadata = function() {
            return this.metadata
        }
        ,
        n.getSpeed = function() {
            return this._speed
        }
        ,
        n.getFps = function() {
            return this.fps || 0
        }
        ,
        n.getBufferInfo = function() {
            return this.hlsKernel.bufferInfo
        }
        ,
        n.hlsEventHandler = function(e, t) {
            var r = this
              , i = t.stats || t.frag && t.frag.stats
              , n = ce(this, "config.p2p.enable", !1)
              , a = fi && u(fi) && fi();
            switch (e) {
            case hi.LEVEL_SWITCHED:
                this.loadLevelCallback && this.loadLevelCallback(),
                this.loadLevelCallback = null;
                break;
            case hi.BUFFER_EMPTY:
                ir.warn(yi, "hlscore buffer is empty.");
                break;
            case hi.FRAG_PARSING_DATA:
                "video" === t.type && (this.fps = t.nb / (t.endPTS - t.startPTS));
                break;
            case hi.FRAG_PARSING_INIT_SEGMENT:
                this.metadata = ce(t, "tracks.video.metadata", {});
                break;
            case hi.FRAG_LOADED:
                i && i.speed && (this._speed = i.speed),
                (!n || !a) && !this.config.isLive && this._handleByteHBReport(e, t);
                break;
            case hi.FRAG_LOAD_PROGRESS:
                i && i.speed && (this._speed = i.speed);
                break;
            case hi.ERROR:
                this._handleHlsError(e, t),
                (!n || !a) && !this.config.isLive && this._handleByteHBReport(e, t);
                break;
            case hi.P2P_STATS:
                i && (i.speed = i.speed || this._speed || 0,
                this._stats = i);
                break;
            case hi.P2P_ERROR:
                break;
            case hi.MANIFEST_PARSED:
                ir.log("m3u8 manifest parsed."),
                setTimeout(function() {
                    r.hlsKernel.startLoad(r._startPosition || 0)
                }, 0);
                break;
            case "segment-error":
                this.emit("hlsSegmentError", t);
                break;
            case hi.P2P_PEERS:
            }
            this.emit(e, t)
        }
        ,
        n._handleHlsError = function(e, t) {
            var r = t && t.details;
            this.emit("hlsStreamError", t),
            this.emit(e, t),
            ir.error(yi, "hlscore error ouccurred at event [" + e + "], detail " + r + " - " + (t && (t.err || t.reason || t.error || "")))
        }
        ,
        n._handleByteHBReport = function(e, t) {
            var r, i, n, a, o, s, u, h, d;
            if ((e !== hi.ERROR || "fragLoadError" === t.details || "fragLoadTimeOut" === t.details) && (r = ce(t, "frag.url", ""),
            i = ce(t, "frag.sn", ""),
            e === hi.FRAG_LOADED ? (n = ce(t, "stats.loaded", 0),
            a = ce(t, "stats.tfirst", 0),
            o = ce(t, "stats.lastLoadedTime", 0),
            h = ce(t, "stats.hDate", ""),
            d = ce(t, "stats.timeLoad", "")) : e === hi.ERROR && (n = ce(t, "frag.loader.stats.loaded"),
            a = ce(t, "frag.loader.stats.tfirst"),
            o = ce(t, "frag.loader.stats.lastLoadedTime"),
            s = ce(t, "response.code"),
            u = ce(t, "response.text")),
            r)) {
                var f = r.split("?")[0].split("/").filter(function(e) {
                    return e.endsWith("mp4.ts")
                })[0];
                if (f) {
                    var c = {
                        id: f = f.split("_")[0],
                        method: "cdn",
                        bytesLoaded: n,
                        tload: o,
                        tfirst: a,
                        hDate: h,
                        timeLoad: d,
                        sn: i,
                        url: r
                    };
                    switch (e) {
                    case hi.FRAG_LOADED:
                        this.bytestat.handleByteReport(ui.SegmentLoaded, c);
                        break;
                    case hi.ERROR:
                        "fragLoadError" === t.details ? this.bytestat.handleByteReport(ui.SegmentError, c, {
                            code: s,
                            text: u
                        }) : "fragLoadTimeOut" === t.details && this.bytestat.handleByteReport(ui.SegmentTimeout, c)
                    }
                }
            }
        }
        ,
        r(t, [{
            key: "stats",
            get: function() {
                return this._stats
            }
        }]),
        t
    }(Ve)).version = vi,
    a((ci = li).prototype, "hlsEventHandler", [O], Object.getOwnPropertyDescriptor(ci.prototype, "hlsEventHandler"), ci.prototype),
    ci), wi = {
        METADATA_PARSED: "metadataParsed",
        MEDIA_ATTACHING: "mp4MediaAttaching",
        MEDIA_ATTACHED: "mp4MediaAttached",
        MEDIA_DETACHING: "mp4MediaDetaching",
        MEDIA_DETACHED: "mp4MediaDetached",
        BUFFER_RESET: "mp4BufferReset",
        BUFFER_CODECS: "mp4BufferCodecs",
        BUFFER_CREATED: "mp4BufferCreated",
        BUFFER_APPENDING: "mp4BufferAppending",
        BUFFER_APPENDED: "mp4BufferAppended",
        BUFFER_FULL: "mp4BufferFull",
        BUFFER_EMPTY: "mp4BufferEmpty",
        BUFFER_EOS: "mp4BufferEos",
        BUFFER_FLUSHING: "mp4BufferFlushing",
        BUFFER_FLUSHED: "mp4BufferFlushed",
        FRAG_LOADING: "mp4FragLoading",
        FRAG_LOAD_PROGRESS: "mp4FragLoadProgress",
        FRAG_LOAD_EMERGENCY_ABORTED: "mp4FragLoadEmergencyAborted",
        FRAG_LOADED: "mp4FragLoaded",
        FRAG_DECRYPTED: "mp4FragDecrypted",
        FRAG_PARSING_DATA: "mp4FragParsingData",
        FRAG_PARSED: "mp4FragParsed",
        FRAG_BUFFERED: "mp4FragBuffered",
        FRAG_CHANGED: "mp4FragChanged",
        ERROR: "mp4Error",
        DESTROYING: "mp4Destroying",
        STREAM_STATE_TRANSITION: "mp4StreamStateTransition"
    }, _i = {
        NETWORK_ERROR: "kernelNetworkError",
        MEDIA_ERROR: "kernelMediaError",
        MUX_ERROR: "kernelMuxError",
        OTHER_ERROR: "kernelOtherError"
    }, Si = {
        METADATA_PARSING_ERROR: "metadataParsingError",
        METADATA_INCOMPATIBLE_CODECS_ERROR: "metadataIncompatibleCodecsError",
        FRAG_LOAD_ERROR: "fragLoadError",
        FRAG_LOOP_LOADING_ERROR: "fragLoopLoadingError",
        FRAG_LOAD_TIMEOUT: "fragLoadTimeOut",
        FRAG_DECRYPT_ERROR: "fragDecryptError",
        FRAG_PARSING_ERROR: "fragParsingError",
        REMUX_ALLOC_ERROR: "remuxAllocError",
        BUFFER_ADD_CODEC_ERROR: "bufferAddCodecError",
        BUFFER_APPEND_ERROR: "bufferAppendError",
        BUFFER_APPENDING_ERROR: "bufferAppendingError",
        BUFFER_STALLED_ERROR: "bufferStalledError",
        BUFFER_FULL_ERROR: "bufferFullError",
        BUFFER_SEEK_OVER_HOLE: "bufferSeekOverHole",
        BUFFER_NUDGE_ON_STALL: "bufferNudgeOnStall",
        INTERNAL_EXCEPTION: "internalException"
    };
    window.mi = mi; //siyuan:add globle variable
    function Ei() {}
    var Ai = {
        trace: Ei,
        debug: Ei,
        log: Ei,
        warn: Ei,
        info: Ei,
        error: Ei
    }
      , Ri = Ai;
    function ki(e) {
        for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
            r[i - 1] = arguments[i];
        r.forEach(function(t) {
            Ri[t] = e[t] ? e[t].bind(e) : function(e) {
                var t = self.console[e];
                return t ? function() {
                    for (var r = arguments.length, i = new Array(r), n = 0; n < r; n++)
                        i[n] = arguments[n];
                    i[0] && (i[0] = function(e, t) {
                        return t = "[" + e + "] > " + t
                    }(e, i[0])),
                    t.apply(self.console, i)
                }
                : Ei
            }(t)
        })
    }
    var Ti = function(e) {
        if (!0 === e || "object" == typeof e) {
            ki(e, "debug", "log", "info", "warn", "error");
            try {
                Ri.log()
            } catch (e) {
                Ri = Ai
            }
        } else
            Ri = Ai
    }
      , Li = Ri
      , xi = function() {
        function e(e) {
            this.mp4 = e,
            this.onEvent = this.onEvent.bind(this);
            for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                r[i - 1] = arguments[i];
            this.handledEvents = r,
            this.useGenericHandler = !0,
            this.registerListeners()
        }
        var t = e.prototype;
        return t.destroy = function() {
            this.unregisterListeners()
        }
        ,
        t.isEventHandler = function() {
            return "object" == typeof this.handledEvents && this.handledEvents.length && "function" == typeof this.onEvent
        }
        ,
        t.registerListeners = function() {
            this.isEventHandler() && this.handledEvents.forEach(function(e) {
                if ("mp4EventGeneric" === e)
                    throw new Error("Forbidden event name: " + e);
                this.mp4.on(e, this.onEvent)
            }, this)
        }
        ,
        t.unregisterListeners = function() {
            this.isEventHandler() && this.handledEvents.forEach(function(e) {
                this.mp4.off(e, this.onEvent)
            }, this)
        }
        ,
        t.onEvent = function(e, t) {
            this.onEventGeneric(e, t)
        }
        ,
        t.onEventGeneric = function(e, t) {
            try {
                (function(e, t) {
                    var r = "on" + e.replace("mp4", "");
                    if ("function" != typeof this[r])
                        throw new Error("Event " + e + " has no generic handler in this " + this.constructor.name + " class (tried " + r + ")");
                    return this[r].bind(this, t)
                }
                ).call(this, e, t).call()
            } catch (t) {
                Li.error("internal error happened while processing " + e + ":" + t.message),
                this.mp4.trigger(wi.ERROR, {
                    type: _i.OTHER_ERROR,
                    details: Si.INTERNAL_EXCEPTION,
                    fatal: !1,
                    event: e,
                    err: t
                })
            }
        }
        ,
        e
    }()
      , Bi = function(e) {
        function t(t) {
            var r;
            return (r = e.call(this, t, wi.FRAG_LOADING) || this).loaders = {},
            r
        }
        i(t, e);
        var r = t.prototype;
        return r.destroy = function() {
            var e = this.loaders;
            for (var t in e) {
                var r = e[t];
                r && r.destroy()
            }
            this.loaders = {},
            xi.prototype.destroy.call(this)
        }
        ,
        r.onFragLoading = function(e) {
            var t, r, i, n = e.frag, a = n.type, o = this.loaders[a], s = this.mp4.config;
            n.loaded = 0,
            o && (Li.warn("abort previous fragment loader for type:" + a),
            o.abort()),
            o = this.loaders[a] = n.loader = void 0 !== s.fLoader ? new s.fLoader(s) : new s.loader(s),
            t = {
                url: n.url,
                frag: n,
                responseType: "arraybuffer",
                progressData: !1
            };
            var u = n.byteRangeStartOffset
              , h = n.byteRangeEndOffset;
            isNaN(u) || isNaN(h) || (t.rangeStart = u,
            t.rangeEnd = h),
            r = {
                timeout: s.fragLoadingTimeOut,
                maxRetry: 0,
                retryDelay: 0,
                maxRetryDelay: s.fragLoadingMaxRetryTimeout
            },
            i = {
                onSuccess: this.loadsuccess.bind(this),
                onError: this.loaderror.bind(this),
                onTimeout: this.loadtimeout.bind(this),
                onProgress: this.loadprogress.bind(this)
            },
            o.load(t, r, i)
        }
        ,
        r.loadsuccess = function(e, t, r, i) {
            void 0 === i && (i = null);
            var n = e.data
              , a = r.frag;
            a.loader = void 0,
            this.loaders[a.type] = void 0,
            this.mp4.trigger(wi.FRAG_LOADED, {
                payload: n,
                frag: a,
                stats: t,
                networkDetails: i
            })
        }
        ,
        r.loaderror = function(e, t, r) {
            void 0 === r && (r = null);
            var i = t.loader;
            i && i.abort(),
            this.loaders[t.type] = void 0,
            this.mp4.trigger(wi.ERROR, {
                type: _i.NETWORK_ERROR,
                details: Si.FRAG_LOAD_ERROR,
                fatal: !1,
                frag: t.frag,
                response: e,
                networkDetails: r
            })
        }
        ,
        r.loadtimeout = function(e, t, r) {
            void 0 === r && (r = null);
            var i = t.loader;
            i && i.abort(),
            this.loaders[t.type] = void 0,
            this.mp4.trigger(wi.ERROR, {
                type: _i.NETWORK_ERROR,
                details: Si.FRAG_LOAD_TIMEOUT,
                fatal: !1,
                frag: t.frag,
                networkDetails: r
            })
        }
        ,
        r.loadprogress = function(e, t, r, i) {
            void 0 === i && (i = null);
            var n = t.frag;
            n.loaded = e.loaded,
            this.mp4.trigger(wi.FRAG_LOAD_PROGRESS, {
                frag: n,
                stats: e,
                networkDetails: i
            })
        }
        ,
        t
    }(xi)
      , Di = function(e, t) {
        for (var r = 0, i = e.length - 1, n = null, a = null; r <= i; ) {
            var o = t(a = e[n = (r + i) / 2 | 0]);
            if (o > 0)
                r = n + 1;
            else {
                if (!(o < 0))
                    return a;
                i = n - 1
            }
        }
        return null
    }
      , Pi = {
        isBuffered: function(e, t) {
            try {
                if (e)
                    for (var r = e.buffered, i = 0; i < r.length; i++)
                        if (t >= r.start(i) && t <= r.end(i))
                            return !0
            } catch (e) {}
            return !1
        },
        bufferInfo: function(e, t, r) {
            try {
                if (e) {
                    var i, n = e.buffered, a = [];
                    for (i = 0; i < n.length; i++)
                        a.push({
                            start: n.start(i),
                            end: n.end(i)
                        });
                    return this.bufferedInfo(a, t, r)
                }
            } catch (e) {}
            return {
                len: 0,
                start: t,
                end: t,
                nextStart: void 0
            }
        },
        bufferedInfo: function(e, t, r) {
            var i, n, a, o, s, u = [];
            for (e.sort(function(e, t) {
                var r = e.start - t.start;
                return r || t.end - e.end
            }),
            s = 0; s < e.length; s++) {
                var h = u.length;
                if (h) {
                    var d = u[h - 1].end;
                    e[s].start - d < r ? e[s].end > d && (u[h - 1].end = e[s].end) : u.push(e[s])
                } else
                    u.push(e[s])
            }
            for (s = 0,
            i = 0,
            n = a = t; s < u.length; s++) {
                var f = u[s].start
                  , c = u[s].end;
                if (t + r >= f && t < c)
                    n = f,
                    i = (a = c) - t;
                else if (t + r < f) {
                    o = f;
                    break
                }
            }
            return {
                len: i,
                start: n,
                end: a,
                nextStart: o
            }
        }
    }
      , Mi = function(e) {
        return function(e) {
            return !!e && "object" == typeof e
        }(e) && !function(e) {
            var t = Object.prototype.toString.call(e);
            return "[object RegExp]" === t || "[object Date]" === t || function(e) {
                return e.$$typeof === Ui
            }(e)
        }(e)
    };
    var Ui = "function" == typeof Symbol && Symbol.for ? Symbol.for("react.element") : 60103;
    function Ii(e, t) {
        return !1 !== t.clone && t.isMergeableObject(e) ? Ci((r = e,
        Array.isArray(r) ? [] : {}), e, t) : e;
        var r
    }
    function Oi(e, t, r) {
        return e.concat(t).map(function(e) {
            return Ii(e, r)
        })
    }
    function Ci(e, t, r) {
        (r = r || {}).arrayMerge = r.arrayMerge || Oi,
        r.isMergeableObject = r.isMergeableObject || Mi;
        var i = Array.isArray(t);
        return i === Array.isArray(e) ? i ? r.arrayMerge(e, t, r) : function(e, t, r) {
            var i = {};
            return r.isMergeableObject(e) && Object.keys(e).forEach(function(t) {
                i[t] = Ii(e[t], r)
            }),
            Object.keys(t).forEach(function(n) {
                r.isMergeableObject(t[n]) && e[n] ? i[n] = Ci(e[n], t[n], r) : i[n] = Ii(t[n], r)
            }),
            i
        }(e, t, r) : Ii(t, r)
    }
    Ci.all = function(e, t) {
        if (!Array.isArray(e))
            throw new Error("first argument should be an array");
        return e.reduce(function(e, r) {
            return Ci(e, r, t)
        }, {})
    }
    ;
    var Fi = Ci
      , Ni = function() {
        function e(e) {
            if (!(e instanceof ArrayBuffer))
                throw new Error("buffer data is invalid");
            this.buffer = e,
            this.dataview = new DataView(e),
            this.dataview.position = 0
        }
        var t = e.prototype;
        return t.skip = function(t) {
            for (var r = Math.floor(t / 4), i = t % 4, n = 0; n < r; n++)
                e.readByte(this.dataview, 4);
            i > 0 && e.readByte(this.dataview, i)
        }
        ,
        e.readByte = function(e, t, r) {
            var i;
            switch (t) {
            case 1:
                i = r ? e.getInt8(e.position) : e.getUint8(e.position);
                break;
            case 2:
                i = r ? e.getInt16(e.position) : e.getUint16(e.position);
                break;
            case 3:
                if (r)
                    throw new Error("[stream] not supported for readByte 3");
                i = e.getUint8(e.position) << 16,
                i |= e.getUint8(e.position + 1) << 8,
                i |= e.getUint8(e.position + 2);
                break;
            case 4:
                i = r ? e.getInt32(e.position) : e.getUint32(e.position);
                break;
            case 8:
                if (r)
                    throw new Error("[stream] not supported for readBody 8");
                i = e.getUint32(e.position) << 32,
                i |= e.getUint32(e.position + 4);
                break;
            default:
                i = ""
            }
            return e.position += t,
            i
        }
        ,
        t.readUint8 = function() {
            return e.readByte(this.dataview, 1)
        }
        ,
        t.readUint16 = function() {
            return e.readByte(this.dataview, 2)
        }
        ,
        t.readUint32 = function() {
            return e.readByte(this.dataview, 4)
        }
        ,
        t.readUint64 = function() {
            return e.readByte(this.dataview, 8)
        }
        ,
        t.readInt8 = function() {
            return e.readByte(this.dataview, 1, !0)
        }
        ,
        t.readInt16 = function() {
            return e.readByte(this.dataview, 2, !0)
        }
        ,
        t.readInt32 = function() {
            return e.readByte(this.dataview, 4, !0)
        }
        ,
        r(e, [{
            key: "position",
            set: function(e) {
                this.dataview.position = e
            },
            get: function() {
                return this.dataview.position
            }
        }]),
        e
    }()
      , zi = function() {
        function e() {
            this.headSize = 8,
            this.size = 0,
            this.type = "",
            this.subBox = [],
            this.start = -1
        }
        var t = e.prototype;
        return t.readHeader = function(e) {
            if (this.start = e.position,
            this.size = e.readUint32(),
            this.type = String.fromCharCode(e.readUint8(), e.readUint8(), e.readUint8(), e.readUint8()),
            1 === this.size)
                this.size = e.readUint64();
            else if (0 === this.size && "mdat" !== this.type)
                throw new Error("parse mp4 mdat box failed");
            if ("uuid" === this.type)
                for (var t = [], r = 0; r < 16; r++)
                    t.push(e.readUint8())
        }
        ,
        t.readBody = function(t) {
            var r, i = this.size - t.position + this.start, n = this.type;
            this.data = t.buffer.slice(t.position, t.position + i),
            t.position += this.data.byteLength,
            (r = e.containerBox.find(function(e) {
                return e === n
            }) ? e.containerParser : e[n]) && r instanceof Function && r.call(this)
        }
        ,
        t.read = function(e) {
            this.readHeader(e),
            this.readBody(e)
        }
        ,
        e.containerParser = function() {
            for (var t = new Ni(this.data), r = t.buffer.byteLength; t.position < r; ) {
                var i = new e;
                i.readHeader(t),
                this.subBox.push(i),
                i.readBody(t)
            }
            delete this.data,
            t = null
        }
        ,
        e
    }();
    zi.containerBox = ["moov", "trak", "edts", "mdia", "minf", "dinf", "stbl", "mvex", "moof", "traf", "mfra"];
    var ji = te(function(e, t) {
        Object.defineProperty(t, "__esModule", {
            value: !0
        }),
        t.default = function(e) {
            for (var t = 0, r = arguments.length, i = Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)
                i[n - 1] = arguments[n];
            var a = !0
              , o = !1
              , s = void 0;
            try {
                for (var u, h = i[Symbol.iterator](); !(a = (u = h.next()).done); a = !0) {
                    t += u.value.length
                }
            } catch (e) {
                o = !0,
                s = e
            } finally {
                try {
                    !a && h.return && h.return()
                } finally {
                    if (o)
                        throw s
                }
            }
            var d = new e(t)
              , f = 0
              , c = !0
              , l = !1
              , p = void 0;
            try {
                for (var m, g = i[Symbol.iterator](); !(c = (m = g.next()).done); c = !0) {
                    var v = m.value;
                    d.set(v, f),
                    f += v.length
                }
            } catch (e) {
                l = !0,
                p = e
            } finally {
                try {
                    !c && g.return && g.return()
                } finally {
                    if (l)
                        throw p
                }
            }
            return d
        }
    });
    ee(ji);
    var Gi = ee(te(function(e) {
        var t, r = (t = ji) && t.__esModule ? t : {
            default: t
        };
        e.exports = r.default
    }));
    zi.MP4DecConfigDescrTag = function(e) {
        var t, r = new zi;
        return r.type = e.readUint8(),
        128 === (t = e.readUint8()) ? (r.extend = !0,
        e.skip(2),
        t = e.readUint8() + 5) : t += 2,
        r.size = t,
        r.typeID = e.readUint8(),
        r.streamUint = e.readUint8(),
        r.bufferSize = Ni.readByte(e.dataview, 3),
        r.maximum = e.readUint32(),
        r.average = e.readUint32(),
        r.subBox.push(zi.MP4DecSpecificDescrTag(e)),
        r
    }
    ,
    zi.MP4DecSpecificDescrTag = function(e) {
        var t, r, i = new zi;
        i.type = e.readUint8(),
        128 === (t = e.readUint8()) ? (i.extend = !0,
        e.skip(2),
        r = (t = e.readUint8() + 5) - 5) : (r = t,
        t += 2),
        i.size = t;
        for (var n = [], a = 0; a < r; a++)
            n.push(Number(e.readUint8()).toString(16).padStart(2, "0"));
        return i.EScode = n,
        delete i.subBox,
        i
    }
    ,
    zi.MP4ESDescrTag = function(e) {
        var t, r = new zi;
        return r.type = e.readUint8(),
        128 === (t = e.readUint8()) ? (r.extend = !0,
        e.skip(2),
        t = e.readUint8() + 5) : t += 2,
        r.size = t,
        r.esID = e.readUint16(),
        r.priority = e.readUint8(),
        r.subBox.push(zi.MP4DecConfigDescrTag(e)),
        r.subBox.push(zi.SLConfigDescriptor(e)),
        r
    }
    ,
    zi.SLConfigDescriptor = function(e) {
        var t, r = new zi;
        return r.type = e.readUint8(),
        128 === (t = e.readUint8()) ? (r.extend = !0,
        e.skip(2),
        t = e.readUint8() + 5) : t += 2,
        r.size = t,
        r.SL = e.readUint8(),
        delete r.subBox,
        r
    }
    ,
    zi.avc1 = function() {
        var e = new Ni(this.data);
        e.skip(6),
        this.dataReferenceIndex = e.readUint16(),
        e.skip(16),
        this.width = e.readUint16(),
        this.height = e.readUint16(),
        this.horizresolution = e.readUint32(),
        this.vertresolution = e.readUint32(),
        e.skip(4),
        this.frameCount = e.readUint16(),
        e.skip(1);
        for (var t = 0; t < 31; t++)
            String.fromCharCode(e.readUint8());
        for (this.depth = e.readUint16(),
        e.skip(2); e.position < e.buffer.byteLength - 8; ) {
            var r = new zi;
            r.readHeader(e),
            this.subBox.push(r),
            r.readBody(e)
        }
        delete this.data,
        e = null
    }
    ,
    zi.avcC = function() {
        var e = new Ni(this.data);
        this.configVersion = e.readUint8(),
        this.profile = e.readUint8(),
        this.profileCompatibility = e.readUint8(),
        this.AVCLevelIndication = e.readUint8(),
        this.lengthSizeMinusOne = 1 + (3 & e.readUint8()),
        this.numOfSequenceParameterSets = 31 & e.readUint8();
        var t = e.readUint16();
        this.sequenceLength = t;
        for (var r = [], i = 0; i < t; i++)
            r.push(Number(e.readUint8()).toString(16));
        this.ppsCount = e.readUint8();
        var n = e.readUint16();
        this.ppsLength = n;
        for (var a = [], o = 0; o < n; o++)
            a.push(Number(e.readUint8()).toString(16));
        this.pps = a,
        this.sequence = r;
        for (var s = [], u = e.dataview.byteLength; e.position < u; )
            s.push(e.readUint8());
        this.last = s,
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.btrt = function() {
        var e = new Ni(this.data);
        this.bufferSizeDB = e.readUint32(),
        this.maxBitrate = e.readUint32(),
        this.avgBitrate = e.readUint32(),
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.co64 = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.count = e.readUint32();
        var t = [];
        this.entries = t;
        for (var r = 0, i = this.count; r < i; r++)
            t.push(e.readUint64());
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.ctts = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.entryCount = e.readUint32();
        var t = [];
        this.entry = t;
        for (var r = 0, i = this.entryCount; r < i; r++)
            t.push({
                count: e.readUint32(),
                offset: e.readUint32()
            });
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.dref = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3);
        var t = e.readUint32();
        this.entryCount = t;
        for (var r = 0; r < t; r++) {
            var i = new zi;
            this.subBox.push(i),
            i.read(e)
        }
        delete this.data,
        e = null
    }
    ,
    zi.elst = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3);
        var t = []
          , r = e.readUint32();
        this.entries = t;
        for (var i = 0; i < r; i++) {
            var n = {};
            t.push(n),
            1 === this.version ? (n.segment_duration = e.readUint64(),
            n.media_time = e.readUint64()) : (n.segment_duration = e.readUint32(),
            n.media_time = e.readInt32()),
            n.media_rate_integer = e.readInt16(),
            n.media_rate_fraction = e.readInt16()
        }
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.esds = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3);
        var t = zi.MP4ESDescrTag(e);
        this.subBox.push(t),
        delete this.data,
        e = null
    }
    ,
    zi.ftyp = function() {
        var e = new Ni(this.data);
        this.major_brand = String.fromCharCode(e.readUint8(), e.readUint8(), e.readUint8(), e.readUint8()),
        this.minor_version = e.readUint32();
        for (var t = [], r = 0, i = Math.floor((e.buffer.byteLength - 8) / 4); r < i; r++)
            t.push(String.fromCharCode(e.readUint8(), e.readUint8(), e.readUint8(), e.readUint8()));
        this.compatible_brands = t,
        e = null,
        delete this.subBox,
        delete this.data
    }
    ,
    zi.hdlr = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        e.skip(4),
        this.handleType = "" + String.fromCharCode(e.readUint8()) + String.fromCharCode(e.readUint8()) + String.fromCharCode(e.readUint8()) + String.fromCharCode(e.readUint8()),
        e.skip(12);
        for (var t = []; e.position < this.size - 8; )
            t.push(String.fromCharCode(e.readUint8()));
        this.name = t.join(""),
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.iods = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3);
        for (var t = [], r = e.buffer.byteLength; e.position < r; )
            t.push(e.readUint8());
        this.content = t,
        delete this.subBox,
        delete this.data,
        e = null
    }
    ;
    var Vi = function() {
        function e() {
            var e = new Date;
            e.setFullYear(1904),
            e.setMonth(0),
            e.setDate(1),
            e.setHours(0),
            e.setMinutes(0),
            e.setSeconds(0),
            this.time = e
        }
        return e.prototype.setTime = function(e) {
            return this.time.setTime(this.time.getTime() + 1 * e),
            this.time.toLocaleString()
        }
        ,
        e
    }();
    zi.mdhd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        1 === this.version ? (this.create = e.readUint64(),
        this.modify = e.readUint64(),
        this.createTime = (new Vi).setTime(1e3 * this.create),
        this.modifyTime = (new Vi).setTime(1e3 * this.modify),
        this.timescale = e.readUint32(),
        this.duration = e.readUint64()) : (this.create = e.readUint32(),
        this.modify = e.readUint32(),
        this.createTime = (new Vi).setTime(1e3 * this.create),
        this.modifyTime = (new Vi).setTime(1e3 * this.modify),
        this.timescale = e.readUint32(),
        this.duration = e.readUint32()),
        this.language = e.readUint16(),
        e.readUint16(),
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.mp4a = function() {
        var e = new Ni(this.data);
        e.skip(6),
        this.dataReferenceIndex = e.readUint16(),
        e.skip(8),
        this.channelCount = e.readUint16(),
        this.sampleSize = e.readUint16(),
        e.skip(4),
        this.sampleRate = e.readUint32() >> 16;
        var t = new zi;
        t.readHeader(e),
        this.subBox.push(t),
        t.readBody(e),
        delete this.data,
        e = null
    }
    ,
    zi.mvhd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        1 === this.version ? (this.create = e.readUint64(),
        this.modify = e.readUint64(),
        this.timeScale = e.readUint32(),
        this.duration = e.readUint64()) : (this.create = e.readUint32(),
        this.modify = e.readUint32(),
        this.timeScale = e.readUint32(),
        this.duration = e.readUint32()),
        this.createTime = (new Vi).setTime(1e3 * this.create),
        this.modifyTime = (new Vi).setTime(1e3 * this.modify),
        this.rate = e.readUint16() + "." + e.readUint16(),
        this.volume = e.readUint8() + "." + e.readUint8(),
        Ni.readByte(e.dataview, 8),
        Ni.readByte(e.dataview, 2);
        for (var t = [], r = 0; r < 9; r++)
            t.push(e.readUint16() + "." + e.readUint16());
        this.matrix = t,
        Ni.readByte(e.dataview, 24),
        this.nextTrackID = e.readUint32(),
        delete this.subBox,
        delete this.data
    }
    ,
    zi.pasp = function() {
        var e = new Ni(this.data);
        this.content = e.buffer.slice(0, this.size - 8),
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.smhd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.balance = e.readInt8() + "." + e.readInt8(),
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.stco = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.count = e.readUint32();
        var t = [];
        this.entries = t;
        for (var r = 0, i = this.count; r < i; r++)
            t.push(e.readUint32());
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.stsc = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.count = e.readUint32();
        var t = [];
        this.entries = t;
        for (var r = 0, i = this.count; r < i; r++)
            t.push({
                first_chunk: e.readUint32(),
                samples_per_chunk: e.readUint32(),
                sample_desc_index: e.readUint32()
            });
        for (var n, a, o = 0, s = this.count; o < s - 1; o++)
            n = t[o],
            a = t[o - 1],
            n.chunk_count = t[o + 1].first_chunk - n.first_chunk,
            n.first_sample = 0 === o ? 1 : a.first_sample + a.chunk_count * a.samples_per_chunk;
        if (1 === this.count) {
            var u = t[0];
            u.first_sample = 1,
            u.chunk_count = 0
        } else if (this.count > 1) {
            var h = t[this.count - 1]
              , d = t[this.count - 2];
            h.first_sample = d.first_sample + d.chunk_count * d.samples_per_chunk,
            h.chunk_count = 0
        }
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.stsd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.entryCount = e.readUint32();
        var t = new zi;
        t.readHeader(e),
        this.subBox.push(t),
        t.readBody(e),
        delete this.data,
        e = null
    }
    ,
    zi.stss = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.count = e.readUint32();
        var t = [];
        this.entries = t;
        for (var r = 0, i = this.count; r < i; r++)
            t.push(e.readUint32());
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.stsz = function() {
        var e = new Ni(this.data);
        if (this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.sampleSize = e.readUint32(),
        this.count = e.readUint32(),
        0 === this.sampleSize) {
            var t = [];
            this.entries = t;
            for (var r = 0, i = this.count; r < i; r++)
                t.push(e.readUint32())
        }
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.stts = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3),
        this.count = e.readUint32();
        for (var t = [], r = 0, i = this.count; r < i; r++)
            t.push({
                sampleCount: e.readUint32(),
                sampleDuration: e.readUint32()
            });
        this.entry = t,
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.tkhd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = Ni.readByte(e.dataview, 3, 0),
        1 === this.version ? (this.create = e.readUint64(),
        this.modify = e.readUint64(),
        this.trackID = e.readUint32(),
        this.reserverd = e.readUint32(),
        this.duration = e.readUint64()) : (this.create = e.readUint32(),
        this.modify = e.readUint32(),
        this.trackID = e.readUint32(),
        this.reserverd = e.readUint32(),
        this.duration = e.readUint32()),
        this.createTime = (new Vi).setTime(1e3 * this.create),
        this.modifyTime = (new Vi).setTime(1e3 * this.modify),
        e.readUint64(),
        this.layer = e.readInt16(),
        this.alternate_group = e.readInt16(),
        this.volume = e.readInt16() >> 8,
        e.readUint16();
        for (var t = [], r = 0; r < 9; r++)
            t.push(e.readUint16() + "." + e.readUint16());
        this.matrix = t,
        this.width = e.readUint16() + "." + e.readUint16(),
        this.height = e.readUint16() + "." + e.readUint16(),
        delete this.data,
        delete this.subBox,
        e = null
    }
    ,
    zi.udta = function() {
        delete this.subBox
    }
    ,
    zi["url "] = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = [e.readUint8(), e.readUint8(), e.readUint8()];
        for (var t = [], r = e.buffer.byteLength; e.position < r; )
            t.push(e.readUint8());
        this.location = t,
        delete this.subBox,
        delete this.data,
        e = null
    }
    ,
    zi.vmhd = function() {
        var e = new Ni(this.data);
        this.version = e.readUint8(),
        this.flag = [e.readUint8(), e.readUint8(), e.readUint8()],
        this.graphicsmode = e.readUint16(),
        this.opcolor = [e.readUint16(), e.readUint16(), e.readUint16()],
        delete this.subBox,
        delete this.data,
        e = null
    }
    ;
    var Hi = function(e) {
        this.buffer = null,
        this.boxes = [],
        this.nextBox = null,
        this.start = 0;
        var t = this;
        t.buffer ? Gi(Uint8Array, t.buffer, e) : t.buffer = e;
        var r = e.byteLength;
        e.position = 0;
        for (var i = new Ni(e); r - i.position >= 8; ) {
            var n = new zi;
            if (n.readHeader(i),
            n.size - 8 <= r - i.position)
                n.readBody(i),
                t.boxes.push(n);
            else {
                if ("mdat" !== n.type) {
                    t.nextBox = n,
                    i.position -= 8;
                    break
                }
                n.readBody(i),
                t.boxes.push(n)
            }
        }
        t.buffer = new Uint8Array(t.buffer.slice(i.position))
    }
      , qi = function() {
        function e() {
            this.buffer = new Uint8Array(0)
        }
        return e.prototype.write = function() {
            for (var e = this, t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                r[i] = arguments[i];
            r.forEach(function(t) {
                t ? e.buffer = Gi(Uint8Array, e.buffer, t) : window.console.error(t)
            })
        }
        ,
        e.writeUint32 = function(e) {
            return new Uint8Array([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e])
        }
        ,
        e
    }()
      , Ki = Math.pow(2, 32) - 1
      , Wi = function() {
        function e() {}
        return e.type = function(e) {
            return new Uint8Array([e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)])
        }
        ,
        e.size = function(e) {
            return qi.writeUint32(e)
        }
        ,
        e.extension = function(e, t) {
            return new Uint8Array([e, t >> 16 & 255, t >> 8 & 255, 255 & t])
        }
        ,
        e.ftyp = function() {
            var t = new qi;
            return t.write(e.size(24), e.type("ftyp"), new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49])),
            t.buffer
        }
        ,
        e.moov = function(t) {
            var r = new qi
              , i = 8
              , n = e.mvhd(t.duration, t.timeScale)
              , a = e.videoTrak(t)
              , o = e.audioTrak(t)
              , s = e.mvex(t.duration, t.timeScale);
            return [n, a, o, s].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("moov"), n, a, o, s),
            r.buffer
        }
        ,
        e.mvhd = function(t, r) {
            var i = new qi;
            t *= r;
            var n = Math.floor(t / (Ki + 1))
              , a = Math.floor(t % (Ki + 1))
              , o = new Uint8Array([1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]);
            return i.write(e.size(8 + o.length), e.type("mvhd"), new Uint8Array(o)),
            i.buffer
        }
        ,
        e.videoTrak = function(t) {
            var r = new qi
              , i = 8
              , n = e.tkhd({
                id: 1,
                duration: t.videoDuration,
                timescale: t.videoTimeScale,
                width: t.width,
                height: t.height,
                type: "video"
            })
              , a = e.mdia({
                type: "video",
                timescale: t.videoTimeScale,
                duration: t.videoDuration,
                sps: t.sps,
                pps: t.pps,
                pixelRatio: t.pixelRatio,
                width: t.width,
                height: t.height
            });
            return [n, a].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("trak"), n, a),
            r.buffer
        }
        ,
        e.audioTrak = function(t) {
            var r = new qi
              , i = 8
              , n = e.tkhd({
                id: 2,
                duration: t.audioDuration,
                timescale: t.audioTimeScale,
                width: 0,
                height: 0,
                type: "audio"
            })
              , a = e.mdia({
                type: "audio",
                timescale: t.audioTimeScale,
                duration: t.audioDuration,
                channelCount: t.channelCount,
                samplerate: t.sampleRate,
                audioConfig: t.audioConfig
            });
            return [n, a].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("trak"), n, a),
            r.buffer
        }
        ,
        e.tkhd = function(t) {
            var r = new qi
              , i = t.id
              , n = t.duration * t.timeScale
              , a = t.width
              , o = t.height
              , s = t.type
              , u = Math.floor(n / (Ki + 1))
              , h = Math.floor(n % (Ki + 1))
              , d = new Uint8Array([1, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, 0, 0, 0, 0, u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u, h >> 24, h >> 16 & 255, h >> 8 & 255, 255 & h, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, "video" === s ? 1 : 0, "audio" === s ? 1 : 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, a >> 8 & 255, 255 & a, 0, 0, o >> 8 & 255, 255 & o, 0, 0]);
            return r.write(e.size(8 + d.byteLength), e.type("tkhd"), d),
            r.buffer
        }
        ,
        e.edts = function(t) {
            var r = new qi
              , i = t.duration
              , n = t.mediaTime;
            return r.write(e.size(36), e.type("edts")),
            r.write(e.size(28), e.type("elst")),
            r.write(new Uint8Array([0, 0, 0, 1, i >> 24 & 255, i >> 16 & 255, i >> 8 & 255, 255 & i, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, 0, 0, 0, 1])),
            r.buffer
        }
        ,
        e.mdia = function(t) {
            var r = new qi
              , i = 8
              , n = e.mdhd(t.timescale)
              , a = e.hdlr(t.type)
              , o = e.minf(t);
            return [n, a, o].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("mdia"), n, a, o),
            r.buffer
        }
        ,
        e.mdhd = function(t, r) {
            void 0 === r && (r = 0);
            var i = new qi;
            r *= t;
            var n = Math.floor(r / (Ki + 1))
              , a = Math.floor(r % (Ki + 1))
              , o = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, t >> 24 & 255, t >> 16 & 255, t >> 8 & 255, 255 & t, n >> 24, n >> 16 & 255, n >> 8 & 255, 255 & n, a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, 85, 196, 0, 0]);
            return i.write(e.size(12 + o.byteLength), e.type("mdhd"), e.extension(1, 0), o),
            i.buffer
        }
        ,
        e.hdlr = function(t) {
            var r = new qi
              , i = [0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0];
            return "audio" === t && (i.splice.apply(i, [8, 4].concat([115, 111, 117, 110])),
            i.splice.apply(i, [24, 13].concat([83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]))),
            r.write(e.size(8 + i.length), e.type("hdlr"), new Uint8Array(i)),
            r.buffer
        }
        ,
        e.minf = function(t) {
            var r = new qi
              , i = 8
              , n = "video" === t.type ? e.vmhd() : e.smhd()
              , a = e.dinf()
              , o = e.stbl(t);
            return [n, a, o].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("minf"), n, a, o),
            r.buffer
        }
        ,
        e.vmhd = function() {
            var t = new qi;
            return t.write(e.size(20), e.type("vmhd"), new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])),
            t.buffer
        }
        ,
        e.smhd = function() {
            var t = new qi;
            return t.write(e.size(16), e.type("smhd"), new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])),
            t.buffer
        }
        ,
        e.dinf = function() {
            var t = new qi;
            return t.write(e.size(36), e.type("dinf"), e.size(28), e.type("dref"), new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1])),
            t.buffer
        }
        ,
        e.stbl = function(t) {
            var r = new qi
              , i = 8
              , n = e.stsd(t)
              , a = e.stts()
              , o = e.stsc()
              , s = e.stsz()
              , u = e.stco();
            return [n, a, o, s, u].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("stbl"), n, a, o, s, u),
            r.buffer
        }
        ,
        e.stsd = function(t) {
            var r, i = new qi;
            return r = "audio" === t.type ? e.mp4a(t) : e.avc1(t),
            i.write(e.size(16 + r.byteLength), e.type("stsd"), e.extension(0, 0), new Uint8Array([0, 0, 0, 1]), r),
            i.buffer
        }
        ,
        e.mp4a = function(t) {
            var r = new qi
              , i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, t.samplerate >> 8 & 255, 255 & t.samplerate, 0, 0])
              , n = e.esds(t.audioConfig);
            return r.write(e.size(8 + i.byteLength + n.byteLength), e.type("mp4a"), i, n),
            r.buffer
        }
        ,
        e.esds = function(t) {
            void 0 === t && (t = [43, 146, 8, 0]);
            var r = t.length
              , i = new qi
              , n = new Uint8Array([0, 0, 0, 0, 3, 23 + r, 0, 1, 0, 4, 15 + r, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([r]).concat(t).concat([6, 1, 2]));
            return i.write(e.size(8 + n.byteLength), e.type("esds"), n),
            i.buffer
        }
        ,
        e.avc1 = function(t) {
            var r = new qi
              , i = t.sps
              , n = t.pps
              , a = t.width
              , o = t.height
              , s = t.pixelRatio[0]
              , u = t.pixelRatio[1]
              , h = new Uint8Array([1, i[1], i[2], i[3], 255, 225].concat([i.length >>> 8 & 255, 255 & i.length]).concat(i).concat(1).concat([n.length >>> 8 & 255, 255 & n.length]).concat(n))
              , d = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, a >> 8 & 255, 255 & a, o >> 8 & 255, 255 & o, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17])
              , f = new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192])
              , c = new Uint8Array([s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s, u >> 24, u >> 16 & 255, u >> 8 & 255, 255 & u]);
            return r.write(e.size(40 + d.byteLength + h.byteLength + f.byteLength), e.type("avc1"), d, e.size(8 + h.byteLength), e.type("avcC"), h, e.size(20), e.type("btrt"), f, e.size(16), e.type("pasp"), c),
            r.buffer
        }
        ,
        e.stts = function() {
            var t = new qi
              , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
            return t.write(e.size(16), e.type("stts"), r),
            t.buffer
        }
        ,
        e.stsc = function() {
            var t = new qi
              , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
            return t.write(e.size(16), e.type("stsc"), r),
            t.buffer
        }
        ,
        e.stco = function() {
            var t = new qi
              , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]);
            return t.write(e.size(16), e.type("stco"), r),
            t.buffer
        }
        ,
        e.stsz = function() {
            var t = new qi
              , r = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            return t.write(e.size(20), e.type("stsz"), r),
            t.buffer
        }
        ,
        e.mvex = function(t, r) {
            var i = new qi
              , n = qi.writeUint32(t * r);
            return i.write(e.size(88), e.type("mvex"), e.size(16), e.type("mehd"), e.extension(0, 0), n, e.trex(1), e.trex(2)),
            i.buffer
        }
        ,
        e.trex = function(t) {
            var r = new qi
              , i = new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]);
            return r.write(e.size(8 + i.byteLength), e.type("trex"), i),
            r.buffer
        }
        ,
        e.moof = function(t) {
            var r = new qi
              , i = 8
              , n = e.mfhd()
              , a = e.traf(t);
            return [n, a].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("moof"), n, a),
            r.buffer
        }
        ,
        e.mfhd = function() {
            var t = new qi
              , r = qi.writeUint32(e.sequence);
            return e.sequence += 1,
            t.write(e.size(16), e.type("mfhd"), e.extension(0, 0), r),
            t.buffer
        }
        ,
        e.traf = function(t) {
            var r = new qi
              , i = 8
              , n = e.tfhd(t.id)
              , a = e.tfdt(t.time)
              , o = e.sdtp(t)
              , s = e.trun(t, o.byteLength);
            return [n, a, o, s].forEach(function(e) {
                i += e.byteLength
            }),
            r.write(e.size(i), e.type("traf"), n, a, o, s),
            r.buffer
        }
        ,
        e.tfhd = function(t) {
            var r = new qi
              , i = qi.writeUint32(t);
            return r.write(e.size(16), e.type("tfhd"), e.extension(0, 0), i),
            r.buffer
        }
        ,
        e.tfdt = function(t) {
            var r = new qi
              , i = Math.floor(t / (Ki + 1))
              , n = Math.floor(t % (Ki + 1));
            return r.write(e.size(20), e.type("tfdt"), e.extension(1, 0), qi.writeUint32(i), qi.writeUint32(n)),
            r.buffer
        }
        ,
        e.trun = function(t, r) {
            var i = t.id
              , n = 1 === i ? 16 : 12
              , a = new qi
              , o = qi.writeUint32(t.samples.length)
              , s = qi.writeUint32(96 + n * t.samples.length + r);
            return a.write(e.size(20 + n * t.samples.length), e.type("trun"), e.extension(0, t.flags), o, s),
            t.samples.forEach(function(e, t) {
                a.write(qi.writeUint32(e.duration)),
                a.write(qi.writeUint32(e.size)),
                1 === i ? (a.write(qi.writeUint32(e.key ? 33554432 : 16842752)),
                a.write(qi.writeUint32(e.offset))) : a.write(qi.writeUint32(16777216))
            }),
            a.buffer
        }
        ,
        e.sdtp = function(t) {
            var r = new qi;
            return r.write(e.size(12 + t.samples.length), e.type("sdtp"), e.extension(0, 0)),
            t.samples.forEach(function(e) {
                r.write(new Uint8Array(1 === t.id ? [e.key ? 32 : 16] : [16]))
            }),
            r.buffer
        }
        ,
        e.mdat = function(t) {
            var r = new qi
              , i = 8;
            return t.samples.forEach(function(e) {
                i += e.size
            }),
            r.write(e.size(i), e.type("mdat")),
            t.samples.forEach(function(e) {
                r.write(e.buffer)
            }),
            r.buffer
        }
        ,
        e
    }();
    Wi.sequence = 1;
    var Yi = function() {
        function e(t, r, i, n) {
            this.url = r,
            this.range = i,
            this.id = i.join("-"),
            this.on = !1;
            var a = new window.XMLHttpRequest;
            a.target = this,
            a.observer = t,
            a.responseType = "arraybuffer",
            a.open("get", r),
            a.setRequestHeader("Range", "bytes=" + i[0] + "-" + i[1]),
            a.onload = function() {
                200 !== a.status && 206 !== a.status || n && n instanceof Function && n(a.response),
                a.target.remove()
            }
            ,
            a.onerror = function(e) {
                a.observer.trigger(Event.ERROR, {
                    type: _i.NETWORK_ERROR,
                    details: Si.FRAG_LOAD_ERROR,
                    fatal: !1
                }),
                a.target.remove()
            }
            ,
            a.onabort = function() {
                a.target.remove()
            }
            ,
            this.xhr = a,
            e.queue.push(this),
            this.update()
        }
        var t = e.prototype;
        return t.cancel = function() {
            this.xhr.abort()
        }
        ,
        t.remove = function() {
            var t = this;
            e.queue.filter(function(r, i) {
                return r.url === t.url && r.id === t.id && (e.queue.splice(i, 1),
                !0)
            }),
            this.update()
        }
        ,
        t.update = function() {
            var t = e.queue
              , r = t.filter(function(e) {
                return e.on
            })
              , i = t.filter(function(e) {
                return !e.on
            })
              , n = e.limit - r.length;
            i.forEach(function(e, t) {
                t < n && e.run()
            })
        }
        ,
        t.run = function() {
            1 === this.xhr.readyState ? (this.on = !0,
            this.xhr.send()) : this.remove()
        }
        ,
        e.clear = function() {
            e.queue.forEach(function(e) {
                e.on && e.cancel()
            }),
            e.queue.length = 0
        }
        ,
        e
    }();
    Yi.queue = [],
    Yi.limit = 2,
    window.Task = Yi;
    var Xi = {
        findBox: function(e, t, r) {
            if (void 0 === r && (r = []),
            e.type !== t) {
                if (e && e.subBox) {
                    var i = e.subBox.filter(function(e) {
                        return e.type === t
                    });
                    i.length ? i.forEach(function(e) {
                        return r.push(e)
                    }) : e.subBox.forEach(function(e) {
                        return Xi.findBox(e, t, r)
                    })
                }
            } else
                r.push(e);
            return (r = [].concat(r)).length > 1 ? r : r[0]
        },
        padStart: function(e, t, r) {
            for (var i = String(r), n = t >> 0, a = Math.ceil(n / i.length), o = [], s = String(e); a--; )
                o.push(i);
            return o.join("").substring(0, n - s.length) + s
        },
        toHex: function() {
            for (var e = [], t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                r[i] = arguments[i];
            return r.forEach(function(t) {
                e.push(Xi.padStart(Number(t).toString(16), 2, 0))
            }),
            e
        },
        sum: function() {
            for (var e = 0, t = arguments.length, r = new Array(t), i = 0; i < t; i++)
                r[i] = arguments[i];
            return r.forEach(function(t) {
                e += t
            }),
            e
        },
        stscOffset: function(e, t) {
            var r = e.entries.filter(function(e) {
                return e.first_sample <= t && t < e.first_sample + e.chunk_count * e.samples_per_chunk
            })[0];
            if (r) {
                var i = Math.floor((t - r.first_sample) / r.samples_per_chunk)
                  , n = r.first_sample + i * r.samples_per_chunk;
                return {
                    chunk_index: r.first_chunk + i,
                    samples_offset: [n, t]
                }
            }
            var a = e.entries.pop();
            e.entries.push(a);
            var o = Math.floor((t - a.first_sample) / a.samples_per_chunk);
            return {
                chunk_index: a.first_chunk + o,
                samples_offset: [a.first_sample + a.samples_per_chunk * o, t]
            }
        },
        seekSampleOffset: function(e, t, r, i, n) {
            var a = Xi.stscOffset(e, i + 1)
              , o = t.entries[a.chunk_index - 1] + Xi.sum.apply(null, r.entries.slice(a.samples_offset[0] - 1, a.samples_offset[1] - 1)) - n;
            if (void 0 === o)
                throw "result=" + o + ",stco.length=" + t.entries.length + ",sum=" + Xi.sum.apply(null, r.entries.slice(0, i));
            if (o < 0)
                throw "result=" + o + ",stco.length=" + t.entries.length + ",sum=" + Xi.sum.apply(null, r.entries.slice(0, i));
            return o
        },
        seekSampleTime: function(e, t, r) {
            var i, n, a = 0, o = 0, s = 0;
            if (e.entry.every(function(e) {
                return n = e.sampleDuration,
                r < a + e.sampleCount ? (i = o + (r - a) * e.sampleDuration,
                !1) : (a += e.sampleCount,
                o += e.sampleCount * n,
                !0)
            }),
            t) {
                var u = 0;
                t.entry.every(function(e) {
                    return u += e.count,
                    !(r < u) || (s = e.offset,
                    !1)
                })
            }
            return i || (i = o + (r - a) * n),
            {
                time: i,
                duration: n,
                offset: s
            }
        },
        seekOrderSampleByTime: function(e, t, r, i) {
            var n, a = 0, o = 0, s = 0;
            return e.every(function(e, i) {
                return n = e.sampleCount * e.sampleDuration / t,
                r <= a + n ? (o = s + Math.ceil((r - a) * t / e.sampleDuration),
                a += Math.ceil((r - a) * t / e.sampleDuration) * e.sampleDuration / t,
                !1) : (a += n,
                s += e.sampleCount,
                !0)
            }),
            i && 0 == o && (o = s - 1),
            {
                order: o,
                startTime: a
            }
        },
        seekTrakDuration: function(e, t) {
            var r = Xi.findBox(e, "stts")
              , i = 0;
            return r.entry.forEach(function(e) {
                i += e.sampleCount * e.sampleDuration
            }),
            Number(i / t).toFixed(4)
        }
    }
      , $i = function() {
        function e(e, t, r) {
            void 0 === r && (r = Math.pow(25, 4)),
            this.url = t,
            this.observer = e,
            this.CHUNK_SIZE = r,
            this.init(),
            this.loadmetadata = !1,
            this.cache = new qi,
            this.bufferCache = new Set,
            this.timeRage = []
        }
        var t = e.prototype;
        return t.getData = function(e, t) {
            var r = this;
            return void 0 === e && (e = 0),
            void 0 === t && (t = e + this.CHUNK_SIZE),
            new Promise(function(i, n) {
                new Yi(r.observer,r.url,[e, t],i)
            }
            )
        }
        ,
        t.moovParse = function() {
            var e = this
              , t = this;
            if (!t.loadmetadata) {
                t.loadmetadata = !0;
                var r, i, n, a, o, s, u, h, d, f, c, l, p, m, g = this.moovBox, v = Xi.findBox(g, "mvhd");
                Xi.findBox(g, "trak").forEach(function(e) {
                    var g = Xi.findBox(e, "hdlr")
                      , v = Xi.findBox(e, "mdhd");
                    if (g && v) {
                        var y = Xi.findBox(e, "stsd").subBox[0];
                        if ("vide" === g.handleType) {
                            var b = Xi.findBox(e, "avcC")
                              , w = Xi.findBox(e, "avc1");
                            r = e,
                            o = v.timescale,
                            b ? (n = y.type + "." + Xi.toHex(b.profile, b.profileCompatibility, b.AVCLevelIndication).join(""),
                            u = b.sequence && b.sequence.map(function(e) {
                                return Number("0x" + e)
                            }),
                            h = b.pps && b.pps.map(function(e) {
                                return Number("0x" + e)
                            }),
                            d = b.profile) : n = "" + y.type,
                            w && (f = w.width,
                            c = w.height)
                        }
                        if ("soun" === g.handleType) {
                            i = e;
                            var _ = Xi.findBox(e, "esds")
                              , S = Xi.findBox(e, "mp4a")
                              , E = Xi.findBox(e, 5);
                            s = v.timescale,
                            a = _ ? y.type + "." + Xi.toHex(_.subBox[0].subBox[0].typeID) + "." + _.subBox[0].subBox[0].subBox[0].type : "" + y.type,
                            E && E.EScode && (m = E.EScode.map(function(e) {
                                return Number("0x" + e)
                            })),
                            S && (l = S.channelCount,
                            p = S.sampleRate)
                        }
                    } else
                        t.observer.trigger(wi.ERROR, {
                            type: _i.kernelMuxError,
                            details: Si.METADATA_PARSING_ERROR,
                            fatal: !0,
                            url: t.url
                        })
                }),
                this.videoTrak = Fi({}, r),
                this.audioTrak = Fi({}, i);
                var y = Xi.seekTrakDuration(r, o)
                  , b = Xi.seekTrakDuration(i, s)
                  , w = this._boxes.find(function(e) {
                    return "mdat" === e.type
                });
                this.mdatStart = w ? w.start : 0;
                var _ = this.videoKeyFrames
                  , S = _.length - 1
                  , E = [];
                _.forEach(function(r, i) {
                    if (i < S) {
                        var n, a, s = e.videoKeyFrames[i], u = e.getSamplesByOrders("audio", e.audioKeyFrames[i].order, 0);
                        n = Math.min(s.offset, u.offset);
                        var h = e.videoKeyFrames[i + 1]
                          , d = e.getSamplesByOrders("audio", e.audioKeyFrames[i + 1].order, 0);
                        a = Math.max(h.offset, d.offset);
                        var f = r.time.time / o
                          , c = _[i + 1].time.time / o;
                        e.timeRage.push([f, c]),
                        E.push({
                            type: "main",
                            idx: i,
                            url: e.url,
                            start: f,
                            end: c,
                            duration: c - f,
                            byteRangeStartOffset: n + t.mdatStart,
                            byteRangeEndOffset: a + t.mdatStart
                        })
                    } else {
                        var l, p = e.videoKeyFrames[i], m = e.getSamplesByOrders("audio", e.audioKeyFrames[i].order, 0);
                        l = Math.min(p.offset, m.offset);
                        var g = r.time.time / o;
                        e.timeRage.push([g, -1]),
                        E.push({
                            type: "main",
                            idx: i,
                            url: e.url,
                            duration: 0,
                            start: g,
                            byteRangeStartOffset: l + t.mdatStart,
                            byteRangeEndOffset: -1
                        })
                    }
                }),
                this.meta = {
                    videoCodec: n,
                    audioCodec: a,
                    createTime: v.createTime,
                    modifyTime: v.modifyTime,
                    duration: v.duration / v.timeScale,
                    timeScale: v.timeScale,
                    videoDuration: y,
                    videoTimeScale: o,
                    audioDuration: b,
                    audioTimeScale: s,
                    endTime: Math.min(y, b),
                    sps: u,
                    pps: h,
                    width: f,
                    height: c,
                    profile: d,
                    pixelRatio: [1, 1],
                    channelCount: l,
                    sampleRate: p,
                    audioConfig: m
                },
                t.observer.trigger(wi.METADATA_PARSED, {
                    meta: this.meta,
                    fragments: E,
                    fragment: this.packMeta()
                }),
                t.observer.trigger(wi.BUFFER_APPENDING, {
                    type: "video",
                    data: this.packMeta(),
                    parent: "main",
                    content: "initSegment"
                })
            }
        }
        ,
        t.init = function() {
            var e = this;
            e.getData().then(function(t) {
                var r, i, n, a = 0;
                try {
                    r = new Hi(t)
                } catch (t) {
                    return e.observer.trigger(wi.ERROR, {
                        type: _i.kernelMuxError,
                        details: Si.METADATA_PARSING_ERROR,
                        fatal: !0,
                        url: e.url
                    }),
                    !1
                }
                if (e._boxes = n = r.boxes,
                n.every(function(t) {
                    return a += t.size,
                    "moov" !== t.type || (i = t,
                    e.moovBox = i,
                    e.moovParse(),
                    !1)
                }),
                !i) {
                    var o = r.nextBox;
                    o ? "moov" === o.type ? e.getData(a, a + o.size + 28).then(function(t) {
                        var r = new Hi(t);
                        e._boxes = e._boxes.concat(r.boxes),
                        (i = r.boxes.filter(function(e) {
                            return "moov" === e.type
                        })).length ? (e.moovBox = i[0],
                        e.moovParse()) : e.observer.trigger(wi.ERROR, {
                            type: _i.kernelMuxError,
                            details: Si.METADATA_PARSING_ERROR,
                            fatal: !0,
                            url: e.url
                        })
                    }) : e.observer.trigger(wi.ERROR, {
                        type: _i.kernelMuxError,
                        details: Si.METADATA_PARSING_ERROR,
                        fatal: !0,
                        url: e.url
                    }) : e.getData(a, "").then(function(t) {
                        var r = new Hi(t);
                        r ? (e._boxes = e._boxes.concat(r.boxes),
                        r.boxes.every(function(t) {
                            return "moov" !== t.type || (i = t,
                            e.moovBox = i,
                            e.moovParse(),
                            !1)
                        })) : e.observer.trigger(wi.ERROR, {
                            type: _i.kernelMuxError,
                            details: Si.METADATA_PARSING_ERROR,
                            fatal: !0,
                            url: e.url
                        })
                    })
                }
            }).catch(function(t) {
                e.observer.trigger(wi.ERROR, {
                    type: _i.kernelMuxError,
                    details: Si.METADATA_PARSING_ERROR,
                    fatal: !0,
                    url: e.url
                })
            })
        }
        ,
        t.getSamplesByOrders = function(e, t, r) {
            void 0 === e && (e = "video");
            var i = "video" === e ? this.videoTrak : this.audioTrak
              , n = Xi.findBox(i, "stsc")
              , a = Xi.findBox(i, "stsz")
              , o = Xi.findBox(i, "stts")
              , s = Xi.findBox(i, "stco")
              , u = Xi.findBox(i, "ctts")
              , h = this.mdatStart
              , d = [];
            if (r = void 0 !== r ? r : a.entries.length,
            t instanceof Array)
                t.forEach(function(e, t) {
                    d.push({
                        idx: e,
                        size: a.entries[e],
                        time: Xi.seekSampleTime(o, u, e),
                        offset: Xi.seekSampleOffset(n, s, a, e, h)
                    })
                });
            else if (0 !== r)
                for (var f = t; f < r; f++)
                    d.push({
                        idx: f,
                        size: a.entries[f],
                        time: Xi.seekSampleTime(o, u, f),
                        offset: Xi.seekSampleOffset(n, s, a, f, h)
                    });
            else
                d = {
                    idx: t,
                    size: a.entries[t],
                    time: Xi.seekSampleTime(o, u, t),
                    offset: Xi.seekSampleOffset(n, s, a, t, h)
                };
            return d
        }
        ,
        t.packMeta = function() {
            if (this.meta) {
                var e = new qi;
                return e.write(Wi.ftyp()),
                e.write(Wi.moov(this.meta)),
                this.cache.write(e.buffer),
                e.buffer
            }
        }
        ,
        t.addFragment = function(e) {
            var t = new qi;
            return t.write(Wi.moof(e)),
            t.write(Wi.mdat(e)),
            this.cache.write(t.buffer),
            t.buffer
        }
        ,
        t.createFragment = function(e, t) {
            var r, i;
            r = t.byteRangeStartOffset - this.mdatStart,
            i = t.idx;
            var n = [];
            this.bufferCache.add(i);
            var a = this.videoKeyFrames.map(function(e) {
                return e.idx
            })
              , o = this.getSamplesByOrders("video", a[i], a[i + 1])
              , s = o.map(function(t, i) {
                return {
                    size: t.size,
                    duration: t.time.duration,
                    offset: t.time.offset,
                    buffer: new Uint8Array(e.slice(t.offset - r, t.offset - r + t.size)),
                    key: 0 === i
                }
            })
              , u = this.addFragment({
                id: 1,
                time: o[0].time.time,
                firstFlags: 33554432,
                flags: 3841,
                samples: s
            });
            n.push(u);
            var h = this.getSamplesByOrders("audio", this.audioKeyFrames[i].order, this.audioKeyFrames[i + 1] ? this.audioKeyFrames[i + 1].order : void 0)
              , d = h.map(function(t, i) {
                return {
                    size: t.size,
                    duration: t.time.duration,
                    offset: t.time.offset,
                    buffer: new Uint8Array(e.slice(t.offset - r, t.offset - r + t.size)),
                    key: 0 === i
                }
            })
              , f = this.addFragment({
                id: 2,
                time: h[0].time.time,
                firstFlags: 0,
                flags: 1793,
                samples: d
            });
            n.push(f);
            var c = 0;
            n.every(function(e) {
                return c += e.byteLength,
                !0
            });
            var l = new Uint8Array(c)
              , p = 0;
            n.every(function(e) {
                return l.set(e, p),
                p += e.byteLength,
                !0
            }),
            this.observer.trigger(wi.FRAG_PARSING_DATA, {
                type: "video",
                frag: t,
                data1: l,
                parent: "main",
                content: "fragment"
            }),
            this.observer.trigger(wi.FRAG_PARSED, {
                type: "video",
                frag: t,
                data1: l,
                parent: "main",
                content: "fragment"
            })
        }
        ,
        t.destroy = function() {}
        ,
        r(e, [{
            key: "videoKeyFrames",
            get: function() {
                if (this._videoFrames)
                    return this._videoFrames;
                var e = this.videoTrak
                  , t = Xi.findBox(e, "stss")
                  , r = this.getSamplesByOrders("video", t.entries.map(function(e) {
                    return e - 1
                }));
                return this._videoFrames = r,
                r
            }
        }, {
            key: "audioKeyFrames",
            get: function() {
                if (this._audioFrames)
                    return this._audioFrames;
                var e, t = Xi.findBox(this.videoTrak, "mdhd").timescale, r = Xi.findBox(this.audioTrak, "mdhd").timescale, i = Xi.findBox(this.audioTrak, "stts").entry, n = this.videoKeyFrames;
                return e = n.map(function(e, a) {
                    var o = a == n.length - 1;
                    return Xi.seekOrderSampleByTime(i, r, e.time.time / t, o)
                }),
                this._audioFrames = e,
                this._audioFrames
            }
        }]),
        e
    }()
      , Zi = {
        STOPPED: "STOPPED",
        IDLE: "IDLE",
        FRAG_LOADING: "FRAG_LOADING",
        FRAG_LOADING_WAITING_RETRY: "FRAG_LOADING_WAITING_RETRY",
        PARSING: "PARSING",
        PARSED: "PARSED",
        BUFFER_FLUSHING: "BUFFER_FLUSHING",
        ENDED: "ENDED",
        ERROR: "ERROR"
    }
      , Qi = function(e) {
        function t(t) {
            var r;
            return (r = e.call(this, t, wi.MEDIA_ATTACHED, wi.MEDIA_DETACHING, wi.METADATA_PARSED, wi.FRAG_LOADED, wi.FRAG_LOAD_EMERGENCY_ABORTED, wi.FRAG_PARSING_DATA, wi.FRAG_PARSED, wi.ERROR, wi.BUFFER_CREATED, wi.BUFFER_APPENDED, wi.BUFFER_FLUSHED) || this).config = t.config,
            r.audioCodecSwap = !1,
            r.ticks = 0,
            r._state = Zi.STOPPED,
            r.ontick = r.tick.bind(r),
            r
        }
        i(t, e);
        var n = t.prototype;
        return n.destroy = function() {
            this.stopLoad(),
            this.timer && (clearInterval(this.timer),
            this.timer = null),
            xi.prototype.destroy.call(this),
            this.state = Zi.STOPPED
        }
        ,
        n.loadSource = function(e) {
            this.demuxer = new $i(this.mp4,e)
        }
        ,
        n.startLoad = function(e) {
            var t = this.lastCurrentTime;
            this.stopLoad(),
            this.timer || (this.timer = setInterval(this.ontick, 100)),
            this.fragLoadError = 0,
            this.startFragRequested || (this.loadedmetadata = !1),
            t > 0 && -1 === e && (Li.log("override startPosition with lastCurrentTime @" + t.toFixed(3)),
            e = t),
            this.state = Zi.IDLE,
            this.nextLoadPosition = this.startPosition = this.lastCurrentTime = e,
            this.tick()
        }
        ,
        n.stopLoad = function() {
            var e = this.fragCurrent;
            e && (e.loader && e.loader.abort(),
            this.fragCurrent = null),
            this.fragPrevious = null,
            this.state = Zi.STOPPED,
            this.forceStartLoad = !1
        }
        ,
        n.tick = function() {
            this.ticks++,
            this.doTick()
        }
        ,
        n.doTick = function() {
            switch (this.state) {
            case Zi.ERROR:
                break;
            case Zi.BUFFER_FLUSHING:
                this.fragLoadError = 0;
                break;
            case Zi.IDLE:
                this._doTickIdle();
                break;
            case Zi.FRAG_LOADING_WAITING_RETRY:
                var e = performance.now()
                  , t = this.retryDate;
                (!t || e >= t || this.media && this.media.seeking) && (Li.log("mediaController: retryDate reached, switch back to IDLE state"),
                this.state = Zi.IDLE);
                break;
            case Zi.ERROR:
            case Zi.STOPPED:
            case Zi.FRAG_LOADING:
            case Zi.PARSING:
            case Zi.PARSED:
            case Zi.ENDED:
            }
            this._checkBuffer()
        }
        ,
        n._doTickIdle = function() {
            var e = this.mp4.config
              , t = this.media;
            if (t || !this.startFragRequested && e.startFragPrefetch) {
                var r = this.loadedmetadata ? t.currentTime : this.nextLoadPosition
                  , i = Math.min(e.maxBufferLength, e.maxMaxBufferLength)
                  , n = Pi.bufferInfo(this.mediaBuffer ? this.mediaBuffer : t, r, e.maxBufferHole)
                  , a = n.len
                  , o = {};
                if (a >= i) {
                    if (this.isBufferFull)
                        return;
                    return this.isBufferFull = !0,
                    void this.mp4.trigger(wi.BUFFER_FULL, o)
                }
                this.isBufferFull = !1,
                0 == a && this.mp4.trigger(wi.BUFFER_EMPTY, o),
                Li.trace("buffer length of " + a.toFixed(3) + " is below max of " + i.toFixed(3) + ". checking for more payload ...");
                var s = this.fragPrevious;
                if (s)
                    if (t.duration - Math.max(n.end, s.start) <= Math.max(.2, s.duration))
                        return this.mp4.trigger(wi.BUFFER_EOS, o),
                        void (this.state = Zi.ENDED);
                this._fetchPayloadOrEos(r, n)
            }
        }
        ,
        n._fetchPayloadOrEos = function(e, t) {
            var r = this.fragPrevious
              , i = this.fragments || []
              , n = i.length;
            if (0 !== n) {
                var a, o = i[0].start, s = i[n - 1].start + i[n - 1].duration, u = t.end;
                u < o && (a = i[0]),
                a || (a = this._findFragment(o, r, n, this.fragments, u, s)),
                a && this._loadFragmentOrKey(a, e, u)
            }
        }
        ,
        n._findFragment = function(e, t, r, i, n, a) {
            var o, s, u = this.mp4.config.maxFragLookUpTolerance, h = t ? i[t.idx + 1] : void 0, d = function(e) {
                var t = Math.min(u, e.duration);
                return e.start + e.duration - t <= n ? 1 : e.start - t > n && e.start ? -1 : 0
            };
            return n < a ? (n > a - u && (u = 0),
            s = h && !d(h) ? h : Di(i, d)) : s = i[r - 1],
            s && (o = s),
            o
        }
        ,
        n._loadFragmentOrKey = function(e, t, r) {
            var i = this.mp4
              , n = i.config;
            if (Li.log("Loading " + e.idx + ", currentTime:" + t.toFixed(3) + ", bufferEnd:" + r.toFixed(3)),
            void 0 !== this.fragLoadIdx ? this.fragLoadIdx++ : this.fragLoadIdx = 0,
            e.loadCounter) {
                e.loadCounter++;
                var a = n.fragLoadingLoopThreshold;
                if (e.loadCounter > a && Math.abs(this.fragLoadIdx - e.loadIdx) < a)
                    return void i.trigger(wi.ERROR, {
                        type: _i.MEDIA_ERROR,
                        details: Si.FRAG_LOOP_LOADING_ERROR,
                        fatal: !1,
                        frag: e
                    })
            } else
                e.loadCounter = 1;
            e.loadIdx = this.fragLoadIdx,
            e.autoLevel = i.autoLevelEnabled,
            e.bitrateTest = this.bitrateTest,
            this.fragCurrent = e,
            this.startFragRequested = !0,
            isNaN(e.idx) || e.bitrateTest || (this.nextLoadPosition = e.start + e.duration),
            i.trigger(wi.FRAG_LOADING, {
                frag: e
            }),
            this.state = Zi.FRAG_LOADING
        }
        ,
        n.flushMainBuffer = function(e, t) {
            this.state = Zi.BUFFER_FLUSHING;
            var r = {
                startOffset: e,
                endOffset: t
            };
            this.mp4.trigger(wi.BUFFER_FLUSHING, r)
        }
        ,
        n.onMediaAttached = function(e) {
            var t = this.media = this.mediaBuffer = e.media;
            this.onvseeking = this.onMediaSeeking.bind(this),
            this.onvseeked = this.onMediaSeeked.bind(this),
            this.onvended = this.onMediaEnded.bind(this),
            t.addEventListener("seeking", this.onvseeking),
            t.addEventListener("seeked", this.onvseeked),
            t.addEventListener("ended", this.onvended);
            var r = this.config;
            r.autoStartLoad && this.mp4.startLoad(r.startPosition)
        }
        ,
        n.onMediaDetaching = function() {
            var e = this.media;
            e && e.ended && (Li.log("MSE detaching and video ended, reset startPosition"),
            this.startPosition = this.lastCurrentTime = 0);
            var t = this.fragments;
            t && t.forEach(function(e) {
                e.loadCounter = void 0,
                e.backtracked = void 0
            }),
            e && (e.removeEventListener("seeking", this.onvseeking),
            e.removeEventListener("seeked", this.onvseeked),
            e.removeEventListener("ended", this.onvended),
            this.onvseeking = this.onvseeked = this.onvended = null),
            this.media = this.mediaBuffer = null,
            this.loadedmetadata = !1,
            this.stopLoad()
        }
        ,
        n.onMediaSeeking = function() {
            var e = this.media
              , t = e ? e.currentTime : void 0
              , r = this.config;
            isNaN(t) || Li.log("media seeking to " + t.toFixed(3));
            var i = this.mediaBuffer ? this.mediaBuffer : e
              , n = Pi.bufferInfo(i, t, this.config.maxBufferHole);
            if (this.state === Zi.FRAG_LOADING) {
                var a = this.fragCurrent;
                if (0 === n.len && a) {
                    var o = r.maxFragLookUpTolerance
                      , s = a.start - o
                      , u = a.start + a.duration + o;
                    t < s || t > u ? (a.loader && (Li.log("seeking outside of buffer while fragment load in progress, cancel fragment load"),
                    a.loader.abort()),
                    this.fragCurrent = null,
                    this.fragPrevious = null,
                    this.state = Zi.IDLE) : Li.log("seeking outside of buffer but within currently loaded fragment range")
                }
            } else
                this.state === Zi.ENDED && (0 === n.len && (this.fragPrevious = 0),
                this.state = Zi.IDLE);
            e && (this.lastCurrentTime = t),
            this.state !== Zi.FRAG_LOADING && void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * r.fragLoadingLoopThreshold),
            this.loadedmetadata || (this.nextLoadPosition = this.startPosition = t),
            this.tick()
        }
        ,
        n.onMediaSeeked = function() {
            var e = this.media
              , t = e ? e.currentTime : void 0;
            isNaN(t) || Li.log("media seeked to " + t.toFixed(3)),
            this.tick()
        }
        ,
        n.onMediaEnded = function() {
            Li.log("media ended"),
            this.startPosition = this.lastCurrentTime = 0
        }
        ,
        n.onmetadataParsed = function(e) {
            Li.log("trigger BUFFER_RESET"),
            this.mp4.trigger(wi.BUFFER_RESET),
            this.stalled = !1,
            this.startPosition = this.lastCurrentTime = 0,
            this.fragments = e.fragments || [],
            this.startFragRequested = !1;
            var t = this.config;
            (t.autoStartLoad || this.forceStartLoad) && this.mp4.startLoad(t.startPosition);
            var r = {
                video: {
                    container: "video/mp4",
                    codec: '"avc1.64001E, mp4a.40.5"'
                }
            };
            if (this.state === Zi.PARSING) {
                for (trackName in this.mp4.trigger(wi.BUFFER_CODECS, r),
                r) {
                    track = r[trackName],
                    Li.log("main track:" + trackName + ", container:" + track.container + ", codecs=" + track.codec + ".");
                    var i = e.fragment;
                    i && (this.appended = !0,
                    this.pendingBuffering = !0,
                    this.mp4.trigger(wi.BUFFER_APPENDING, {
                        type: trackName,
                        frag: i,
                        parent: "main",
                        content: "initSegment"
                    }))
                }
                this.tick()
            }
        }
        ,
        n.onFragLoaded = function(e) {
            var t = this.fragCurrent
              , r = e.frag;
            this.state === Zi.FRAG_LOADING && r && t && r.idx === t.idx && (this.stats = e.stats,
            this.state = Zi.PARSING,
            this.pendingBuffering = !0,
            this.appended = !1,
            Li.log("Parsing " + r.idx + " fragment, start " + t.byteRangeStartOffset + ", end " + t.byteRangeEndOffset),
            this.demuxer.createFragment(new Uint8Array(e.payload), t)),
            this.fragLoadError = 0
        }
        ,
        n.onFragParsingData = function(e) {
            var t = this
              , r = this.fragCurrent
              , i = e.frag;
            r && i.idx === r.idx && this.state === Zi.PARSING && ([e.data1].forEach(function(r) {
                r && r.length && t.state === Zi.PARSING && (t.appended = !0,
                t.pendingBuffering = !0,
                t.mp4.trigger(wi.BUFFER_APPENDING, {
                    type: e.type,
                    data: r,
                    parent: "main",
                    content: "data"
                }))
            }),
            this.tick())
        }
        ,
        n.onFragParsed = function(e) {
            var t = this.fragCurrent
              , r = e.frag;
            t && r.idx === t.idx && this.state === Zi.PARSING && (this.stats.tparsed = performance.now(),
            this.state = Zi.PARSED,
            this._checkAppendedParsed())
        }
        ,
        n.onBufferCreated = function(e) {
            var t = e.tracks;
            for (var r in t) {
                t[r];
                "video" === r && (this.videoBuffer = t[r].buffer)
            }
            this.mediaBuffer = this.media
        }
        ,
        n.onBufferAppended = function(e) {
            var t = this.state;
            t !== Zi.PARSING && t !== Zi.PARSED || (this.pendingBuffering = e.pending > 0,
            this._checkAppendedParsed())
        }
        ,
        n._checkAppendedParsed = function() {
            if (!(this.state !== Zi.PARSED || this.appended && this.pendingBuffering)) {
                var e = this.fragCurrent;
                if (e) {
                    this.mediaBuffer ? this.mediaBuffer : this.media;
                    this.fragPrevious = e;
                    var t = this.stats;
                    t.tbuffered = performance.now(),
                    this.fragLastKbps = Math.round(8 * t.total / (t.tbuffered - t.tfirst)),
                    this.mp4.trigger(wi.FRAG_BUFFERED, {
                        stats: t,
                        frag: e,
                        id: "main"
                    }),
                    this.state = Zi.IDLE
                }
                this.tick()
            }
        }
        ,
        n.onError = function(e) {
            var t = e.frag || this.fragCurrent;
            if (!t || "main" === t.type) {
                var r = !!this.media && Pi.isBuffered(this.media, this.media.currentTime) && Pi.isBuffered(this.media, this.media.currentTime + .5);
                switch (e.details) {
                case Si.FRAG_LOAD_ERROR:
                case Si.FRAG_LOAD_TIMEOUT:
                case Si.KEY_LOAD_ERROR:
                case Si.KEY_LOAD_TIMEOUT:
                    if (!e.fatal)
                        if (this.fragLoadError + 1 <= this.config.fragLoadingMaxRetry) {
                            var i = Math.min(Math.pow(2, this.fragLoadError) * this.config.fragLoadingRetryDelay, this.config.fragLoadingMaxRetryTimeout);
                            t.loadCounter = 0,
                            Li.warn("mediaController: frag loading failed, retry in " + i + " ms"),
                            this.retryDate = performance.now() + i,
                            this.loadedmetadata || (this.startFragRequested = !1,
                            this.nextLoadPosition = this.startPosition),
                            this.fragLoadError++,
                            this.state = Zi.FRAG_LOADING_WAITING_RETRY
                        } else
                            Li.error("mediaController: " + e.details + " reaches max retry, redispatch as fatal ..."),
                            e.fatal = !0,
                            this.state = Zi.ERROR;
                    break;
                case Si.FRAG_LOOP_LOADING_ERROR:
                    e.fatal || (r ? (this._reduceMaxBufferLength(t.duration),
                    this.state = Zi.IDLE) : t.autoLevel && 0 !== t.level || (e.fatal = !0,
                    this.state = Zi.ERROR));
                    break;
                case Si.BUFFER_FULL_ERROR:
                    "main" !== e.parent || this.state !== Zi.PARSING && this.state !== Zi.PARSED || (r ? (this._reduceMaxBufferLength(this.config.maxBufferLength),
                    this.state = Zi.IDLE) : (Li.warn("buffer full error also media.currentTime is not buffered, flush everything"),
                    this.fragCurrent = null,
                    this.flushMainBuffer(0, Number.POSITIVE_INFINITY)))
                }
            }
        }
        ,
        n._reduceMaxBufferLength = function(e) {
            var t = this.config;
            t.maxMaxBufferLength >= e && (t.maxMaxBufferLength /= 2,
            Li.warn("main:reduce max buffer length to " + t.maxMaxBufferLength + "s"),
            void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * t.fragLoadingLoopThreshold))
        }
        ,
        n._checkBuffer = function() {
            var e = this.media
              , t = this.config;
            if (e && e.readyState) {
                var r = e.currentTime
                  , i = this.mediaBuffer ? this.mediaBuffer : e
                  , n = i.buffered;
                if (!this.loadedmetadata && n.length) {
                    this.loadedmetadata = !0;
                    var a = e.seeking ? r : this.startPosition
                      , o = Pi.isBuffered(i, a)
                      , s = n.start(0)
                      , u = !o && Math.abs(a - s) < t.maxSeekHole;
                    (r !== a || u) && (Li.log("target start position:" + a),
                    u && (a = s,
                    Li.log("target start position not buffered, seek to buffered.start(0) " + a)),
                    Li.log("adjust currentTime from " + r + " to " + a),
                    e.currentTime = a)
                } else {
                    var h = Pi.bufferInfo(e, r, 0)
                      , d = !(e.paused || e.ended || 0 === e.buffered.length)
                      , f = r !== this.lastCurrentTime;
                    if (this.lastCurrentTime = r,
                    f)
                        this.stallReported && (Li.warn("playback not stuck anymore @" + r + ", after " + Math.round(performance.now() - this.stalled) + "ms"),
                        this.stallReported = !1),
                        this.stalled = void 0,
                        this.nudgeRetry = 0;
                    else if (d) {
                        var c = performance.now()
                          , l = this.mp4;
                        if (this.stalled) {
                            var p = c - this.stalled
                              , m = h.len
                              , g = this.nudgeRetry || 0;
                            if (m <= .5 && p > 1e3 * t.lowBufferWatchdogPeriod) {
                                this.stallReported || (this.stallReported = !0,
                                Li.warn("playback stalling in low buffer @" + r),
                                l.trigger(wi.ERROR, {
                                    type: _i.MEDIA_ERROR,
                                    details: Si.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: m
                                }));
                                var v = h.nextStart
                                  , y = v - r;
                                if (v && y < t.maxSeekHole && y > 0) {
                                    this.nudgeRetry = ++g;
                                    var b = g * t.nudgeOffset;
                                    Li.log("adjust currentTime from " + e.currentTime + " to next buffered @ " + v + " + nudge " + b),
                                    e.currentTime = v + b,
                                    this.stalled = void 0,
                                    l.trigger(wi.ERROR, {
                                        type: _i.MEDIA_ERROR,
                                        details: Si.BUFFER_SEEK_OVER_HOLE,
                                        fatal: !1,
                                        hole: v + b - r
                                    })
                                }
                            } else if (m > .5 && p > 1e3 * t.highBufferWatchdogPeriod)
                                if (this.stallReported || (this.stallReported = !0,
                                Li.warn("playback stalling in high buffer @" + r),
                                l.trigger(wi.ERROR, {
                                    type: _i.MEDIA_ERROR,
                                    details: Si.BUFFER_STALLED_ERROR,
                                    fatal: !1,
                                    buffer: m
                                })),
                                this.stalled = void 0,
                                this.nudgeRetry = ++g,
                                g < t.nudgeMaxRetry) {
                                    var w = e.currentTime
                                      , _ = w + g * t.nudgeOffset;
                                    Li.log("adjust currentTime from " + w + " to " + _),
                                    e.currentTime = _,
                                    l.trigger(wi.ERROR, {
                                        type: _i.MEDIA_ERROR,
                                        details: Si.BUFFER_NUDGE_ON_STALL,
                                        fatal: !1
                                    })
                                } else
                                    Li.error("still stuck in high buffer @" + r + " after " + t.nudgeMaxRetry + ", raise fatal error"),
                                    l.trigger(wi.ERROR, {
                                        type: _i.MEDIA_ERROR,
                                        details: Si.BUFFER_STALLED_ERROR,
                                        fatal: !0
                                    })
                        } else
                            this.stalled = c,
                            this.stallReported = !1
                    }
                }
            }
        }
        ,
        n.onFragLoadEmergencyAborted = function() {
            this.state = Zi.IDLE,
            this.loadedmetadata || (this.startFragRequested = !1,
            this.nextLoadPosition = this.startPosition),
            this.tick()
        }
        ,
        n.onBufferFlushed = function() {
            this.mediaBuffer ? this.mediaBuffer : this.media;
            void 0 !== this.fragLoadIdx && (this.fragLoadIdx += 2 * this.config.fragLoadingLoopThreshold),
            this.state = Zi.IDLE,
            this.fragPrevious = null
        }
        ,
        r(t, [{
            key: "state",
            set: function(e) {
                if (this.state !== e) {
                    var t = this.state;
                    this._state = e,
                    Li.log("main stream:" + t + "->" + e),
                    this.mp4.trigger(wi.STREAM_STATE_TRANSITION, {
                        previousState: t,
                        nextState: e
                    })
                }
            },
            get: function() {
                return this._state
            }
        }, {
            key: "bufferInfo",
            get: function() {
                var e = this.mp4.config
                  , t = this.media
                  , r = this.loadedmetadata ? t.currentTime : this.nextLoadPosition;
                return Pi.bufferInfo(this.mediaBuffer ? this.mediaBuffer : t, r, e.maxBufferHole)
            }
        }]),
        t
    }(xi);
    function Ji() {
        if ("undefined" != typeof window)
            return window.MediaSource || window.WebKitMediaSource
    }
    var en = Ji()
      , tn = function(e) {
        function t(t) {
            var r;
            return (r = e.call(this, t, wi.MEDIA_ATTACHING, wi.MEDIA_DETACHING, wi.METADATA_PARSED, wi.BUFFER_RESET, wi.BUFFER_APPENDING, wi.BUFFER_CODECS, wi.BUFFER_EOS, wi.BUFFER_FLUSHING) || this)._msDuration = null,
            r._levelDuration = null,
            r._live = null,
            r._objectUrl = null,
            r.onsbue = r.onSBUpdateEnd.bind(r),
            r.onsbe = r.onSBUpdateError.bind(r),
            r.pendingTracks = {},
            r.tracks = {},
            r
        }
        i(t, e);
        var r = t.prototype;
        return r.destroy = function() {
            xi.prototype.destroy.call(this)
        }
        ,
        r.onmetadataParsed = function(e) {
            this.sourceBufferNb = 1,
            Li.log(this.sourceBufferNb + " sourceBuffer(s) expected"),
            this.onBufferCodecs()
        }
        ,
        r.onMediaAttaching = function(e) {
            var t = this.media = e.media;
            if (t) {
                var r = this.mediaSource = new en;
                this.onmso = this.onMediaSourceOpen.bind(this),
                this.onmse = this.onMediaSourceEnded.bind(this),
                this.onmsc = this.onMediaSourceClose.bind(this),
                r.addEventListener("sourceopen", this.onmso),
                r.addEventListener("sourceended", this.onmse),
                r.addEventListener("sourceclose", this.onmsc),
                t.src = URL.createObjectURL(r),
                this._objectUrl = t.src
            }
        }
        ,
        r.onMediaDetaching = function() {
            Li.log("media source detaching");
            var e = this.mediaSource;
            if (e) {
                if ("open" === e.readyState)
                    try {
                        e.endOfStream()
                    } catch (e) {
                        Li.warn("onMediaDetaching:" + e.message + " while calling endOfStream")
                    }
                e.removeEventListener("sourceopen", this.onmso),
                e.removeEventListener("sourceended", this.onmse),
                e.removeEventListener("sourceclose", this.onmsc),
                this.media && (URL.revokeObjectURL(this._objectUrl),
                this.media.src === this._objectUrl ? (this.media.removeAttribute("src"),
                this.media.load()) : Li.warn("media.src was changed by a third party - skip cleanup")),
                this.mediaSource = null,
                this.media = null,
                this._objectUrl = null,
                this.pendingTracks = {},
                this.tracks = {},
                this.sourceBuffer = {},
                this.flushRange = [],
                this.segments = [],
                this.appended = 0
            }
            this.onmso = this.onmse = this.onmsc = null,
            this.mp4.trigger(wi.MEDIA_DETACHED)
        }
        ,
        r.onMediaSourceOpen = function() {
            Li.log("media source opened"),
            this.mp4.trigger(wi.MEDIA_ATTACHED, {
                media: this.media
            });
            var e = this.mediaSource;
            e && e.removeEventListener("sourceopen", this.onmso),
            this.checkPendingTracks()
        }
        ,
        r.checkPendingTracks = function() {
            var e = this.pendingTracks
              , t = Object.keys(e).length;
            t && (this.sourceBufferNb <= t || 0 === this.sourceBufferNb) && (this.createSourceBuffers(e),
            this.pendingTracks = {},
            this.doAppending())
        }
        ,
        r.onMediaSourceClose = function() {
            Li.log("media source closed")
        }
        ,
        r.onMediaSourceEnded = function() {
            Li.log("media source ended")
        }
        ,
        r.onSBUpdateEnd = function() {
            if (this.audioTimestampOffset) {
                var e = this.sourceBuffer.audio;
                Li.warn("change mpeg audio timestamp offset from " + e.timestampOffset + " to " + this.audioTimestampOffset),
                e.timestampOffset = this.audioTimestampOffset,
                delete this.audioTimestampOffset
            }
            this._needsFlush && this.doFlush(),
            this._needsEos && this.checkEos(),
            this.appending = !1;
            var t = this.segments.length;
            this.mp4.trigger(wi.BUFFER_APPENDED, {
                pending: t
            }),
            this._needsFlush || this.doAppending()
        }
        ,
        r.onSBUpdateError = function(e) {
            Li.error("sourceBuffer error:", e),
            this.mp4.trigger(wi.ERROR, {
                type: _i.MEDIA_ERROR,
                details: Si.BUFFER_APPENDING_ERROR,
                fatal: !1
            })
        }
        ,
        r.onBufferReset = function() {
            var e = this.sourceBuffer;
            for (var t in e) {
                var r = e[t];
                try {
                    this.mediaSource.removeSourceBuffer(r),
                    r.removeEventListener("updateend", this.onsbue),
                    r.removeEventListener("error", this.onsbe)
                } catch (e) {}
            }
            this.sourceBuffer = {},
            this.flushRange = [],
            this.segments = [],
            this.appended = 0
        }
        ,
        r.onBufferCodecs = function(e) {
            if (e = {
                video: {
                    container: "video/mp4",
                    codec: '"avc1.64001E, mp4a.40.5"'
                }
            },
            this.sourceBuffer = this.sourceBuffer || {},
            0 === Object.keys(this.sourceBuffer).length) {
                for (var t in e)
                    this.pendingTracks[t] = e[t];
                var r = this.mediaSource;
                r && "open" === r.readyState && this.checkPendingTracks()
            }
        }
        ,
        r.createSourceBuffers = function(e) {
            var t = this.sourceBuffer
              , r = this.mediaSource;
            for (var i in e)
                if (!t[i]) {
                    var n = e[i]
                      , a = n.codec
                      , o = n.container + ";codecs=" + a;
                    Li.log("creating sourceBuffer(" + o + ")");
                    try {
                        var s = t[i] = r.addSourceBuffer(o);
                        s.addEventListener("updateend", this.onsbue),
                        s.addEventListener("error", this.onsbe),
                        this.tracks[i] = {
                            codec: a,
                            container: n.container
                        },
                        n.buffer = s
                    } catch (e) {
                        Li.error("error while trying to add sourceBuffer:" + e.message),
                        this.mp4.trigger(wi.ERROR, {
                            type: _i.MEDIA_ERROR,
                            details: Si.BUFFER_ADD_CODEC_ERROR,
                            fatal: !1,
                            err: e,
                            mimeType: o
                        })
                    }
                }
            this.mp4.trigger(wi.BUFFER_CREATED, {
                tracks: e
            })
        }
        ,
        r.onBufferAppending = function(e) {
            this._needsFlush || (this.segments ? this.segments.push(e.data) : this.segments = [e.data],
            this.doAppending())
        }
        ,
        r.onBufferAppendFail = function(e) {
            Li.error("sourceBuffer error:", e.event),
            this.mp4.trigger(wi.ERROR, {
                type: _i.MEDIA_ERROR,
                details: Si.BUFFER_APPENDING_ERROR,
                fatal: !1
            })
        }
        ,
        r.onBufferEos = function(e) {
            var t = this.sourceBuffer
              , r = e.type;
            for (var i in t)
                r && i !== r || t[i].ended || (t[i].ended = !0,
                Li.log(i + " sourceBuffer now EOS"));
            this.checkEos()
        }
        ,
        r.checkEos = function() {
            var e = this.sourceBuffer
              , t = this.mediaSource;
            if (t && "open" === t.readyState) {
                for (var r in e) {
                    var i = e[r];
                    if (!i.ended)
                        return;
                    if (i.updating)
                        return void (this._needsEos = !0)
                }
                Li.log("all media data available, signal endOfStream() to MediaSource and stop loading fragment");
                try {
                    t.endOfStream()
                } catch (e) {
                    Li.warn("exception while calling mediaSource.endOfStream()")
                }
                this._needsEos = !1
            } else
                this._needsEos = !1
        }
        ,
        r.onBufferFlushing = function(e) {
            this.flushRange.push({
                start: e.startOffset,
                end: e.endOffset,
                type: e.type
            }),
            this.flushBufferCounter = 0,
            this.doFlush()
        }
        ,
        r.doFlush = function() {
            for (; this.flushRange.length; ) {
                var e = this.flushRange[0];
                if (!this.flushBuffer(e.start, e.end, e.type))
                    return void (this._needsFlush = !0);
                this.flushRange.shift(),
                this.flushBufferCounter = 0
            }
            if (0 === this.flushRange.length) {
                this._needsFlush = !1;
                var t = 0
                  , r = this.sourceBuffer;
                try {
                    for (var i in r)
                        t += r[i].buffered.length
                } catch (e) {
                    Li.error("error while accessing sourceBuffer.buffered")
                }
                this.appended = t,
                this.mp4.trigger(wi.BUFFER_FLUSHED)
            }
        }
        ,
        r.doAppending = function() {
            var e = this.mp4
              , t = this.sourceBuffer
              , r = this.segments;
            if (Object.keys(t).length) {
                if (this.media.error)
                    return this.segments = [],
                    void Li.error("trying to append although a media error occured, flush segment and abort");
                if (this.appending)
                    return void Li.log("sb appending in progress");
                if (r && r.length) {
                    var i = r.shift();
                    try {
                        var n = t.video;
                        n ? n.updating ? r.unshift(i) : (n.ended = !1,
                        n.appendBuffer(i),
                        this.appendError = 0,
                        this.appended++,
                        this.appending = !0) : this.onSBUpdateEnd()
                    } catch (t) {
                        Li.error("error while trying to append buffer:" + t.message),
                        r.unshift(i);
                        var a = {
                            type: _i.MEDIA_ERROR
                        };
                        if (22 === t.code)
                            return this.segments = [],
                            a.details = Si.BUFFER_FULL_ERROR,
                            a.fatal = !1,
                            void e.trigger(wi.ERROR, a);
                        if (this.appendError ? this.appendError++ : this.appendError = 1,
                        a.details = Si.BUFFER_APPEND_ERROR,
                        this.appendError > e.config.appendErrorMaxRetry)
                            return Li.log("fail " + e.config.appendErrorMaxRetry + " times to append segment in sourceBuffer"),
                            r = [],
                            a.fatal = !0,
                            void e.trigger(wi.ERROR, a);
                        a.fatal = !1,
                        e.trigger(wi.ERROR, a)
                    }
                }
            }
        }
        ,
        r.flushBuffer = function(e, t, r) {
            var i, n, a, o, s, u, h = this.sourceBuffer;
            if (Object.keys(h).length) {
                if (Li.log("flushBuffer,pos/start/end: " + this.media.currentTime.toFixed(3) + "/" + e + "/" + t),
                this.flushBufferCounter < this.appended) {
                    for (var d in h)
                        if (!r || d === r) {
                            if ((i = h[d]).ended = !1,
                            i.updating)
                                return Li.warn("cannot flush, sb updating in progress"),
                                !1;
                            try {
                                for (n = 0; n < i.buffered.length; n++)
                                    if (a = i.buffered.start(n),
                                    o = i.buffered.end(n),
                                    -1 !== navigator.userAgent.toLowerCase().indexOf("firefox") && t === Number.POSITIVE_INFINITY ? (s = e,
                                    u = t) : (s = Math.max(a, e),
                                    u = Math.min(o, t)),
                                    Math.min(u, o) - s > .5)
                                        return this.flushBufferCounter++,
                                        Li.log("flush " + d + " [" + s + "," + u + "], of [" + a + "," + o + "], pos:" + this.media.currentTime),
                                        i.remove(s, u),
                                        !1
                            } catch (e) {
                                Li.warn("exception while accessing sourcebuffer, it might have been removed from MediaSource")
                            }
                        }
                } else
                    Li.warn("abort flushing too many retries");
                Li.log("buffer flushed")
            }
            return !0
        }
        ,
        t
    }(xi);
    var rn, nn, an = {
        autoStartLoad: !0,
        startPosition: -1,
        defaultAudioCodec: void 0,
        debug: !1,
        capLevelOnFPSDrop: !1,
        capLevelToPlayerSize: !1,
        initialLiveManifestSize: 1,
        maxBufferLength: 30,
        maxBufferSize: 6e7,
        maxBufferHole: .5,
        maxSeekHole: 2,
        lowBufferWatchdogPeriod: .5,
        highBufferWatchdogPeriod: 3,
        nudgeOffset: .1,
        nudgeMaxRetry: 3,
        maxFragLookUpTolerance: .15,
        liveSyncDurationCount: 3,
        liveMaxLatencyDurationCount: 1 / 0,
        liveSyncDuration: void 0,
        liveMaxLatencyDuration: void 0,
        liveDurationInfinity: !1,
        maxMaxBufferLength: 600,
        enableWorker: !0,
        enableSoftwareAES: !0,
        manifestLoadingTimeOut: 1e4,
        manifestLoadingMaxRetry: 1,
        manifestLoadingRetryDelay: 1e3,
        manifestLoadingMaxRetryTimeout: 64e3,
        startLevel: void 0,
        levelLoadingTimeOut: 1e4,
        levelLoadingMaxRetry: 4,
        levelLoadingRetryDelay: 1e3,
        levelLoadingMaxRetryTimeout: 64e3,
        fragLoadingTimeOut: 2e4,
        fragLoadingMaxRetry: 6,
        fragLoadingRetryDelay: 1e3,
        fragLoadingMaxRetryTimeout: 64e3,
        fragLoadingLoopThreshold: 3,
        startFragPrefetch: !1,
        fpsDroppedMonitoringPeriod: 5e3,
        fpsDroppedMonitoringThreshold: .2,
        appendErrorMaxRetry: 3,
        loader: function() {
            function e(e) {
                e && e.xhrSetup && (this.xhrSetup = e.xhrSetup)
            }
            var t = e.prototype;
            return t.destroy = function() {
                this.abort(),
                this.loader = null
            }
            ,
            t.abort = function() {
                var e = this.loader;
                e && 4 !== e.readyState && (this.stats.aborted = !0,
                e.abort()),
                window.clearTimeout(this.requestTimeout),
                this.requestTimeout = null,
                window.clearTimeout(this.retryTimeout),
                this.retryTimeout = null
            }
            ,
            t.load = function(e, t, r) {
                this.context = e,
                this.config = t,
                this.callbacks = r,
                this.stats = {
                    trequest: performance.now(),
                    retry: 0
                },
                this.retryDelay = t.retryDelay,
                this.loadInternal()
            }
            ,
            t.loadInternal = function() {
                var e, t = this.context;
                e = this.loader = new XMLHttpRequest;
                var r = this.stats;
                r.tfirst = 0,
                r.loaded = 0;
                var i = this.xhrSetup
                  , n = (-1 == t.url.indexOf("?") ? "?" : "&") + "_t=" + +new Date;
                try {
                    if (i)
                        try {
                            i(e, t.url + n)
                        } catch (r) {
                            e.open("GET", t.url + n, !0),
                            i(e, t.url + n)
                        }
                    e.readyState || e.open("GET", t.url + n, !0)
                } catch (r) {
                    return void this.callbacks.onError({
                        code: e.status,
                        text: r.message
                    }, t, e)
                }
                t.rangeStart && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd > 0 ? t.rangeEnd : "")),
                e.onreadystatechange = this.readystatechange.bind(this),
                e.onprogress = this.loadprogress.bind(this),
                e.responseType = t.responseType,
                this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout),
                e.send()
            }
            ,
            t.readystatechange = function(e) {
                var t = e.currentTarget
                  , r = t.readyState
                  , i = this.stats
                  , n = this.context
                  , a = this.config;
                if (!i.aborted && r >= 2)
                    if (window.clearTimeout(this.requestTimeout),
                    0 === i.tfirst && (i.tfirst = Math.max(performance.now(), i.trequest)),
                    4 === r) {
                        var o = t.status;
                        if (o >= 200 && o < 300) {
                            var s, u;
                            i.tload = Math.max(i.tfirst, performance.now()),
                            u = "arraybuffer" === n.responseType ? (s = t.response).byteLength : (s = t.responseText).length,
                            i.loaded = i.total = u;
                            var h = {
                                url: t.responseURL,
                                data: s
                            };
                            this.callbacks.onSuccess(h, i, n, t)
                        } else
                            i.retry >= a.maxRetry || o >= 400 && o < 499 ? (Li.error(o + " while loading " + n.url),
                            this.callbacks.onError({
                                code: o,
                                text: t.statusText
                            }, n, t)) : (Li.warn(o + " while loading " + n.url + ", retrying in " + this.retryDelay + "..."),
                            this.destroy(),
                            this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                            this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay),
                            i.retry++)
                    } else
                        this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), a.timeout)
            }
            ,
            t.loadtimeout = function() {
                var e = this.stats
                  , t = this.context
                  , r = this.config;
                e.retry >= r.maxRetry ? (Li.warn("timeout while loading " + t.url),
                this.callbacks.onTimeout(this.stats, this.context, null)) : (Li.warn("timeout while loading " + t.url + ", retrying in " + this.retryDelay + "..."),
                this.destroy(),
                this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                this.retryDelay = Math.min(2 * this.retryDelay, r.maxRetryDelay),
                e.retry++)
            }
            ,
            t.loadprogress = function(e) {
                var t = e.currentTarget
                  , r = performance.now()
                  , i = this.stats;
                i.loaded = e.loaded,
                e.lengthComputable && (i.total = e.total,
                i.lastLoadedTime && (i.speed = (i.loaded - i.lastLoaded) / (r - i.lastLoadedTime) * 1e3 / 1024)),
                i.lastLoaded = i.loaded,
                i.lastLoadedTime = r;
                var n = this.callbacks.onProgress;
                n && n(i, this.context, null, t)
            }
            ,
            e
        }(),
        fLoader: void 0,
        pLoader: void 0,
        xhrSetup: void 0,
        fetchSetup: void 0,
        stretchShortVideoTrack: !1,
        maxAudioFramesDrift: 1,
        minAutoBitrate: 0
    }, on = function() {
        function e(t) {
            void 0 === t && (t = {});
            var r = e.DefaultConfig;
            for (var i in r)
                i in t || (t[i] = r[i]);
            Ti(t.debug),
            this.config = t,
            this._autoLevelCapping = -1,
            this.preloadTime = t.preloadTime || 15;
            var n = this.observer = new Ue;
            n.trigger = function(e) {
                for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                    r[i - 1] = arguments[i];
                n.emit.apply(n, [e, e].concat(r))
            }
            ,
            n.off = function(e) {
                for (var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), i = 1; i < t; i++)
                    r[i - 1] = arguments[i];
                n.removeListener.apply(n, [e].concat(r))
            }
            ,
            this.on = n.on.bind(n),
            this.off = n.off.bind(n),
            this.trigger = n.trigger.bind(n);
            new Bi(this);
            var a = this.streamController = new Qi(this)
              , o = new tn(this)
              , s = [a];
            this.networkControllers = s;
            var u = [o, Bi];
            this.coreComponents = u
        }
        e.isSupported = function() {
            return e = Ji(),
            t = window.SourceBuffer || window.WebKitSourceBuffer,
            r = e && "function" == typeof e.isTypeSupported && e.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"'),
            i = !t || t.prototype && "function" == typeof t.prototype.appendBuffer && "function" == typeof t.prototype.remove,
            !!r && !!i;
            var e, t, r, i
        }
        ,
        r(e, null, [{
            key: "version",
            get: function() {
                return "2.2.35-"
            }
        }, {
            key: "Events",
            get: function() {
                return wi
            }
        }, {
            key: "ErrorTypes",
            get: function() {
                return _i
            }
        }, {
            key: "ErrorDetails",
            get: function() {
                return Si
            }
        }, {
            key: "DefaultConfig",
            get: function() {
                return e.defaultConfig ? e.defaultConfig : an
            },
            set: function(t) {
                e.defaultConfig = t
            }
        }]);
        var t = e.prototype;
        return t.destroy = function() {
            Li.log("destroy"),
            this.trigger(wi.DESTROYING),
            this.detachMedia(),
            this.coreComponents.concat(this.networkControllers).forEach(function(e) {
                e.destroy()
            }),
            this.url = null,
            this.observer.removeAllListeners(),
            this._autoLevelCapping = -1
        }
        ,
        t.attachMedia = function(e) {
            Li.log("attachMedia"),
            this.media = e,
            this.trigger(wi.MEDIA_ATTACHING, {
                media: e
            })
        }
        ,
        t.detachMedia = function() {
            Li.log("detachMedia"),
            this.trigger(wi.MEDIA_DETACHING),
            this.media = null
        }
        ,
        t.loadSource = function(e) {
            e = Qt.buildAbsoluteURL(window.location.href, e, {
                alwaysNormalize: !0
            }),
            Li.log("loadSource:" + e),
            this.url = e,
            this.networkControllers.forEach(function(t) {
                t.loadSource(e)
            })
        }
        ,
        t.startLoad = function(e) {
            void 0 === e && (e = -1),
            Li.log("startLoad(" + e + ")"),
            this.networkControllers.forEach(function(t) {
                t.startLoad(e)
            })
        }
        ,
        t.stopLoad = function() {
            Li.log("stopLoad"),
            this.networkControllers.forEach(function(e) {
                e.stopLoad()
            })
        }
        ,
        t.recoverMediaError = function() {
            Li.log("recoverMediaError");
            var e = this.media;
            this.detachMedia(),
            this.attachMedia(e)
        }
        ,
        r(e, [{
            key: "bufferInfo",
            get: function() {
                return this.streamController.bufferInfo
            }
        }]),
        e
    }(), sn = {
        debug: !1,
        enableWorker: !1,
        manifestLoadingMaxRetry: 2,
        manifestLoadingTimeOut: 14e3,
        nudgeMaxRetry: 20,
        fragLoadingMaxRetry: 9999
    }, un = "1.0.1", hn = "mango-kernel-mp4", dn = ((nn = function(e) {
        function t(t, r, i) {
            var n;
            if (void 0 === i && (i = {}),
            (n = e.call(this) || this).version = un,
            !m(t))
                throw new Error("video element passed in " + hn + " must be a HTMLVideoElement, but not " + typeof t);
            if (!h(r))
                throw new Error("config of " + hn + " must be an Object but not " + typeof r);
            return n.video = t,
            n.config = r,
            n.customConfig = w({}, sn, i),
            n.mp4Kernel = new on(n.customConfig),
            n.bindEvents(),
            n.attachMedia(),
            n
        }
        i(t, e),
        t.isSupport = function() {
            return on.isSupported()
        }
        ;
        var r = t.prototype;
        return r.bindEvents = function(e) {
            void 0 === e && (e = !1);
            var t = this.mp4Kernel;
            if (t) {
                var r = e ? "off" : "on";
                t[r](on.Events.ERROR, this.mp4ErrorHandler),
                t[r](on.Events.BUFFER_EMPTY, this.mp4EventHandler),
                t[r](on.Events.BUFFER_FULL, this.mp4EventHandler),
                t[r](on.Events.METADATA_PARSED, this.mp4EventHandler),
                t[r](on.Events.FRAG_LOAD_PROGRESS, this.mp4EventHandler),
                t[r](on.Events.FRAG_PARSING_DATA, this.mp4EventHandler)
            }
        }
        ,
        r.load = function() {
            return this.mp4Kernel.loadSource(this.config.src)
        }
        ,
        r.startLoad = function() {
            return this.mp4Kernel.startLoad()
        }
        ,
        r.stopLoad = function() {
            return this.mp4Kernel.stopLoad()
        }
        ,
        r.attachMedia = function() {
            return this.mp4Kernel.attachMedia(this.video)
        }
        ,
        r.play = function() {
            return this.video.play()
        }
        ,
        r.destroy = function() {
            return this.bindEvents(!0),
            this.mp4Kernel.destroy()
        }
        ,
        r.seek = function(e) {
            this.video.currentTime = e
        }
        ,
        r.pause = function() {
            return this.video.pause()
        }
        ,
        r.refresh = function() {
            return this.mp4Kernel.stopLoad(),
            this.mp4Kernel.loadSource(this.config.src)
        }
        ,
        r.getMetadata = function() {
            return this.metadata
        }
        ,
        r.getSpeed = function() {
            return this.speed || 0
        }
        ,
        r.getFps = function() {
            return this.fps || 0
        }
        ,
        r.getBufferInfo = function() {
            return this.mp4Kernel.bufferInfo
        }
        ,
        r.mp4EventHandler = function(e, t) {
            e == on.Events.BUFFER_EMPTY && ir.warn(hn, "mp4core buffer is empty."),
            e == on.Events.FRAG_PARSING_DATA && "video" === t.type && (this.fps = t.nb / (t.endPTS - t.startPTS)),
            e == on.Events.METADATA_PARSED && (this.metadata = t.meta),
            e == on.Events.FRAG_LOAD_PROGRESS && (this.speed = t.stats.speed || 0),
            this.emit(e, t)
        }
        ,
        r.mp4ErrorHandler = function(e, t) {
            this.emit("mp4StreamError", t),
            this.emit(e, t),
            ir.error(hn, "mp4core error ouccurred at event [" + e + "], detail " + (t && t.details) + " - " + (t && t.err))
        }
        ,
        t
    }(Ve)).version = un,
    a((rn = nn).prototype, "mp4EventHandler", [O], Object.getOwnPropertyDescriptor(rn.prototype, "mp4EventHandler"), rn.prototype),
    a(rn.prototype, "mp4ErrorHandler", [O], Object.getOwnPropertyDescriptor(rn.prototype, "mp4ErrorHandler"), rn.prototype),
    rn), fn = function(e, t) {
        return (fn = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var r in t)
                t.hasOwnProperty(r) && (e[r] = t[r])
        }
        )(e, t)
    };
    function cn(e, t) {
        function r() {
            this.constructor = e
        }
        fn(e, t),
        e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype,
        new r)
    }
    function ln(e, t, r, i) {
        return new (r || (r = Promise))(function(n, a) {
            function o(e) {
                try {
                    u(i.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    u(i.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function u(e) {
                var t;
                e.done ? n(e.value) : (t = e.value,
                t instanceof r ? t : new r(function(e) {
                    e(t)
                }
                )).then(o, s)
            }
            u((i = i.apply(e, t || [])).next())
        }
        )
    }
    function pn(e, t) {
        var r, i, n, a, o = {
            label: 0,
            sent: function() {
                if (1 & n[0])
                    throw n[1];
                return n[1]
            },
            trys: [],
            ops: []
        };
        return a = {
            next: s(0),
            throw: s(1),
            return: s(2)
        },
        "function" == typeof Symbol && (a[Symbol.iterator] = function() {
            return this
        }
        ),
        a;
        function s(a) {
            return function(s) {
                return function(a) {
                    if (r)
                        throw new TypeError("Generator is already executing.");
                    for (; o; )
                        try {
                            if (r = 1,
                            i && (n = 2 & a[0] ? i.return : a[0] ? i.throw || ((n = i.return) && n.call(i),
                            0) : i.next) && !(n = n.call(i, a[1])).done)
                                return n;
                            switch (i = 0,
                            n && (a = [2 & a[0], n.value]),
                            a[0]) {
                            case 0:
                            case 1:
                                n = a;
                                break;
                            case 4:
                                return o.label++,
                                {
                                    value: a[1],
                                    done: !1
                                };
                            case 5:
                                o.label++,
                                i = a[1],
                                a = [0];
                                continue;
                            case 7:
                                a = o.ops.pop(),
                                o.trys.pop();
                                continue;
                            default:
                                if (!(n = (n = o.trys).length > 0 && n[n.length - 1]) && (6 === a[0] || 2 === a[0])) {
                                    o = 0;
                                    continue
                                }
                                if (3 === a[0] && (!n || a[1] > n[0] && a[1] < n[3])) {
                                    o.label = a[1];
                                    break
                                }
                                if (6 === a[0] && o.label < n[1]) {
                                    o.label = n[1],
                                    n = a;
                                    break
                                }
                                if (n && o.label < n[2]) {
                                    o.label = n[2],
                                    o.ops.push(a);
                                    break
                                }
                                n[2] && o.ops.pop(),
                                o.trys.pop();
                                continue
                            }
                            a = t.call(e, o)
                        } catch (e) {
                            a = [6, e],
                            i = 0
                        } finally {
                            r = n = 0
                        }
                    if (5 & a[0])
                        throw a[1];
                    return {
                        value: a[0] ? a[1] : void 0,
                        done: !0
                    }
                }([a, s])
            }
        }
    }
    var mn = function(e, t) {
        return (mn = Object.setPrototypeOf || {
            __proto__: []
        }instanceof Array && function(e, t) {
            e.__proto__ = t
        }
        || function(e, t) {
            for (var r in t)
                Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r])
        }
        )(e, t)
    };
    function gn(e, t) {
        if ("function" != typeof t && null !== t)
            throw new TypeError("Class extends value " + String(t) + " is not a constructor or null");
        function r() {
            this.constructor = e
        }
        mn(e, t),
        e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype,
        new r)
    }
    function vn(e, t, r, i) {
        return new (r || (r = Promise))(function(n, a) {
            function o(e) {
                try {
                    u(i.next(e))
                } catch (e) {
                    a(e)
                }
            }
            function s(e) {
                try {
                    u(i.throw(e))
                } catch (e) {
                    a(e)
                }
            }
            function u(e) {
                var t;
                e.done ? n(e.value) : (t = e.value,
                t instanceof r ? t : new r(function(e) {
                    e(t)
                }
                )).then(o, s)
            }
            u((i = i.apply(e, t || [])).next())
        }
        )
    }
    function yn(e, t) {
        var r, i, n, a, o = {
            label: 0,
            sent: function() {
                if (1 & n[0])
                    throw n[1];
                return n[1]
            },
            trys: [],
            ops: []
        };
        return a = {
            next: s(0),
            throw: s(1),
            return: s(2)
        },
        "function" == typeof Symbol && (a[Symbol.iterator] = function() {
            return this
        }
        ),
        a;
        function s(a) {
            return function(s) {
                return function(a) {
                    if (r)
                        throw new TypeError("Generator is already executing.");
                    for (; o; )
                        try {
                            if (r = 1,
                            i && (n = 2 & a[0] ? i.return : a[0] ? i.throw || ((n = i.return) && n.call(i),
                            0) : i.next) && !(n = n.call(i, a[1])).done)
                                return n;
                            switch (i = 0,
                            n && (a = [2 & a[0], n.value]),
                            a[0]) {
                            case 0:
                            case 1:
                                n = a;
                                break;
                            case 4:
                                return o.label++,
                                {
                                    value: a[1],
                                    done: !1
                                };
                            case 5:
                                o.label++,
                                i = a[1],
                                a = [0];
                                continue;
                            case 7:
                                a = o.ops.pop(),
                                o.trys.pop();
                                continue;
                            default:
                                if (!(n = (n = o.trys).length > 0 && n[n.length - 1]) && (6 === a[0] || 2 === a[0])) {
                                    o = 0;
                                    continue
                                }
                                if (3 === a[0] && (!n || a[1] > n[0] && a[1] < n[3])) {
                                    o.label = a[1];
                                    break
                                }
                                if (6 === a[0] && o.label < n[1]) {
                                    o.label = n[1],
                                    n = a;
                                    break
                                }
                                if (n && o.label < n[2]) {
                                    o.label = n[2],
                                    o.ops.push(a);
                                    break
                                }
                                n[2] && o.ops.pop(),
                                o.trys.pop();
                                continue
                            }
                            a = t.call(e, o)
                        } catch (e) {
                            a = [6, e],
                            i = 0
                        } finally {
                            r = n = 0
                        }
                    if (5 & a[0])
                        throw a[1];
                    return {
                        value: a[0] ? a[1] : void 0,
                        done: !0
                    }
                }([a, s])
            }
        }
    }
    function bn(e) {
        var t = "function" == typeof Symbol && Symbol.iterator
          , r = t && e[t]
          , i = 0;
        if (r)
            return r.call(e);
        if (e && "number" == typeof e.length)
            return {
                next: function() {
                    return e && i >= e.length && (e = void 0),
                    {
                        value: e && e[i++],
                        done: !e
                    }
                }
            };
        throw new TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
    }
    function wn(e, t) {
        var r = "function" == typeof Symbol && e[Symbol.iterator];
        if (!r)
            return e;
        var i, n, a = r.call(e), o = [];
        try {
            for (; (void 0 === t || t-- > 0) && !(i = a.next()).done; )
                o.push(i.value)
        } catch (e) {
            n = {
                error: e
            }
        } finally {
            try {
                i && !i.done && (r = a.return) && r.call(a)
            } finally {
                if (n)
                    throw n.error
            }
        }
        return o
    }
    function _n(e, t, r) {
        if (r || 2 === arguments.length)
            for (var i, n = 0, a = t.length; n < a; n++)
                !i && n in t || (i || (i = Array.prototype.slice.call(t, 0, n)),
                i[n] = t[n]);
        return e.concat(i || Array.prototype.slice.call(t))
    }
    var Sn = function() {
        function e() {}
        return e.open = function(e, t) {
            void 0 === e && (e = "player"),
            void 0 === t && (t = "green"),
            this._name = e,
            this._color = t,
            this._open = !0
        }
        ,
        e.log = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.trace.apply(this, _n(["log"], wn(e), !1))
        }
        ,
        e.error = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.trace.apply(this, _n(["error"], wn(e), !1))
        }
        ,
        e.warn = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.trace.apply(this, _n(["warn"], wn(e), !1))
        }
        ,
        e.info = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.trace.apply(this, _n(["info"], wn(e), !1))
        }
        ,
        e.debug = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            this.trace.apply(this, _n(["debug"], wn(e), !1))
        }
        ,
        e.trace = function(e) {
            for (var t = [], r = 1; r < arguments.length; r++)
                t[r - 1] = arguments[r];
            this._open
        }
        ,
        e._open = !1,
        e._name = "player",
        e._color = "green",
        e
    }()
      , En = "init"
      , An = "vidioFrame"
      , Rn = "audioFrame"
      , kn = "canplay"
      , Tn = "display"
      , Ln = "audio_sync"
      , xn = "codec_reset"
      , Bn = "fragment_loaded"
      , Dn = "buffer_empty"
      , Pn = "buffer_deficiency"
      , Mn = "switch_complete"
      , Un = "seeked"
      , In = "metadata"
      , On = "playChock"
      , Cn = "ended"
      , Fn = {
        INIT: "init",
        CAN_PLAY: "canplay",
        META_DATA: "metadata",
        PLAYING: "playing",
        ENDED: "ended",
        SEEKED: "seeked",
        PLAY_CHOCK: "playChock"
    }
      , Nn = "https://s3.hitv.com/libs"
      , zn = {
        canvasWidth: 1920,
        canvasHeight: 1080,
        fragmentCacheSize: 104857600,
        loaderMinPerloadTime: 60,
        loaderMaxPerloadTime: 60,
        offsetMaxTime: 3,
        playChockTime: 20,
        inputDataBufferSize: 16777216,
        inputDataBufferAppendSize: 2097152,
        inputDataBufferAppendTime: 5,
        videoFrameBufferCount: 5,
        audioDataBufferSize: 2097152,
        decodeOverload: .8,
        decodeFactor: .005,
        webassembly_decoder_worker_url: Nn + "/wasm-player/1.0.29/wasm-player.js",
        audio_process_url: Nn + "/wasm-player/1.0.29/sound.wasm",
        webassembly_video_worker_url: Nn + "/webassembly/".concat("1.0.3", "/webassembly_video_worker.js"),
        webassembly_audio_worker_url: Nn + "/webassembly/".concat("1.0.3", "/webassembly_audio_worker.js")
    };
    function jn(e, t, r, i) {
        var n, a, o = i || {};
        try {
            for (var s = bn(t), u = s.next(); !u.done; u = s.next()) {
                var h = wn(u.value, 2)
                  , d = h[0];
                switch (h[1]) {
                case "i8":
                    o[d] = e.getInt8(r),
                    r += 1;
                    break;
                case "u8":
                    o[d] = e.getUint8(r),
                    r += 1;
                    break;
                case "i16":
                    o[d] = e.getInt16(r, !0),
                    r += 2;
                    break;
                case "u16":
                    o[d] = e.getUint16(r, !0),
                    r += 2;
                    break;
                case "i32":
                    o[d] = e.getInt32(r, !0),
                    r += 4;
                    break;
                case "u32":
                    o[d] = e.getUint32(r, !0),
                    r += 4;
                    break;
                case "f32":
                    o[d] = e.getFloat32(r, !0),
                    r += 4;
                    break;
                case "f64":
                    o[d] = e.getFloat64(r, !0),
                    r += 8;
                    break;
                case "string":
                    for (var f = e.getUint32(r, !0), c = void 0, l = []; "\0" !== (c = String.fromCharCode(e.getUint8(f++))); )
                        l.push(c);
                    o[d] = l.join(""),
                    r += 4
                }
            }
        } catch (e) {
            n = {
                error: e
            }
        } finally {
            try {
                u && !u.done && (a = s.return) && a.call(s)
            } finally {
                if (n)
                    throw n.error
            }
        }
        return o
    }
    var Gn = [["input_buffer_size", "u32"], ["video_frame_count", "u32"], ["audio_buffer_size", "u32"], ["video_packet_count", "u32"], ["audio_packet_count", "u32"]]
      , Vn = function() {
        function e(e, t) {
            this.mem_view = e,
            this.offset = t,
            this._info = {},
            globalThis.wasm_log = this
        }
        return e.prototype.syncData = function() {
            jn(this.mem_view, Gn, this.offset, this._info)
        }
        ,
        Object.defineProperty(e.prototype, "info", {
            get: function() {
                return this.syncData(),
                this._info
            },
            enumerable: !1,
            configurable: !0
        }),
        e
    }();
    function Hn(e, t) {
        var r = 0;
        return function() {
            for (var i = [], n = 0; n < arguments.length; n++)
                i[n] = arguments[n];
            var a = performance.now();
            a - r > t && (e.apply(this, i),
            r = a)
        }
    }
    function qn(e, t, r) {
        return new Promise(function(i, n) {
            var a = function(r) {
                e.removeEventListener(t, a),
                clearTimeout(o),
                i(r.data)
            }
              , o = setTimeout(function() {
                e.removeEventListener(t, a),
                i("timeout")
            }, r || 3e4);
            e.addEventListener(t, a)
        }
        )
    }
    function Kn(e) {
        return vn(this, void 0, void 0, function() {
            var t, r, i;
            return yn(this, function(n) {
                switch (n.label) {
                case 0:
                    return n.trys.push([0, 3, , 4]),
                    e = "".concat(e, "?t=").concat(Date.now()),
                    [4, fetch(e, {
                        mode: "cors",
                        credentials: "include"
                    })];
                case 1:
                    return [4, n.sent().text()];
                case 2:
                    return t = n.sent(),
                    r = new Blob([t],{
                        type: "application/javascript"
                    }),
                    i = window.URL.createObjectURL(r),
                    [2, new Worker(i)];
                case 3:
                    return n.sent(),
                    [2, null];
                case 4:
                    return [2]
                }
            })
        })
    }
    function Wn(e, t) {
        var r = window
          , i = r.PLAYER_DEBUG = r.PLAYER_DEBUG || {};
        (i.log = i.log || {})[e] = t
    }
    function Yn(e, t) {
        var r = window
          , i = r.PLAYER_DEBUG = r.PLAYER_DEBUG || {}
          , n = i.log = i.log || {};
        (n[e] = n[e] || new $n(200)).add(t)
    }
    var Xn, $n = function() {
        function e(e) {
            this.maxSize = e,
            this.size = 0,
            this.head = null,
            this.tail = null
        }
        return e.prototype.add = function(e) {
            var t = {
                value: e,
                next: null
            };
            null === this.head ? (this.head = t,
            this.tail = t) : (this.tail.next = t,
            this.tail = t),
            this.size++,
            this.size > this.maxSize && this.shift()
        }
        ,
        e.prototype.shift = function() {
            if (null === this.head)
                return null;
            var e = this.head;
            return this.size--,
            this.head === this.tail ? (this.head = this.tail = null,
            e.next = null,
            e.value) : (this.head = this.head.next,
            e.next = null,
            e.value)
        }
        ,
        e
    }(), Zn = function() {
        function e(e, t) {
            this.startPosition = 0,
            this.endPosition = 0,
            this.waitBuffer = [],
            this.HEAPU8 = t,
            this.HEAPU32 = new Uint32Array(t.buffer);
            var r = this.readUint32(e);
            this.bufferSize = r,
            this.start_pointer = e + 4,
            this.end_pointer = e + 8,
            this.size_pointer = e + 12,
            this.buffer_pointer = this.readUint32(e + 16)
        }
        return e.prototype.appendBuffer = function(e) {
            for (this.waitBuffer.push(e); this.waitBuffer.length; ) {
                var t = this.waitBuffer[0];
                if (!this.writeBuffer(t)) {
                    Sn.warn("input buffer is full.can't writeBuffer.");
                    break
                }
                this.waitBuffer.shift()
            }
        }
        ,
        e.prototype.readBuffer = function(e) {
            var t, r = 0;
            if (this.endPosition = this.readUint32(this.end_pointer),
            this.startPosition <= this.endPosition) {
                var i = this.endPosition - this.startPosition;
                if (0 == i)
                    return null;
                var n = i < e ? i : e;
                t = this.HEAPU8.subarray(this.buffer_pointer + this.startPosition, this.buffer_pointer + this.startPosition + n),
                this.startPosition += n,
                r = n
            } else {
                var a = this.bufferSize - this.startPosition;
                if (a > e)
                    t = this.HEAPU8.subarray(this.buffer_pointer + this.startPosition, this.buffer_pointer + this.startPosition + e),
                    this.startPosition += e,
                    r = e;
                else {
                    var o = e - a
                      , s = this.endPosition < o ? this.endPosition : o;
                    r = a + s,
                    (t = new Uint8Array(r)).set(this.HEAPU8.subarray(this.buffer_pointer + this.startPosition, this.buffer_pointer + this.bufferSize)),
                    t.set(this.HEAPU8.subarray(this.buffer_pointer, this.buffer_pointer + o), a),
                    this.startPosition = s,
                    r = a + s
                }
            }
            this.saveUint32(this.startPosition, this.start_pointer);
            var u = this.getSize();
            return this.saveUint32(u - r, this.size_pointer),
            t
        }
        ,
        e.prototype.writeBuffer = function(e) {
            var t = new Int8Array(e);
            if (this.startPosition = this.readUint32(this.start_pointer),
            this.startPosition <= this.endPosition) {
                var r = this.bufferSize - this.endPosition;
                if (r >= t.byteLength)
                    this.HEAPU8.set(t, this.endPosition + this.buffer_pointer),
                    this.endPosition += t.byteLength;
                else {
                    var i = t.byteLength - r;
                    if (i >= this.startPosition)
                        return !1;
                    this.HEAPU8.set(t.subarray(0, r), this.endPosition + this.buffer_pointer),
                    this.HEAPU8.set(t.subarray(r), this.buffer_pointer),
                    this.endPosition = i
                }
            } else {
                if (this.startPosition - this.endPosition <= t.byteLength)
                    return !1;
                this.HEAPU8.set(t, this.endPosition + this.buffer_pointer),
                this.endPosition += t.byteLength
            }
            this.saveUint32(this.endPosition, this.end_pointer);
            var n = this.getSize();
            return this.saveUint32(n + e.byteLength, this.size_pointer),
            !0
        }
        ,
        e.prototype.getSize = function() {
            return this.readUint32(this.size_pointer)
        }
        ,
        e.prototype.clearBuffer = function() {
            this.waitBuffer = [],
            this.startPosition = this.endPosition = 0,
            this.saveUint32(0, this.start_pointer),
            this.saveUint32(0, this.end_pointer),
            this.saveUint32(0, this.size_pointer)
        }
        ,
        e.prototype.saveUint32 = function(e, t) {
            return Atomics.store(this.HEAPU32, t >> 2, e)
        }
        ,
        e.prototype.readUint32 = function(e) {
            return Atomics.load(this.HEAPU32, e >> 2)
        }
        ,
        e
    }(), Qn = function() {
        function e() {
            this._eventMap = {}
        }
        return e.prototype.addEventListener = function(e, t, r) {
            (this._eventMap[e] = this._eventMap[e] || []).push([t, r])
        }
        ,
        e.prototype.removeEventListener = function(e, t) {
            for (var r = this._eventMap[e] = this._eventMap[e] || [], i = r.length - 1; i >= 0; i--)
                if (r[i][0] === t) {
                    r.splice(i, 1);
                    break
                }
        }
        ,
        e.prototype.dispatch = function(e, t) {
            var r, i;
            if (this._eventMap) {
                var n = {
                    type: e,
                    data: t,
                    target: this
                }
                  , a = this._eventMap[e];
                if (a) {
                    a = a.concat();
                    try {
                        for (var o = bn(a), s = o.next(); !s.done; s = o.next()) {
                            var u = wn(s.value, 2)
                              , h = u[0]
                              , d = u[1];
                            d ? h.call(d, n) : h(n)
                        }
                    } catch (e) {
                        r = {
                            error: e
                        }
                    } finally {
                        try {
                            s && !s.done && (i = o.return) && i.call(o)
                        } finally {
                            if (r)
                                throw r.error
                        }
                    }
                }
            } else
                Sn.warn("event object has disposed.can't dispatch ".concat(e))
        }
        ,
        e.prototype.removeEvents = function() {
            this._eventMap = {}
        }
        ,
        e.prototype.dispose = function() {
            this._eventMap = {}
        }
        ,
        e
    }(), Jn = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.bufferTime = 0,
            t.lastAppendFragmentIndex = 0,
            t
        }
        return gn(t, e),
        t.prototype.getBufferTo = function() {
            return this.bufferTime
        }
        ,
        t.prototype.getBufferSize = function() {
            return 0
        }
        ,
        t.prototype.appendFragment = function(e) {
            e && e.buffer && (Sn.log("<decoder> append fragment ", e.sn),
            this.lastAppendFragmentIndex = e.sn,
            this.appendBuffer(e.buffer),
            Wn("fragmentCurrent", e.sn),
            this.bufferTime = e.start + e.duration)
        }
        ,
        t.prototype.appendBuffer = function(e) {}
        ,
        t.prototype.initFragment = function() {}
        ,
        t.prototype.synchronize = function(e) {}
        ,
        t.prototype.inputBufferEmpty = function() {}
        ,
        t.prototype.clear = function(e) {}
        ,
        Object.defineProperty(t.prototype, "isEmpty", {
            get: function() {
                return !1
            },
            enumerable: !1,
            configurable: !0
        }),
        t
    }(Qn), ea = [["fps", "f32"], ["width", "u32"], ["height", "u32"], ["start", "u32"], ["audio_rate", "u32"], ["audio_fmt", "u32"], ["video_codec_name", "string"], ["audio_codec_name", "string"]], ta = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.decodeAverage = 1,
            t.initWorker(),
            t
        }
        return gn(t, e),
        t.prototype.appendBuffer = function(e) {
            this.dataBuffer.appendBuffer(e)
        }
        ,
        t.prototype.initFragment = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.postMessage("init_buffer"),
                        [4, qn(this, In)];
                    case 1:
                        return [2, e.sent()]
                    }
                })
            })
        }
        ,
        t.prototype.inputBufferEmpty = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return [4, qn(this, "input_buffer_empty")];
                    case 1:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.synchronize = function(e) {
            this.dataBuffer.getSize() < 1e5 && this.dispatch(Pn)
        }
        ,
        t.prototype.dispose = function() {
            this.worker.terminate()
        }
        ,
        t.prototype.initWorker = function() {
            return vn(this, void 0, void 0, function() {
                var e, t = this;
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return e = this,
                        [4, Kn(zn.webassembly_decoder_worker_url)];
                    case 1:
                        return e.worker = r.sent(),
                        this.worker.onmessage = function(e) {
                            var r = e.data
                              , i = r.type
                              , n = r.data
                              , a = "on_".concat(i, "_handler");
                            t[a] && t[a](n)
                        }
                        ,
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.getBufferSize = function() {
            var e;
            return (null === (e = this.dataBuffer) || void 0 === e ? void 0 : e.getSize()) || 0
        }
        ,
        t.prototype.seekFlush = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    return this.dataBuffer.clearBuffer(),
                    this.lastAppendFragmentIndex = -1,
                    this.worker.postMessage({
                        type: "seek_flush"
                    }),
                    [2]
                })
            })
        }
        ,
        t.prototype.seekResume = function() {
            this.worker.postMessage({
                type: "seek_resume"
            })
        }
        ,
        t.prototype.clear = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return this.lastAppendFragmentIndex = -1,
                        this.dataBuffer.clearBuffer(),
                        this.worker.postMessage({
                            type: "reset_buffer",
                            data: e
                        }),
                        [4, qn(this, "reset_buffer")];
                    case 1:
                        return t.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.on_input_buffer_empty_handler = function() {
            this.dispatch("input_buffer_empty")
        }
        ,
        t.prototype.on_init_handler = function(e) {
            var t = e.sharedBuffer
              , r = e.inputBuffer;
            this.sharedBuffer = t.buffer,
            this.dataBuffer = new Zn(r,t),
            this.dispatch(En)
        }
        ,
        t.prototype.on_reset_buffer_handler = function() {
            this.dispatch("reset_buffer")
        }
        ,
        t.prototype.on_metadata_handler = function(e) {
            var t = e.metadata
              , r = e.outputBuffer
              , i = e.logInfo
              , n = new DataView(this.sharedBuffer)
              , a = jn(n, ea, t);
            new Vn(n,i);
            var o = a.fps
              , s = a.audio_codec_name
              , u = a.video_codec_name;
            Wn("fps", o),
            Wn("codecInfo", "video:".concat(u, "; audio:").concat(s)),
            this.dispatch(In, {
                metadata: a,
                outputBuffer: r,
                sharedBuffer: this.sharedBuffer
            })
        }
        ,
        t.prototype.on_response_frame_handler = function(e) {
            Yn("decode", e.decodeTime),
            this.decodeAverage = this.decodeAverage * (1 - zn.decodeFactor) + e.decodeTime * zn.decodeFactor,
            N.decodeAverage = this.decodeAverage.toFixed(2)
        }
        ,
        t.prototype.postMessage = function(e, t, r) {
            this.worker.postMessage({
                type: e,
                data: t
            }, r)
        }
        ,
        Object.defineProperty(t.prototype, "isEmpty", {
            get: function() {
                return this.dataBuffer.getSize() <= 0
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.getDecodeAverage = function() {
            return this.decodeAverage
        }
        ,
        t
    }(Jn), ra = function(e) {
        function t() {
            return e.call(this) || this
        }
        return gn(t, e),
        t.prototype.init = function(e) {}
        ,
        t.prototype.play = function() {}
        ,
        t.prototype.pause = function() {}
        ,
        t.prototype.resume = function() {}
        ,
        Object.defineProperty(t.prototype, "speed", {
            set: function(e) {},
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.reset = function() {}
        ,
        t
    }(Qn), ia = function(e) {
        function t(t) {
            var r = e.call(this) || this;
            return r.config = t,
            r
        }
        return gn(t, e),
        t.prototype.init = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    return [2]
                })
            })
        }
        ,
        t.prototype.initPlayer = function(e, t, r) {
            var i = e.sampleRate;
            return void 0 === r && (r = {}),
            vn(this, void 0, void 0, function() {
                var e;
                return yn(this, function(n) {
                    switch (n.label) {
                    case 0:
                        return this.context = new AudioContext({
                            sampleRate: i
                        }),
                        this.context.suspend(),
                        [4, this.context.audioWorklet.addModule(t, {
                            credentials: "include"
                        })];
                    case 1:
                        return n.sent(),
                        this.soundNode = new AudioWorkletNode(this.context,"sound-processor",{
                            outputChannelCount: [2]
                        }),
                        this.soundNode.port.postMessage({
                            type: "video_port",
                            data: Object.assign({
                                port: this.config.videoPort
                            }, r)
                        }, [this.config.videoPort]),
                        this.soundNode.port.onmessage = this.onPortMessage.bind(this),
                        this.gainNode = this.context.createGain(),
                        this.soundNode.connect(this.gainNode),
                        this.gainNode.gain.value = .5,
                        this.gainNode.connect(this.context.destination),
                        [4, fetch(zn.audio_process_url)];
                    case 2:
                        return [4, n.sent().arrayBuffer()];
                    case 3:
                        return e = n.sent(),
                        this.soundNode.port.postMessage({
                            type: "wasm",
                            data: e
                        }, [e]),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.pause = function() {
            var e;
            null === (e = this.context) || void 0 === e || e.suspend()
        }
        ,
        t.prototype.play = function() {
            return this.resume()
        }
        ,
        t.prototype.resume = function() {
            var e = this;
            return new Promise(function(t, r) {
                var i, n = setTimeout(function() {
                    r("can't play")
                }, 500);
                null === (i = e.context) || void 0 === i || i.resume().then(function() {
                    clearTimeout(n),
                    t()
                }).catch(function(e) {
                    clearTimeout(n),
                    r(e)
                })
            }
            )
        }
        ,
        Object.defineProperty(t.prototype, "speed", {
            set: function(e) {
                this.postMessage("speed", e)
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "volume", {
            get: function() {
                return this.gainNode ? this.gainNode.gain.value : .5
            },
            set: function(e) {
                this.gainNode && (this.gainNode.gain.value = e)
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.reset = function() {
            this.soundNode.port.postMessage({
                type: "reset"
            })
        }
        ,
        t.prototype.dispose = function() {
            var e;
            null === (e = this.context) || void 0 === e || e.close()
        }
        ,
        t.prototype.postMessage = function(e, t, r) {
            var i;
            null === (i = this.soundNode) || void 0 === i || i.port.postMessage({
                type: e,
                data: t
            }, r || [])
        }
        ,
        t.prototype.onPortMessage = function(e) {
            var t = e.data
              , r = t.type
              , i = t.data
              , n = "on_".concat(r, "_handler");
            this[n] && this[n].call(this, i)
        }
        ,
        t
    }(ra), na = function(e) {
        function t() {
            return null !== e && e.apply(this, arguments) || this
        }
        return gn(t, e),
        t.prototype.init = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r, i, n;
                return yn(this, function(a) {
                    switch (a.label) {
                    case 0:
                        return t = e.metadata,
                        r = e.outputBuffer,
                        i = e.sharedBuffer,
                        n = t.audio_rate,
                        [4, this.initPlayer({
                            sampleRate: n
                        }, zn.webassembly_audio_worker_url, {
                            outputBuffer: r,
                            sharedBuffer: i
                        })];
                    case 1:
                        return a.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.on_sync_handler = function(e) {
            Wn("audio_time", e.time),
            this.dispatch(Ln, e.time)
        }
        ,
        t.prototype.on_buffer_empty_handler = function() {
            this.dispatch(Dn)
        }
        ,
        t
    }(ia), aa = function(e) {
        function t(t) {
            var r = e.call(this) || this;
            return r.config = t,
            r._fps = 0,
            r.lastTime = 0,
            r._displayObject = document.createElement("canvas"),
            r._displayObject.classList.add("video-canvas"),
            r._displayObject.width = 1920,
            r._displayObject.height = 1080,
            r.createWorker(),
            r
        }
        return gn(t, e),
        Object.defineProperty(t.prototype, "fps", {
            get: function() {
                return this._fps
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "displayObject", {
            get: function() {
                return this._displayObject
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.display = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.postMessage("display"),
                        [4, qn(this, Tn)];
                    case 1:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.play = function() {
            this.postMessage("play")
        }
        ,
        t.prototype.resume = function() {
            this.postMessage("resume")
        }
        ,
        t.prototype.pause = function() {
            this.postMessage("pause")
        }
        ,
        Object.defineProperty(t.prototype, "speed", {
            set: function(e) {
                this.postMessage("speed", e)
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.reset = function() {
            this.postMessage("reset")
        }
        ,
        t.prototype.resize = function(e, t) {}
        ,
        t.prototype.dispose = function() {
            this.worker.terminate()
        }
        ,
        t.prototype.createWorker = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r, i = this;
                return yn(this, function(n) {
                    switch (n.label) {
                    case 0:
                        return r = this,
                        [4, Kn(e)];
                    case 1:
                        return (t = r.worker = n.sent()).onmessage = function(e) {
                            var t = e.data
                              , r = t.type
                              , n = t.data
                              , a = "on_".concat(r, "_handler");
                            i[a] && i[a](n)
                        }
                        ,
                        [2, t]
                    }
                })
            })
        }
        ,
        t.prototype.postMessage = function(e, t, r) {
            this.worker && this.worker.postMessage({
                type: e,
                data: t
            }, r || [])
        }
        ,
        t
    }(ra), oa = function(e) {
        function t(t) {
            var r = e.call(this, t) || this;
            return r.fpsCounter = 0,
            r._prevRenderTime = 0,
            r.displayObject.id = "webassembly_canvas",
            r
        }
        return gn(t, e),
        t.prototype.init = function(e) {
            var t = this.config.audioPort
              , r = e.sharedBuffer
              , i = e.outputBuffer
              , n = e.metadata
              , a = this.displayObject.transferControlToOffscreen();
            this.postMessage("init", {
                canvas: a,
                audioPort: t,
                sharedBuffer: r,
                outputBuffer: i
            }, [t, a]),
            this.postMessage("metadata", {
                metadata: n
            }),
            this._metadata = n,
            this.caculateFps()
        }
        ,
        t.prototype.caculateFps = function() {
            var e = this;
            setInterval(function() {
                e._fps = e.fpsCounter,
                Wn("currentFps", e._fps),
                e.fpsCounter = 0
            }, 1e3)
        }
        ,
        t.prototype.resize = function(e, t) {
            if (this._displayObject && this._metadata) {
                var r = this._displayObject
                  , i = this._metadata
                  , n = i.width / i.height;
                if (e / t > n) {
                    var a = n * t
                      , o = (e - a) / 2;
                    r.style.left = o + "px",
                    r.style.top = "0px",
                    r.style.width = a + "px",
                    r.style.height = t + "px"
                } else {
                    var s = e / n
                      , u = (t - s) / 2;
                    r.style.left = "0px",
                    r.style.top = u + "px",
                    r.style.width = e + "px",
                    r.style.height = s + "px"
                }
            }
        }
        ,
        t.prototype.on_display_handler = function(e) {
            var t = e.video
              , r = performance.now()
              , i = r - this._prevRenderTime;
            i < 1e3 && Yn("render", i),
            Wn("video_time", t),
            this._prevRenderTime = r,
            this.fpsCounter++,
            this.dispatch(Tn, e)
        }
        ,
        t.prototype.createWorker = function(t) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    return [2, e.prototype.createWorker.call(this, zn.webassembly_video_worker_url)]
                })
            })
        }
        ,
        t
    }(aa), sa = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t._currentTime = 0,
            t._pause = !1,
            t.canplay = !1,
            t.switching = !1,
            t.initDecoder(),
            t.initPlayer(),
            t
        }
        return gn(t, e),
        t.prototype.attachLoader = function(e) {
            this.loader = e,
            this._duration = e.playlist.duration
        }
        ,
        t.prototype.dettachLoader = function() {
            var e = this.loader;
            return this.loader = null,
            e
        }
        ,
        t.prototype.resize = function(e, t) {
            this.videoPlayer.resize(e, t)
        }
        ,
        t.prototype.load = function(e, t) {
            return void 0 === t && (t = !1),
            vn(this, void 0, void 0, function() {
                var r, i, n;
                return yn(this, function(a) {
                    switch (a.label) {
                    case 0:
                        return this.loader ? "mp4" !== this.loader.playlist.format ? [3, 2] : [4, this.loader.getHeader()] : (Sn.warn("未添加loader,添加后使用"),
                        [2]);
                    case 1:
                        r = a.sent(),
                        this.decoder.appendBuffer(r),
                        a.label = 2;
                    case 2:
                        return [4, this.loader.loadInitFragment(e, t)];
                    case 3:
                        return i = a.sent(),
                        this.decoder.appendFragment(i),
                        [4, this.decoder.initFragment()];
                    case 4:
                        return n = a.sent(),
                        this._metadata = n,
                        this.videoPlayer.init(n),
                        [4, this.audioPlayer.init(n)];
                    case 5:
                        return a.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.load2 = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    return [2]
                })
            })
        }
        ,
        t.prototype.fragmentComplete = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.dettachLoader().dispose(),
                        [4, qn(this, Dn)];
                    case 1:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.appendVideoElement = function(e) {
            e.contains(this.videoPlayer.displayObject) || e.appendChild(this.videoPlayer.displayObject)
        }
        ,
        t.prototype.getDisplayObject = function() {
            return this.videoPlayer ? this.videoPlayer.displayObject : null
        }
        ,
        t.prototype.play = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.canplay ? [3, 2] : [4, qn(this, kn)];
                    case 1:
                        e.sent(),
                        e.label = 2;
                    case 2:
                        return this._pause = !1,
                        [2, this.resume()]
                    }
                })
            })
        }
        ,
        t.prototype.pause = function() {
            this._pause = !0,
            this.videoPlayer.pause(),
            this.audioPlayer.pause(),
            this.stopHeartBeat()
        }
        ,
        t.prototype.resume = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return e.trys.push([0, 2, , 3]),
                        [4, this.audioPlayer.resume()];
                    case 1:
                        return e.sent(),
                        [3, 3];
                    case 2:
                        return e.sent(),
                        [2, Promise.reject({
                            name: "NotAllowedError"
                        })];
                    case 3:
                        return this.videoPlayer.resume(),
                        this._pause = !1,
                        this.startHeartBeat(),
                        this.dispatch("playing"),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.startHeartBeat = function() {
            this.stopHeartBeat(),
            this.heartBeatId = setInterval(this.heartBeat.bind(this), 500)
        }
        ,
        t.prototype.stopHeartBeat = function() {
            clearInterval(this.heartBeatId)
        }
        ,
        t.prototype.heartBeat = function() {
            return vn(this, void 0, void 0, function() {
                var e, t, r, i, n;
                return yn(this, function(a) {
                    switch (a.label) {
                    case 0:
                        return this.loader ? (this.checkPlayStatus(),
                        (e = this.loader.playlist.getFragmentByTime(this._currentTime)) ? (t = e.sn,
                        r = this.decoder.getBufferSize(),
                        -1 !== this.decoder.lastAppendFragmentIndex && this.decoder.lastAppendFragmentIndex < t + 2 && r < zn.inputDataBufferAppendSize ? (i = this.decoder.lastAppendFragmentIndex + 1,
                        [4, this.loader.getFragment(i)]) : [3, 2]) : [2]) : [2];
                    case 1:
                        (n = a.sent()) && n.sn === i && this.decoder.appendFragment(n),
                        a.label = 2;
                    case 2:
                        return [2]
                    }
                })
            })
        }
        ,
        t.prototype.checkPlayStatus = function() {}
        ,
        t.prototype.seek = function(e) {}
        ,
        Object.defineProperty(t.prototype, "speed", {
            set: function(e) {
                this.videoPlayer.speed = e,
                this.audioPlayer.speed = e
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "volume", {
            get: function() {
                return this.audioPlayer.volume
            },
            set: function(e) {
                this.audioPlayer.volume = e
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "currentTime", {
            get: function() {
                return this._currentTime
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "duration", {
            get: function() {
                return this._duration
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.dispose = function() {
            this.pause();
            var e = this.videoPlayer.displayObject;
            e.parentElement && e.parentElement.removeChild(e)
        }
        ,
        t.prototype.initDecoder = function() {}
        ,
        t.prototype.initPlayer = function() {}
        ,
        t.prototype.synchronize = function() {}
        ,
        t.prototype.onDecoderBufferDeficiency = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    return [2]
                })
            })
        }
        ,
        t
    }(Qn), ua = function(e) {
        function t() {
            var t = null !== e && e.apply(this, arguments) || this;
            return t.videoTime = 0,
            t.ready = !1,
            t.playChock = 0,
            t
        }
        return gn(t, e),
        t.prototype.initDecoder = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.decoder = new ta,
                        this.decoder.addEventListener(Pn, this.onDecoderBufferDeficiency, this),
                        this.decoder.addEventListener(In, this.onMetadata, this),
                        [4, qn(this.decoder, En)];
                    case 1:
                        return e.sent(),
                        this.ready = !0,
                        this.dispatch(En),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.onMetadata = function(e) {
            this.dispatch(In, e.data.metadata)
        }
        ,
        t.prototype.load = function(t, r) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return this.ready ? [3, 2] : [4, qn(this, En)];
                    case 1:
                        i.sent(),
                        i.label = 2;
                    case 2:
                        return [4, e.prototype.load.call(this, t, r)];
                    case 3:
                        return i.sent(),
                        [4, this.videoPlayer.display()];
                    case 4:
                        return i.sent(),
                        this.canplay = !0,
                        this.dispatch(kn),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.load2 = function() {
            return vn(this, void 0, void 0, function() {
                var e, t, r, i, n, a, o, s;
                return yn(this, function(u) {
                    switch (u.label) {
                    case 0:
                        return this.loader.playlist.getFragmentByTime(this.currentTime).sn >= this.loader.playlist.fragments.length ? (Sn.warn("无法切换，当前已经是最后一个分片"),
                        [2]) : (this.switching = !0,
                        this.stopHeartBeat(),
                        e = this.decoder.lastAppendFragmentIndex,
                        t = this.decoder.inputBufferEmpty(),
                        r = this.loader.getHeader(),
                        i = this.loader.loadNextInitFragment(this.currentTime),
                        [4, t]);
                    case 1:
                        return u.sent(),
                        [4, r];
                    case 2:
                        return n = u.sent(),
                        [4, i];
                    case 3:
                        return u.sent(),
                        [4, this.decoder.clear(!1)];
                    case 4:
                        return u.sent(),
                        "mp4" === this.loader.playlist.format && this.decoder.appendBuffer(n),
                        a = Math.min(e + 1, this.loader.playlist.fragments.length - 1),
                        [4, this.loader.getFragment(a)];
                    case 5:
                        return !(o = u.sent()) || o.buffer,
                        this.decoder.appendFragment(o),
                        [4, this.decoder.initFragment()];
                    case 6:
                        return s = u.sent(),
                        this._metadata = s,
                        this.switching = !1,
                        this.startHeartBeat(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.initPlayer = function() {
            var e = new MessageChannel;
            this.videoPlayer = new oa({
                audioPort: e.port1
            }),
            this.audioPlayer = new na({
                videoPort: e.port2
            }),
            this.videoPlayer.addEventListener(Tn, this.onDisplay, this),
            this.audioPlayer.addEventListener(Dn, this.onAudioEmpty, this),
            this.audioPlayer.addEventListener(Ln, this.onAudioSync, this)
        }
        ,
        t.prototype.seek = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return Sn.log("seek start:", e),
                        this._currentTime = e,
                        this.switching = !0,
                        [4, this.heavySeek(e)];
                    case 1:
                        return t.sent(),
                        Sn.log("seek success"),
                        this.switching = !1,
                        this.dispatch(Un),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.heavySeek = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return [4, this.reset()];
                    case 1:
                        return i.sent(),
                        "mp4" !== this.loader.playlist.format ? [3, 3] : [4, this.loader.getHeader()];
                    case 2:
                        t = i.sent(),
                        this.decoder.appendBuffer(t),
                        i.label = 3;
                    case 3:
                        return [4, this.loader.loadInitFragment(e)];
                    case 4:
                        return r = i.sent(),
                        this.decoder.appendFragment(r),
                        [4, this.decoder.initFragment()];
                    case 5:
                        return i.sent(),
                        [4, this.videoPlayer.display()];
                    case 6:
                        return i.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.quickSeek = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r, i;
                return yn(this, function(n) {
                    switch (n.label) {
                    case 0:
                        return this.loader.reset(),
                        this.audioPlayer.reset(),
                        this.videoPlayer.reset(),
                        t = this.decoder.seekFlush(e),
                        r = this.loader.loadInitFragment(e),
                        [4, t];
                    case 1:
                        return n.sent(),
                        [4, r];
                    case 2:
                        return i = n.sent(),
                        this.decoder.appendFragment(i),
                        this.decoder.seekResume(),
                        [4, this.videoPlayer.display()];
                    case 3:
                        return n.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.reset = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return this.loader.reset(),
                        this.audioPlayer.reset(),
                        this.videoPlayer.reset(),
                        [4, this.decoder.clear(!0)];
                    case 1:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.onDisplay = function(e) {
            var t = e.data
              , r = t.video;
            t.audio,
            this.videoTime = r
        }
        ,
        t.prototype.onAudioSync = function(e) {
            var t, r = e.data;
            this._pause || (this._currentTime = r,
            null === (t = this.loader) || void 0 === t || t.synchronize(r),
            this.switching || this.decoder.synchronize(r))
        }
        ,
        t.prototype.checkPlayStatus = function() {
            this.videoPlayer.fps < this._metadata.metadata.fps * this.speed * .8 && this.playChock++;
            var e = this._currentTime - this.videoTime;
            Math.abs(e) > 3 && this.playChock++,
            N.syncOffset = e,
            this.playChock > zn.playChockTime && (this.playChock = 0,
            this.dispatch(On))
        }
        ,
        t.prototype.onAudioEmpty = function(e) {
            this.dispatch(Dn),
            this._duration - this._currentTime < 2 && (this.stopHeartBeat(),
            this.pause(),
            this.dispatch(Cn))
        }
        ,
        t.prototype.dispose = function() {
            e.prototype.dispose.call(this),
            this.decoder && (this.decoder.dispose(),
            this.decoder.removeEventListener(Pn, this.onDecoderBufferDeficiency),
            this.decoder.removeEventListener(In, this.onMetadata)),
            this.videoPlayer && (this.videoPlayer.dispose(),
            this.videoPlayer.removeEventListener(Tn, this.onDisplay)),
            this.audioPlayer && (this.audioPlayer.dispose(),
            this.audioPlayer.removeEventListener(Ln, this.onAudioSync),
            this.audioPlayer.removeEventListener(Pn, this.onAudioEmpty))
        }
        ,
        t
    }(sa), ha = function() {
        function e(e) {
            this.data = e,
            this.bytesAvailable = e.byteLength,
            this.word = 0,
            this.bitsAvailable = 0
        }
        return e.prototype.loadWord = function() {
            var e = this.data
              , t = this.bytesAvailable
              , r = e.byteLength - t
              , i = new Uint8Array(4)
              , n = Math.min(4, t);
            if (0 === n)
                throw new Error("no bytes available");
            i.set(e.subarray(r, r + n)),
            this.word = new DataView(i.buffer).getUint32(0),
            this.bitsAvailable = 8 * n,
            this.bytesAvailable -= n
        }
        ,
        e.prototype.skipBits = function(e) {
            var t;
            this.bitsAvailable > e ? (this.word <<= e,
            this.bitsAvailable -= e) : (e -= this.bitsAvailable,
            e -= (t = e >> 3) >> 3,
            this.bytesAvailable -= t,
            this.loadWord(),
            this.word <<= e,
            this.bitsAvailable -= e)
        }
        ,
        e.prototype.readBits = function(e) {
            var t = Math.min(this.bitsAvailable, e)
              , r = this.word >>> 32 - t;
            return this.bitsAvailable -= t,
            this.bitsAvailable > 0 ? this.word <<= t : this.bytesAvailable > 0 && this.loadWord(),
            (t = e - t) > 0 && this.bitsAvailable ? r << t | this.readBits(t) : r
        }
        ,
        e.prototype.skipLZ = function() {
            var e;
            for (e = 0; e < this.bitsAvailable; ++e)
                if (0 != (this.word & 2147483648 >>> e))
                    return this.word <<= e,
                    this.bitsAvailable -= e,
                    e;
            return this.loadWord(),
            e + this.skipLZ()
        }
        ,
        e.prototype.skipUEG = function() {
            this.skipBits(1 + this.skipLZ())
        }
        ,
        e.prototype.skipEG = function() {
            this.skipBits(1 + this.skipLZ())
        }
        ,
        e.prototype.readUEG = function() {
            var e = this.skipLZ();
            return this.readBits(e + 1) - 1
        }
        ,
        e.prototype.readEG = function() {
            var e = this.readUEG();
            return 1 & e ? 1 + e >>> 1 : -1 * (e >>> 1)
        }
        ,
        e.prototype.readBoolean = function() {
            return 1 === this.readBits(1)
        }
        ,
        e.prototype.readUByte = function() {
            return this.readBits(8)
        }
        ,
        e.prototype.readUShort = function() {
            return this.readBits(16)
        }
        ,
        e.prototype.readUInt = function() {
            return this.readBits(32)
        }
        ,
        e.prototype.skipScalingList = function(e) {
            var t, r = 8, i = 8;
            for (t = 0; t < e; t++)
                0 !== i && (i = (r + this.readEG() + 256) % 256),
                r = 0 === i ? r : i
        }
        ,
        e.prototype.readSPS = function() {
            var e, t, r, i, n, a, o, s = 0, u = 0, h = 0, d = 0, f = this.readUByte.bind(this), c = this.readBits.bind(this), l = this.readUEG.bind(this), p = this.readBoolean.bind(this), m = this.skipBits.bind(this), g = this.skipEG.bind(this), v = this.skipUEG.bind(this), y = this.skipScalingList.bind(this);
            if (f(),
            e = f(),
            c(5),
            m(3),
            f(),
            v(),
            100 === e || 110 === e || 122 === e || 244 === e || 44 === e || 83 === e || 86 === e || 118 === e || 128 === e) {
                var b = l();
                if (3 === b && m(1),
                v(),
                v(),
                m(1),
                p())
                    for (a = 3 !== b ? 8 : 12,
                    o = 0; o < a; o++)
                        p() && y(o < 6 ? 16 : 64)
            }
            v();
            var w = l();
            if (0 === w)
                l();
            else if (1 === w)
                for (m(1),
                g(),
                g(),
                t = l(),
                o = 0; o < t; o++)
                    g();
            v(),
            m(1),
            r = l(),
            i = l(),
            0 === (n = c(1)) && m(1),
            m(1),
            p() && (s = l(),
            u = l(),
            h = l(),
            d = l());
            var _ = [1, 1];
            if (p() && p())
                switch (f()) {
                case 1:
                    _ = [1, 1];
                    break;
                case 2:
                    _ = [12, 11];
                    break;
                case 3:
                    _ = [10, 11];
                    break;
                case 4:
                    _ = [16, 11];
                    break;
                case 5:
                    _ = [40, 33];
                    break;
                case 6:
                    _ = [24, 11];
                    break;
                case 7:
                    _ = [20, 11];
                    break;
                case 8:
                    _ = [32, 11];
                    break;
                case 9:
                    _ = [80, 33];
                    break;
                case 10:
                    _ = [18, 11];
                    break;
                case 11:
                    _ = [15, 11];
                    break;
                case 12:
                    _ = [64, 33];
                    break;
                case 13:
                    _ = [160, 99];
                    break;
                case 14:
                    _ = [4, 3];
                    break;
                case 15:
                    _ = [3, 2];
                    break;
                case 16:
                    _ = [2, 1];
                    break;
                case 255:
                    _ = [f() << 8 | f(), f() << 8 | f()]
                }
            return {
                width: Math.ceil(16 * (r + 1) - 2 * s - 2 * u),
                height: (2 - n) * (i + 1) * 16 - (n ? 2 : 4) * (h + d),
                pixelRatio: _
            }
        }
        ,
        e.prototype.readSliceType = function() {
            return this.readUByte(),
            this.readUEG(),
            this.readUEG()
        }
        ,
        e
    }();
    !function(e) {
        e[e.StartCode = 0] = "StartCode",
        e[e.NALuType = 1] = "NALuType",
        e[e.Parse = 2] = "Parse"
    }(Xn || (Xn = {}));
    var da = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.videoTrack = new ca,
            t.audioTrack = new ca,
            t.videoConfig = {},
            t.audioConfig = {},
            t
        }
        return gn(t, e),
        t.prototype.getConfig = function() {
            return {
                video: this.videoConfig,
                audio: this.audioConfig
            }
        }
        ,
        t.prototype.appendBuffer = function(e) {
            for (var t, r = e.byteLength, i = new Uint8Array(e), n = new la, a = {
                video: -1,
                audio: -1,
                id3: -1,
                isAAC: !1
            }, o = [], s = 0; s < r; s += 188)
                if (t = s,
                71 === i[s]) {
                    if (t += n.parserHeader(i, s),
                    n.adaption_field_control > 1 && (t = s + i[s + 4] + 5) === s + 188)
                        continue;
                    switch (n.pid) {
                    case a.video:
                        if (n.payload_unit_start_indicator)
                            if (h = this.videoTrack.parsePES()) {
                                this.videoConfig.startTime || (this.videoConfig.startTime = h.pts);
                                var u = this.parseAVCNALu(h.data, this.videoTrack);
                                o.push({
                                    type: "video",
                                    data: h.data,
                                    pts: h.pts,
                                    dts: h.dts,
                                    key: u
                                })
                            }
                        this.videoTrack.append(i.subarray(t, s + 188));
                        break;
                    case a.audio:
                        var h;
                        if (n.payload_unit_start_indicator)
                            (h = this.audioTrack.parsePES()) && !this.audioConfig.sampleRate && (this.audioConfig.sampleRate = this.parseSampleRate(h.data)),
                            h && o.push({
                                type: "audio",
                                data: h.data,
                                pts: h.pts,
                                dts: h.dts,
                                key: !0
                            });
                        this.audioTrack.append(i.subarray(t, s + 188));
                        break;
                    case a.id3:
                    case fa.text:
                        break;
                    case this.pmtId:
                        n.payload_unit_start_indicator && (t += i[t] + 1),
                        a = this.parsePMT(i, t),
                        this.audioConfig.isACC = a.isAAC;
                        break;
                    case 0:
                        n.payload_unit_start_indicator && (t += i[t] + 1),
                        this.pmtId = this.parsePAT(i, t)
                    }
                }
            var d = this.videoTrack.parsePES();
            if (d) {
                u = this.parseAVCNALu(d.data, this.videoTrack);
                o.push({
                    type: "video",
                    data: d.data,
                    pts: d.pts,
                    dts: d.dts,
                    key: u
                })
            }
            var f = this.audioTrack.parsePES();
            return f && o.push({
                type: "audio",
                data: f.data,
                pts: f.pts,
                dts: f.dts,
                key: !0
            }),
            o
        }
        ,
        t.prototype.parseSampleRate = function(e) {
            var t = 0;
            switch ((60 & e[2]) >> 2) {
            case 0:
                t = 96e3;
                break;
            case 1:
                t = 88200;
                break;
            case 2:
                t = 64e3;
                break;
            case 3:
                t = 48e3;
                break;
            case 4:
                t = 44100;
                break;
            case 5:
                t = 32e3;
                break;
            case 6:
                t = 24e3;
                break;
            case 7:
                t = 22050;
                break;
            case 8:
                t = 16e3;
                break;
            case 9:
                t = 12e3;
                break;
            case 10:
                t = 11025;
                break;
            case 11:
                t = 8e3;
                break;
            default:
                t = 0
            }
            return t
        }
        ,
        t.prototype.parsePAT = function(e, t) {
            return (31 & e[t + 10]) << 8 | e[t + 11]
        }
        ,
        t.prototype.parsePMT = function(e, t) {
            var r = t + ((15 & e[t + 1]) << 8 | e[t + 2]) - 1;
            t += 12 + ((15 & e[t + 10]) << 8 | e[t + 11]);
            for (var i, n = -1, a = -1, o = -1; t < r; ) {
                switch (i = (31 & e[t + 1]) << 8 | e[t + 2],
                e[t]) {
                case 207:
                case 15:
                    -1 === n && (n = i);
                    break;
                case 21:
                    -1 === a && (a = i);
                    break;
                case 219:
                case 27:
                    -1 === o && (o = i);
                    break;
                case 3:
                case 4:
                    -1 === n && (n = i)
                }
                t += 5 + ((15 & e[t + 3]) << 8 | e[t + 4])
            }
            return {
                audio: n,
                video: o,
                id3: a,
                isAAC: !0
            }
        }
        ,
        t.prototype.splitNalu = function(e) {
            var t = e.length;
            Xn.StartCode;
            for (var r = 0, i = -1, n = 0, a = [], o = 0; o < t; o++)
                0 === e[o] ? r++ : 1 === e[o] ? (2 !== r && 3 != r || (-1 !== i && a.push({
                    data: e.subarray(i, o - r),
                    type: n
                }),
                n = 31 & e[++o],
                i = o),
                r = 0) : r = 0;
            return a.push({
                data: e.subarray(i),
                type: n
            }),
            a
        }
        ,
        t.prototype.parseAVCNALu = function(e, t) {
            var r, i, n = this.splitNalu(e), a = !1;
            try {
                for (var o = bn(n), s = o.next(); !s.done; s = o.next()) {
                    var u = s.value;
                    switch (u.type) {
                    case 1:
                        if (this.videoConfig.sps && u.data.length > 4) {
                            var h = new ha(u.data).readSliceType();
                            2 !== h && 4 !== h && 7 !== h && 9 !== h || (a = !0)
                        }
                        break;
                    case 5:
                        a = !0;
                        break;
                    case 7:
                        if (!this.videoConfig.sps) {
                            var d = u.data
                              , f = new ha(d).readSPS();
                            this.videoConfig.width = f.width,
                            this.videoConfig.height = f.height,
                            this.videoConfig.pixelRatio = f.pixelRatio,
                            this.videoConfig.sps = d;
                            for (var c = "avc1.", l = 1; l <= 3; l++) {
                                var p = d[l].toString(16);
                                p.length < 2 && (p = "0" + p),
                                c += p
                            }
                            this.videoConfig.codec = c
                        }
                        break;
                    case 8:
                        this.videoConfig.pps || (this.videoConfig.pps = u.data)
                    }
                }
            } catch (e) {
                r = {
                    error: e
                }
            } finally {
                try {
                    s && !s.done && (i = o.return) && i.call(o)
                } finally {
                    if (r)
                        throw r.error
                }
            }
            return a
        }
        ,
        t
    }(Qn)
      , fa = {
        video: 1,
        audio: 2,
        id3: 3,
        text: 4
    }
      , ca = function() {
        function e() {
            this.pesRawData = [],
            this.size = 0
        }
        return e.prototype.clear = function() {
            this.pesRawData = [],
            this.size = 0
        }
        ,
        e.prototype.append = function(e) {
            this.pesRawData.push(e),
            this.size += e.length
        }
        ,
        e.prototype.parsePES = function() {
            var e, t;
            if (0 === this.pesRawData.length)
                return null;
            for (; this.pesRawData[0].length < 19 && this.pesRawData.length > 1; ) {
                var r = new Uint8Array(this.pesRawData[0].length + this.pesRawData[1].length);
                r.set(this.pesRawData[0]),
                r.set(this.pesRawData[1], this.pesRawData[0].length),
                this.pesRawData.shift(),
                this.pesRawData[0] = r
            }
            var i = this.pesRawData[0];
            if (1 !== (i[0] << 16 | i[1] << 8 | i[2]))
                return this.clear(),
                null;
            i[3];
            var n = i[4] << 8 | i[5];
            if (n > this.size - 6)
                return this.clear(),
                null;
            var a = i[7]
              , o = void 0
              , s = void 0;
            192 & a && (o = 536870912 * (14 & i[9]) + 4194304 * (255 & i[10]) + 16384 * (254 & i[11]) + 128 * (255 & i[12]) + (254 & i[13]) / 2) > 4294967295 && (o -= 8589934592),
            64 & a && ((s = 536870912 * (14 & i[14]) + 4194304 * (255 & i[15]) + 16384 * (254 & i[16]) + 128 * (255 & i[17]) + (254 & i[18]) / 2) > 4294967295 && (s -= 8589934592),
            o - s > 54e5 && (o = s));
            var u = i[8]
              , h = u + 9;
            if (this.size < h)
                return this.clear(),
                null;
            this.size -= h;
            var d = 0
              , f = new Uint8Array(this.size);
            try {
                for (var c = bn(this.pesRawData), l = c.next(); !l.done; l = c.next()) {
                    var p = l.value
                      , m = p.length;
                    if (h) {
                        var g = p.subarray(h);
                        f.set(g),
                        h = 0,
                        d += g.length
                    } else
                        f.set(p, d),
                        d += m
                }
            } catch (t) {
                e = {
                    error: t
                }
            } finally {
                try {
                    l && !l.done && (t = c.return) && t.call(c)
                } finally {
                    if (e)
                        throw e.error
                }
            }
            return this.clear(),
            {
                data: f,
                pts: o,
                dts: s || o,
                length: Math.max(0, n - u - 3)
            }
        }
        ,
        e
    }()
      , la = function() {
        function e() {}
        return e.prototype.parserHeader = function(e, t) {
            return this.transport_error_indicator = e[t + 1] >> 7 & 1,
            this.payload_unit_start_indicator = e[t + 1] >> 6 & 1,
            this.transport_priority = e[t + 1] >> 5 & 1,
            this.pid = ((31 & e[t + 1]) << 8) + e[t + 2],
            this.transport_scrambling_control = e[t + 3] >> 6 & 3,
            this.adaption_field_control = e[t + 3] >> 4 & 3,
            this.continuity_counter = 15 & e[t + 3],
            4
        }
        ,
        e
    }()
      , pa = function(e) {
        function t() {
            var t = e.call(this) || this;
            return t.demuxer = new da,
            t.audioDecoder = new AudioDecoder({
                output: t.onAudioFrame.bind(t),
                error: t.onAudioError.bind(t)
            }),
            t.videoDecoder = new VideoDecoder({
                output: t.onVideoFrame.bind(t),
                error: t.onVideoError.bind(t)
            }),
            t.videoSampleBuffer = [],
            t.audioSampleBuffer = [],
            t
        }
        return gn(t, e),
        t.prototype.appendBuffer = function(e) {
            var t, r, i = this.demuxer.appendBuffer(e), n = [], a = [];
            try {
                for (var o = bn(i), s = o.next(); !s.done; s = o.next()) {
                    var u = s.value;
                    "video" === u.type ? n.push(u) : "audio" === u.type && a.push(u)
                }
            } catch (e) {
                t = {
                    error: e
                }
            } finally {
                try {
                    s && !s.done && (r = o.return) && r.call(o)
                } finally {
                    if (t)
                        throw t.error
                }
            }
            this.videoSampleBuffer = n.reverse().concat(this.videoSampleBuffer),
            this.audioSampleBuffer = a.reverse().concat(this.audioSampleBuffer)
        }
        ,
        t.prototype.initFragment = function() {
            return vn(this, void 0, void 0, function() {
                var e, t, r;
                return yn(this, function(i) {
                    return e = this.metadata = this.demuxer.getConfig(),
                    t = e.video,
                    r = e.audio,
                    this.videoDecodeConfig = {
                        codec: t.codec,
                        codedWidth: t.width,
                        codedHeight: t.height
                    },
                    this.videoDecoder.configure(this.videoDecodeConfig),
                    this.audioDecodeConfig = {
                        codec: "mp4a.40.2",
                        numberOfChannels: 2,
                        sampleRate: r.sampleRate
                    },
                    this.audioDecoder.configure(this.audioDecodeConfig),
                    [2, this.metadata]
                })
            })
        }
        ,
        t.prototype.decodeVideo = function() {
            for (var e = Math.min(this.videoSampleBuffer.length, 5); e; ) {
                var t = this.videoSampleBuffer.pop()
                  , r = new EncodedVideoChunk({
                    data: t.data,
                    timestamp: this.convertTime(t.pts),
                    type: t.key ? "key" : "delta"
                });
                this.videoDecoder.decode(r),
                e--
            }
        }
        ,
        t.prototype.decodeAudio = function() {
            for (var e = Math.min(this.audioSampleBuffer.length, 5); e; ) {
                var t = this.audioSampleBuffer.pop()
                  , r = new EncodedAudioChunk({
                    data: t.data,
                    timestamp: this.convertTime(t.pts),
                    type: "key"
                });
                this.audioDecoder.decode(r),
                e--
            }
        }
        ,
        t.prototype.inputBufferEmpty = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return [4, qn(this, Pn)];
                    case 1:
                        for (e.sent(); this.videoSampleBuffer.length; )
                            this.decodeVideo();
                        return [4, this.videoDecoder.flush()];
                    case 2:
                        for (e.sent(); this.audioSampleBuffer.length; )
                            this.decodeAudio();
                        return [4, this.audioDecoder.flush()];
                    case 3:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.onVideoFrame = function(e) {
            this.dispatch(An, e)
        }
        ,
        t.prototype.onVideoError = function(e) {
            22 === e.code && (this.isClosed = !0,
            this.dispatch(xn))
        }
        ,
        t.prototype.onAudioFrame = function(e) {
            this.dispatch(Rn, e)
        }
        ,
        t.prototype.onAudioError = function(e) {
            22 === e.code && (this.isClosed = !0,
            this.dispatch(xn))
        }
        ,
        t.prototype.convertTime = function(e) {
            var t = this.metadata.video.startTime;
            return Math.floor(100 * (e - t) / 9)
        }
        ,
        t.prototype.synchronize = function(e) {
            (this.videoSampleBuffer.length < 10 || this.audioSampleBuffer.length < 10) && this.dispatch(Pn)
        }
        ,
        t.prototype.clear = function() {
            this.videoSampleBuffer = [],
            this.audioSampleBuffer = [],
            "configured" === this.videoDecoder.state && this.videoDecoder.close(),
            "configured" == this.audioDecoder.state && this.audioDecoder.close(),
            this.audioDecoder = new AudioDecoder({
                output: this.onAudioFrame.bind(this),
                error: this.onAudioError.bind(this)
            }),
            this.videoDecoder = new VideoDecoder({
                output: this.onVideoFrame.bind(this),
                error: this.onVideoError.bind(this)
            }),
            this.videoDecoder.configure(this.videoDecodeConfig),
            this.audioDecoder.configure(this.audioDecodeConfig),
            this.isClosed = !1
        }
        ,
        t.prototype.dispose = function() {
            "configured" === this.videoDecoder.state && this.videoDecoder.close(),
            "configured" == this.audioDecoder.state && this.audioDecoder.close()
        }
        ,
        t
    }(Jn)
      , ma = function(e) {
        function t(t) {
            var r = e.call(this, t) || this;
            return r.on_less_buffer_handler = Hn(r.on_less_buffer_handler, 50).bind(r),
            r
        }
        return gn(t, e),
        t.prototype.init = function(e) {
            return vn(this, void 0, void 0, function() {
                var t;
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return t = e.audio,
                        [4, this.initPlayer({
                            sampleRate: t.sampleRate
                        })];
                    case 1:
                        return r.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.addFrame = function(e) {
            var t = new ArrayBuffer(4 * e.numberOfFrames)
              , r = new ArrayBuffer(4 * e.numberOfFrames);
            e.copyTo(t, {
                planeIndex: 0,
                frameOffset: 0,
                frameCount: e.numberOfFrames
            }),
            e.copyTo(r, {
                planeIndex: 1,
                frameOffset: 0,
                frameCount: e.numberOfFrames
            });
            var i = {
                duration: e.duration,
                format: e.format,
                numberOfChannels: e.numberOfChannels,
                numberOfFrames: e.numberOfFrames,
                sampleRate: e.sampleRate,
                timestamp: e.timestamp
            };
            this.postMessage("frame", {
                data: i,
                left: t,
                right: r
            }, [t, r]),
            e.close()
        }
        ,
        t.prototype.clear = function() {
            this.postMessage("clear")
        }
        ,
        t.prototype.initPlayer = function(t, r) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return [4, e.prototype.initPlayer.call(this, t, "../lib/webcodecs_audio_worker.js")];
                    case 1:
                        return r.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.on_less_buffer_handler = function() {
            this.dispatch(Dn)
        }
        ,
        t.prototype.on_sync_handler = function(e) {
            this.dispatch(Ln, e)
        }
        ,
        t
    }(ia)
      , ga = function(e) {
        function t(t) {
            var r = e.call(this, t) || this;
            return r.displayObject.id = "webcodecs_canvas",
            r
        }
        return gn(t, e),
        t.prototype.init = function(e) {
            this.postMessage("metadata", e.video)
        }
        ,
        t.prototype.addFrame = function(e) {
            this.postMessage("frame", e, [e])
        }
        ,
        t.prototype.clear = function() {
            this.postMessage("clear")
        }
        ,
        t.prototype.createWorker = function() {
            return vn(this, void 0, void 0, function() {
                var t, r, i, n;
                return yn(this, function(a) {
                    switch (a.label) {
                    case 0:
                        return [4, e.prototype.createWorker.call(this, "../lib/webcodecs_video_worker.js")];
                    case 1:
                        return t = a.sent(),
                        r = this.config.audioPort,
                        i = this.displayObject.transferControlToOffscreen(),
                        n = Object.assign({
                            canvas: i
                        }, this.config),
                        this.postMessage("init", n, [i, r]),
                        [2, t]
                    }
                })
            })
        }
        ,
        t
    }(aa)
      , va = function(e) {
        function t() {
            return e.call(this) || this
        }
        return gn(t, e),
        t.prototype.load = function(t) {
            return vn(this, void 0, void 0, function() {
                var r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return r = this.decoder,
                        [4, e.prototype.load.call(this, t)];
                    case 1:
                        return i.sent(),
                        r.decodeVideo(),
                        [4, qn(r, An)];
                    case 2:
                        return i.sent(),
                        this.videoPlayer.display(),
                        [4, qn(this.videoPlayer, Tn)];
                    case 3:
                        return i.sent(),
                        this.dispatch(kn),
                        r.decodeAudio(),
                        this.canplay = !0,
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.load2 = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return [4, this.decoder.inputBufferEmpty()];
                    case 1:
                        return e.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.seek = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return this.pause(),
                        this.decoder.clear(),
                        this.audioPlayer.clear(),
                        this.videoPlayer.clear(),
                        "mp4" !== this.loader.playlist.format ? [3, 2] : [4, this.loader.getHeader()];
                    case 1:
                        t = i.sent(),
                        this.decoder.appendBuffer(t),
                        i.label = 2;
                    case 2:
                        return [4, this.loader.loadInitFragment(e)];
                    case 3:
                        return r = i.sent(),
                        this.decoder.appendFragment(r),
                        this.decoder.decodeVideo(),
                        this.decoder.decodeAudio(),
                        this.resume(),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.resume = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    return this.decoder.isClosed ? this.seek(this.currentTime) : e.prototype.resume.call(this),
                    [2]
                })
            })
        }
        ,
        t.prototype.initDecoder = function() {
            this.decoder = new pa,
            this.decoder.addEventListener(An, this.onVideoFrame, this),
            this.decoder.addEventListener(Rn, this.onAudioFrame, this),
            this.decoder.addEventListener(Pn, this.onDecoderBufferDeficiency, this),
            this.decoder.addEventListener(In, this.onMetadata, this)
        }
        ,
        t.prototype.onMetadata = function(e) {
            this.dispatch(In, e.data)
        }
        ,
        t.prototype.initPlayer = function() {
            var e = new MessageChannel;
            this.videoPlayer = new ga({
                audioPort: e.port1
            }),
            this.audioPlayer = new ma({
                videoPort: e.port2
            }),
            this.videoPlayer.addEventListener(Tn, this.onDisplay, this),
            this.audioPlayer.addEventListener(Dn, this.onAudioEmpty, this),
            this.audioPlayer.addEventListener(Ln, this.onAudioSync, this)
        }
        ,
        t.prototype.onVideoFrame = function(e) {
            var t = e.data;
            this.videoPlayer.addFrame(t)
        }
        ,
        t.prototype.onAudioFrame = function(e) {
            var t = e.data;
            this.audioPlayer.addFrame(t)
        }
        ,
        t.prototype.onDisplay = function(e) {
            return vn(this, void 0, void 0, function() {
                var t;
                return yn(this, function(r) {
                    return (t = e.data) < 5 && this.decoder.decodeVideo(),
                    0 === t && this.dispatch(Dn),
                    [2]
                })
            })
        }
        ,
        t.prototype.onAudioEmpty = function() {
            this.decoder.decodeAudio()
        }
        ,
        t.prototype.onAudioSync = function(e) {
            var t, r = e.data;
            null === (t = this.loader) || void 0 === t || t.synchronize(r),
            this.decoder.synchronize(r),
            this._currentTime = r
        }
        ,
        t.prototype.dispose = function() {
            e.prototype.dispose.call(this),
            this.decoder && (this.decoder.dispose(),
            this.decoder.removeEventListener(An, this.onVideoFrame),
            this.decoder.removeEventListener(Rn, this.onAudioFrame),
            this.decoder.removeEventListener(Pn, this.onDecoderBufferDeficiency),
            this.decoder.removeEventListener(In, this.onMetadata)),
            this.videoPlayer && (this.videoPlayer.dispose(),
            this.videoPlayer.removeEventListener(Tn, this.onDisplay)),
            this.audioPlayer && (this.audioPlayer.dispose(),
            this.audioPlayer.removeEventListener(Ln, this.onAudioSync),
            this.audioPlayer.removeEventListener(Pn, this.onAudioEmpty))
        }
        ,
        t
    }(sa)
      , ya = {
        method: "get",
        timeout: 5e3,
        retry: 2,
        type: "text"
    }
      , ba = new Set;
    function wa(e, t) {
        return vn(this, void 0, void 0, function() {
            var r, i, n;
            return yn(this, function(a) {
                switch (a.label) {
                case 0:
                    t = Object.assign({}, ya, t),
                    r = function(r) {
                        var i, n, a, o, s, u, h, d, f, c, l, p, m, g, v, y, b, w;
                        return yn(this, function(r) {
                            switch (r.label) {
                            case 0:
                                i = new AbortController,
                                n = fetch(e, {
                                    method: t.method,
                                    signal: i.signal
                                }),
                                ba.add(i),
                                a = new Promise(function(e, r) {
                                    setTimeout(function() {
                                        i.abort(),
                                        ba.delete(i),
                                        r("time out")
                                    }, t.timeout)
                                }
                                ),
                                r.label = 1;
                            case 1:
                                return r.trys.push([1, 9, , 10]),
                                o = null,
                                [4, Promise.race([n, a])];
                            case 2:
                                if (s = r.sent(),
                                "arrayBuffer" !== t.type)
                                    return [3, 6];
                                u = s.body.getReader(),
                                h = [],
                                d = 0,
                                r.label = 3;
                            case 3:
                                return [4, u.read()];
                            case 4:
                                return f = r.sent(),
                                c = f.done,
                                l = f.value,
                                c ? [3, 5] : (h.push(l),
                                d += l.length,
                                l.length,
                                [3, 3]);
                            case 5:
                                p = new Uint8Array(d),
                                m = 0;
                                try {
                                    for (b = void 0,
                                    g = bn(h),
                                    v = g.next(); !v.done; v = g.next())
                                        y = v.value,
                                        p.set(y, m),
                                        m += y.length
                                } catch (e) {
                                    b = {
                                        error: e
                                    }
                                } finally {
                                    try {
                                        v && !v.done && (w = g.return) && w.call(g)
                                    } finally {
                                        if (b)
                                            throw b.error
                                    }
                                }
                                return o = p,
                                [3, 8];
                            case 6:
                                return [4, s[t.type]()];
                            case 7:
                                o = r.sent(),
                                r.label = 8;
                            case 8:
                                return ba.delete(i),
                                [2, {
                                    value: o
                                }];
                            case 9:
                                return 20 === r.sent().code ? [2, {
                                    value: null
                                }] : [3, 10];
                            case 10:
                                return [2]
                            }
                        })
                    }
                    ,
                    i = 0,
                    a.label = 1;
                case 1:
                    return i < t.retry ? [5, r(i)] : [3, 4];
                case 2:
                    if ("object" == typeof (n = a.sent()))
                        return [2, n.value];
                    a.label = 3;
                case 3:
                    return i++,
                    [3, 1];
                case 4:
                    throw new Error("fail")
                }
            })
        })
    }
    var _a = function() {
        function e() {
            this.version = 0,
            this.targetDuration = 0,
            this.duration = 0,
            this.mediaSequence = 0,
            this.type = "VOD",
            this.format = "hls",
            this.fragments = []
        }
        return e.prototype.getFragmentUrl = function(e) {
            return e = Math.max(e, 0),
            e = Math.min(this.fragments.length - 1, e),
            this.fragments[e].url
        }
        ,
        e.prototype.getMapuri = function() {
            return this.url + "/" + this.mapuri
        }
        ,
        e.prototype.getFragmentByTime = function(e) {
            var t = this.fragments[this.fragments.length - 1];
            if (e <= 0)
                return this.fragments[0];
            if (e > t.start)
                return t;
            for (var r = 0, i = t.sn; r < i; ) {
                var n = r + i >> 1
                  , a = this.fragments[n];
                if (e < a.start - a.duration / 2)
                    i = n - 1;
                else {
                    if (!(e >= a.start + a.duration / 2))
                        return a;
                    r = n + 1
                }
            }
            return this.fragments[r]
        }
        ,
        e.prototype.clearBuffer = function() {
            var e, t;
            try {
                for (var r = bn(this.fragments), i = r.next(); !i.done; i = r.next()) {
                    i.value.buffer = null
                }
            } catch (t) {
                e = {
                    error: t
                }
            } finally {
                try {
                    i && !i.done && (t = r.return) && t.call(r)
                } finally {
                    if (e)
                        throw e.error
                }
            }
        }
        ,
        e
    }()
      , Sa = function() {
        function e() {
            this.loadState = "empty"
        }
        return e.prototype.getUrl = function() {
            return this.url
        }
        ,
        e
    }();
    function Ea(e) {
        return vn(this, void 0, void 0, function() {
            var t;
            return yn(this, function(r) {
                switch (r.label) {
                case 0:
                    return [4, wa(e)];
                case 1:
                    return (t = r.sent()) ? [2, function(e, t) {
                        var r = e.split("\n");
                        if ("#EXTM3U" !== r[0])
                            return null;
                        var i = 1
                          , n = 0
                          , a = 0
                          , o = new _a
                          , s = t.substring(0, t.lastIndexOf("/"));
                        o.url = s;
                        for (; i < r.length; ) {
                            var u = r[i];
                            if (u.startsWith("#EXT-X-VERSION:"))
                                o.version = parseInt(u.substring(15));
                            else if (u.startsWith("#EXT-X-TARGETDURATION:"))
                                o.targetDuration = parseFloat(u.substring(22));
                            else if (u.startsWith("#EXT-X-MEDIA-SEQUENCE:"))
                                o.mediaSequence = parseInt(u.substring(22));
                            else if (u.startsWith("#EXT-X-PLAYLIST-TYPE:"))
                                o.type = u.substring(21);
                            else if (u.startsWith("#EXT-X-MAP:"))
                                o.mapuri = u.substring(16, u.length - 1),
                                o.format = "mp4";
                            else if (u.startsWith("#EXTINF:")) {
                                var h = parseFloat(u.substring(8))
                                  , d = new Sa;
                                d.sn = a++,
                                d.duration = h,
                                d.start = n,
                                n += h,
                                d.relurl = r[++i],
                                d.url = s + "/" + d.relurl,
                                d.playlist = o,
                                o.fragments.push(d)
                            }
                            i++
                        }
                        return o.duration = Number(n.toFixed(2)),
                        o
                    }(t, e)] : [2, null]
                }
            })
        })
    }
    function Aa(e, t) {
        return new Promise(function(r, i) {
            if (t.aborted)
                return i(new DOMException("aborted already."));
            t.addEventListener("abort", function() {
                i(new DOMException("abort."))
            }),
            e.then(function(e) {
                if (t.aborted)
                    return i(new DOMException("aborted already."));
                r(e)
            })
        }
        )
    }
    var Ra = function(e) {
        function t(t) {
            var r = e.call(this) || this;
            if (r._speed = 0,
            t) {
                var i = t.loaderCreator();
                r.p2pLoader = new i
            }
            return r.onSuccess = r.onSuccess.bind(r),
            r.onError = r.onError.bind(r),
            r.onAbort = r.onAbort.bind(r),
            r.onTimeout = r.onTimeout.bind(r),
            r.onProgress = r.onProgress.bind(r),
            r
        }
        return gn(t, e),
        t.prototype.onSuccess = function(e, t, r, i) {
            var n = e.data;
            this._speed = t.speed,
            this._stats = t,
            this.dispatch(Bn, n)
        }
        ,
        t.prototype.onError = function(e, t, r) {}
        ,
        t.prototype.onAbort = function(e, t, r) {
            this._stats = e
        }
        ,
        t.prototype.onTimeout = function(e, t) {
            this._stats = e
        }
        ,
        t.prototype.onProgress = function(e, t, r, i) {
            this._stats = e
        }
        ,
        t.prototype.loadFragment = function(e, t) {
            return vn(this, void 0, void 0, function() {
                var r, i, n, a;
                return yn(this, function(o) {
                    switch (o.label) {
                    case 0:
                        if ("loaded" === e.loadState && e.buffer instanceof ArrayBuffer)
                            return [2, !0];
                        this.abortController && this.abortController.abort(),
                        r = null,
                        i = this.abortController = new AbortController,
                        n = i.signal,
                        o.label = 1;
                    case 1:
                        return o.trys.push([1, 6, 7, 8]),
                        this.p2pLoader ? (e.loadState = "p2p_loading",
                        [4, Aa(this.loadFragmentByP2P(e, t), n)]) : [3, 3];
                    case 2:
                        return r = o.sent(),
                        [3, 5];
                    case 3:
                        return e.loadState = "http_loading",
                        [4, Aa(this.loadFragmentByHttp(e), n)];
                    case 4:
                        r = o.sent(),
                        o.label = 5;
                    case 5:
                        return [3, 8];
                    case 6:
                        return a = o.sent(),
                        Sn.error(a),
                        [3, 8];
                    case 7:
                        return this.abortController = null,
                        [7];
                    case 8:
                        return r && r instanceof ArrayBuffer ? (e.buffer = r,
                        e.loadState = "loaded",
                        [2, !0]) : (e.loadState = "empty",
                        [2, !1])
                    }
                })
            })
        }
        ,
        t.prototype.loadFragmentByP2P = function(e, t) {
            return vn(this, void 0, void 0, function() {
                var r, i = this;
                return yn(this, function(n) {
                    return r = this,
                    [2, new Promise(function(n, a) {
                        i.p2pLoader.load({
                            frag: e,
                            url: e.getUrl(),
                            responseType: "arraybuffer"
                        }, {
                            highWaterMark: 131072,
                            maxRetry: 0,
                            maxRetryDelay: 64e3,
                            retryDelay: 0,
                            timeout: 2e4,
                            currentTime: t
                        }, {
                            onSuccess: function(e, t, r, a) {
                                var o = e.data;
                                i._speed = t.speed,
                                i._stats = t,
                                n(o)
                            },
                            onError: function(e, t, r) {
                                n(null)
                            },
                            onAbort: function(e, t, r) {
                                i._stats = e,
                                n(null)
                            },
                            onTimeout: function(e, t) {
                                i._stats = e,
                                n(null)
                            },
                            onProgress: function(e, t, i, n) {
                                r._stats = e
                            }
                        })
                    }
                    )]
                })
            })
        }
        ,
        Object.defineProperty(t.prototype, "speed", {
            get: function() {
                return this._speed
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "stats", {
            get: function() {
                return this._stats
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.loadFragmentByHttp = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r, i, n, a, o, s, u, h, d, f, c, l, p, m, g, v, y, b;
                return yn(this, function(w) {
                    switch (w.label) {
                    case 0:
                        t = new AbortController,
                        this.abortController = t,
                        r = e.getUrl(),
                        i = fetch(r, {
                            signal: t.signal
                        }),
                        n = 0,
                        w.label = 1;
                    case 1:
                        if (!(n < 3))
                            return [3, 10];
                        a = new Promise(function(e, t) {
                            setTimeout(function() {
                                t()
                            }, 3e3)
                        }
                        ),
                        w.label = 2;
                    case 2:
                        return w.trys.push([2, 7, , 8]),
                        [4, Promise.race([i, a])];
                    case 3:
                        o = w.sent(),
                        s = o.body.getReader(),
                        u = [],
                        h = 0,
                        w.label = 4;
                    case 4:
                        return [4, s.read()];
                    case 5:
                        return d = w.sent(),
                        f = d.done,
                        c = d.value,
                        f ? [3, 6] : (u.push(c),
                        h += c.length,
                        [3, 4]);
                    case 6:
                        l = new Uint8Array(h),
                        p = 0;
                        try {
                            for (y = void 0,
                            m = bn(u),
                            g = m.next(); !g.done; g = m.next())
                                v = g.value,
                                l.set(v, p),
                                p += v.length
                        } catch (e) {
                            y = {
                                error: e
                            }
                        } finally {
                            try {
                                g && !g.done && (b = m.return) && b.call(m)
                            } finally {
                                if (y)
                                    throw y.error
                            }
                        }
                        return this.abortController = null,
                        [2, l];
                    case 7:
                        if (20 === w.sent().code)
                            throw new Error("abort");
                        return [3, 8];
                    case 8:
                        return [2, null];
                    case 9:
                        return n++,
                        [3, 1];
                    case 10:
                        return [2]
                    }
                })
            })
        }
        ,
        t.prototype.abortLoading = function() {
            this.abortController && this.abortController.abort(),
            this.p2pLoader && this.p2pLoader.abort()
        }
        ,
        t.prototype.dispose = function() {
            e.prototype.dispose.call(this),
            this.p2pLoader.destroy()
        }
        ,
        t
    }(Qn)
      , ka = function() {
        function e() {
            this._gap = .1,
            this.ranges = []
        }
        return e.prototype.addRange = function(e, t) {
            var r = this;
            (!this.ranges.length || e > this.ranges[this.ranges.length - 1][1]) && this.ranges.push([e, t]);
            for (var i = function(e, t) {
                return Math.abs(e - t) < r._gap
            }, n = 0; n < this.ranges.length; n++) {
                var a = wn(this.ranges[n], 2)
                  , o = a[0]
                  , s = a[1];
                if (i(t, o)) {
                    this.ranges[n][0] = e;
                    break
                }
                if (t < o) {
                    this.ranges.splice(n, 0, [e, t]);
                    break
                }
                if (i(e, s)) {
                    if (n < this.ranges.length - 1) {
                        var u = this.ranges[n + 1];
                        i(t, u[0]) ? (this.ranges[n][1] = u[1],
                        this.ranges.splice(n + 1, 1)) : this.ranges[n][1] = t
                    } else
                        this.ranges[n][1] = t;
                    break
                }
            }
        }
        ,
        e.prototype.removeRange = function(e, t) {}
        ,
        Object.defineProperty(e.prototype, "length", {
            get: function() {
                return this.ranges.length
            },
            enumerable: !1,
            configurable: !0
        }),
        e.prototype.start = function(e) {
            return this.ranges[e][0]
        }
        ,
        e.prototype.end = function(e) {
            return this.ranges[e][1]
        }
        ,
        e.runTest = function() {
            var t = new e;
            t.addRange(1, 2),
            t.addRange(5, 6),
            t.addRange(2, 3),
            t.addRange(4, 5),
            t.addRange(3, 4),
            t.addRange(6, 7),
            t.addRange(0, 1),
            t.addRange(-100, -99)
        }
        ,
        e
    }()
      , Ta = function(e) {
        function t(t) {
            var r = e.call(this) || this;
            return r.loading = !1,
            r.lastLoadedIndex = -1,
            r.currentTime = 0,
            r.timeRange = new ka,
            r.fragmentLoader = new Ra(t),
            r.engine = t,
            r.synchronize = Hn(r.synchronize, 1e3),
            r
        }
        return gn(t, e),
        t.prototype.loadManifest = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return t = this,
                        [4, Ea(e)];
                    case 1:
                        return t.playlist = i.sent(),
                        Wn("fragmentTotal", this.playlist.fragments.length),
                        this.engine && (r = {
                            levels: [{
                                fragments: this.playlist.fragments,
                                url: e
                            }],
                            url: e
                        },
                        this.engine.setPlaylists(r)),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.getHeader = function() {
            return vn(this, void 0, void 0, function() {
                var e;
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return "hls" === this.playlist.format ? [2, null] : this.playlist.moovHead ? [3, 2] : (e = this.playlist,
                        [4, this.loadMoovHead()]);
                    case 1:
                        e.moovHead = t.sent(),
                        t.label = 2;
                    case 2:
                        return [2, this.playlist.moovHead]
                    }
                })
            })
        }
        ,
        t.prototype.loadInitFragment = function(e, t) {
            return void 0 === t && (t = !1),
            vn(this, void 0, void 0, function() {
                var r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return r = this.playlist.getFragmentByTime(e),
                        this.currentTime = e,
                        t && (r = this.playlist.fragments[r.sn + 1]),
                        Sn.log("<loader> load init fragment ", r.sn),
                        [4, this.loadFragment(r.sn)];
                    case 1:
                        return i.sent(),
                        [2, r]
                    }
                })
            })
        }
        ,
        t.prototype.loadNextInitFragment = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return (t = this.playlist.getFragmentByTime(e)) && (r = this.playlist.fragments[t.sn + 1]) ? (Sn.log("<loader> load next init fragment ", r.sn),
                        [4, this.loadFragment(r.sn)]) : [2, null];
                    case 1:
                        return i.sent(),
                        [2, r]
                    }
                })
            })
        }
        ,
        t.prototype.synchronize = function(e) {
            if (this.currentTime = e,
            !this.loading)
                for (var t = this.playlist.getFragmentByTime(e), r = t.sn; t && t.start - e < zn.loaderMinPerloadTime; ) {
                    if (!t.buffer && "empty" === t.loadState) {
                        Sn.log("<loader> load synchronize fragment ", r),
                        this.loadFragment(r);
                        break
                    }
                    t = this.playlist.fragments[++r]
                }
        }
        ,
        t.prototype.reset = function() {
            !function() {
                var e, t;
                try {
                    for (var r = bn(ba), i = r.next(); !i.done; i = r.next())
                        i.value.abort()
                } catch (t) {
                    e = {
                        error: t
                    }
                } finally {
                    try {
                        i && !i.done && (t = r.return) && t.call(r)
                    } finally {
                        if (e)
                            throw e.error
                    }
                }
                ba.clear()
            }(),
            this.fragmentLoader.abortLoading(),
            this.loading = !1
        }
        ,
        t.prototype.getFragment = function(e) {
            return vn(this, void 0, void 0, function() {
                var t;
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return e >= this.playlist.fragments.length ? [2, null] : "http_loading" === (t = this.playlist.fragments[e]).loadState || "p2p_loading" === t.loadState ? [2, null] : t && t.buffer ? [2, t] : [3, 1];
                    case 1:
                        return Sn.log("<loader> getFragment  ", e),
                        [4, this.loadFragment(e)];
                    case 2:
                        return r.sent(),
                        [2, t]
                    }
                })
            })
        }
        ,
        Object.defineProperty(t.prototype, "buffered", {
            get: function() {
                return this.timeRange
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "speed", {
            get: function() {
                return this.fragmentLoader.speed
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "stats", {
            get: function() {
                return this.fragmentLoader.stats
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.removePreviousBuffer = function(e) {
            for (var t = 0; t < e - 10; t++)
                this.playlist.fragments[t].buffer = null
        }
        ,
        t.prototype.loadFragment = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r;
                return yn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return this.removePreviousBuffer(e),
                        (t = this.playlist.fragments[e]) ? (this.loading = !0,
                        t.buffer ? (r = t.buffer,
                        [3, 3]) : [3, 1]) : [2, null];
                    case 1:
                        return [4, this.fragmentLoader.loadFragment(t, this.currentTime)];
                    case 2:
                        i.sent() ? (r = t.buffer,
                        this.timeRange.addRange(t.start, t.start + t.duration),
                        Sn.log("<loader> load fragment ", e, ",size:[".concat(r.byteLength, "]"))) : Sn.warn("<loader> load fragment ", e, " fail"),
                        i.label = 3;
                    case 3:
                        return this.bufferedTime = t.start + t.duration,
                        this.lastLoadedIndex = e,
                        this.dispatch(Bn, t),
                        this.loading = !1,
                        [2, r]
                    }
                })
            })
        }
        ,
        t.prototype.loadMoovHead = function() {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(e) {
                    switch (e.label) {
                    case 0:
                        return [4, wa(this.playlist.getMapuri(), {
                            type: "arrayBuffer"
                        })];
                    case 1:
                        return [2, e.sent()]
                    }
                })
            })
        }
        ,
        t.prototype.dispose = function() {
            e.prototype.dispose.call(this),
            this.fragmentLoader.dispose()
        }
        ,
        t
    }(Qn);
    !function(e) {
        if (e && "undefined" != typeof window) {
            var t = document.createElement("style");
            t.setAttribute("media", "screen"),
            t.innerHTML = e,
            document.head.appendChild(t)
        }
    }(".video-canvas {\n  width: 100%;\n  height: 100%;\n  left: 0px;\n  position: absolute;\n}\n.mgtv-player {\n  position: absolute;\n  left: 0px;\n  right: 0px;\n  top: 0px;\n  height: 0px;\n  width: 100%;\n  height: 100%;\n  margin: 0 auto;\n}\n");
    var La = function(e) {
        function t(t) {
            var r = e.call(this) || this;
            return r.config = t,
            r._lastSeekTo = -1,
            r._state = "init",
            Sn.open("player", "green"),
            r.enterFrame = r.enterFrame.bind(r),
            r.setupContainer(t),
            r
        }
        return gn(t, e),
        t.support = function(e) {
            return "webassembly" === e ? void 0 !== window.WebAssembly : "webcodec" === e ? void 0 !== window.VideoDecoder : void 0
        }
        ,
        t.prototype.setupContainer = function(e) {
            "string" == typeof e.parent ? this.parent = document.querySelector(e.parent) : this.parent = e.parent,
            this.parent.classList.add("mgtv-player"),
            this.observerElement(this.parent)
        }
        ,
        t.prototype.observerElement = function(e) {
            this.mutationObserve(e),
            this.resizeObserve(e)
        }
        ,
        t.prototype.resizeObserve = function(e) {
            var t = this;
            (this.resizeObserver = new ResizeObserver(function(e) {
                var r, i = e[0].contentRect, n = i.width, a = i.height;
                null === (r = t.kernel) || void 0 === r || r.resize(n, a)
            }
            )).observe(e)
        }
        ,
        t.prototype.mutationObserve = function(e) {
            var t = this;
            (this.mutationObserver = new MutationObserver(function(e) {
                t.handleMutation(e)
            }
            )).observe(e, {
                attributes: !0
            }),
            this.mutationRequestFrame = window.requestAnimationFrame(this.enterFrame)
        }
        ,
        t.prototype.enterFrame = function() {
            var e = this.mutationObserver.takeRecords();
            e.length && this.handleMutation(e),
            this.mutationRequestFrame = window.requestAnimationFrame(this.enterFrame)
        }
        ,
        t.prototype.handleMutation = function(e) {
            var t, r;
            try {
                for (var i = bn(e), n = i.next(); !n.done; n = i.next()) {
                    var a = n.value;
                    a.target === this.parent && "width" === a.attributeName && (this.parent.style.width = this.parent.getAttribute("width"))
                }
            } catch (e) {
                t = {
                    error: e
                }
            } finally {
                try {
                    n && !n.done && (r = i.return) && r.call(i)
                } finally {
                    if (t)
                        throw t.error
                }
            }
        }
        ,
        Object.defineProperty(t.prototype, "playerState", {
            get: function() {
                return this._state
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.initKernel = function(e) {
            switch (e) {
            case "native":
                break;
            case "webassembly":
                this.kernel = new ua;
                break;
            case "webcodecs":
                this.kernel = new va
            }
            this.kernelType = e,
            this.parent.appendChild(this.kernel.getDisplayObject()),
            this.bindKernelEvents(this.kernel)
        }
        ,
        t.prototype.bindKernelEvents = function(e) {
            var t, r, i = this, n = function(t) {
                e.addEventListener(t, function(e) {
                    i.dispatch(t, e.data)
                })
            };
            try {
                for (var a = bn(Object.values(Fn)), o = a.next(); !o.done; o = a.next()) {
                    n(o.value)
                }
            } catch (e) {
                t = {
                    error: e
                }
            } finally {
                try {
                    o && !o.done && (r = a.return) && r.call(a)
                } finally {
                    if (t)
                        throw t.error
                }
            }
            this.timeupdateInterval = setInterval(function() {
                i.lastUpdateTime !== i.currentTime && (i.dispatch("timeupdate", i.currentTime),
                i.lastUpdateTime = i.currentTime)
            }, 250)
        }
        ,
        t.prototype.unbindKernelEvents = function(e) {
            e.removeEvents(),
            clearInterval(this.timeupdateInterval)
        }
        ,
        t.prototype.load = function(e, t) {
            return void 0 === t && (t = 0),
            vn(this, void 0, void 0, function() {
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return "init" !== this._state ? (Sn.error("不能重复调用load()，如果需要切换新的播放，请使用load2()。"),
                        [2]) : (this.parseUrlInfo(e),
                        this._state = "loading",
                        this.loader = new Ta(this.config.engine),
                        [4, this.loader.loadManifest(e)]);
                    case 1:
                        return r.sent(),
                        this.kernel.attachLoader(this.loader),
                        [4, this.kernel.load(t)];
                    case 2:
                        return r.sent(),
                        this._state = "canplay",
                        this.dispatch(kn),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.switchKernel = function(e) {
            return vn(this, void 0, void 0, function() {
                var t, r, i, n;
                return yn(this, function(a) {
                    switch (a.label) {
                    case 0:
                        return t = e.url,
                        r = e.kernel,
                        this.parseUrlInfo(t),
                        r !== this.kernelType ? [3, 1] : [2];
                    case 1:
                        return Sn.warn("switch kernel:".concat(this.kernelType, " to ").concat(r)),
                        [4, (i = new Ta(this.config.engine)).loadManifest(t)];
                    case 2:
                        return a.sent(),
                        n = "webcodecs" === r ? new va : new ua,
                        "webassembly" !== r ? [3, 4] : [4, qn(n, En)];
                    case 3:
                        a.sent(),
                        a.label = 4;
                    case 4:
                        return n.attachLoader(i),
                        n.load(this.currentTime, !0),
                        [4, this.kernel.fragmentComplete()];
                    case 5:
                        return a.sent(),
                        n.appendVideoElement(this.config.parent),
                        this.kernel.dispose(),
                        this.kernel = n,
                        [4, this.kernel.play()];
                    case 6:
                        a.sent(),
                        this.kernelType = r,
                        Sn.warn("switch kernel complete."),
                        a.label = 7;
                    case 7:
                        return [2]
                    }
                })
            })
        }
        ,
        t.prototype.parseUrlInfo = function(e) {
            this.parseBitRate(e),
            this.parseHost(e)
        }
        ,
        t.prototype.parseBitRate = function(e) {
            var t = /_([0-9]+)_mp4/.exec(e);
            t.length >= 2 && Wn("bitrate", t[1])
        }
        ,
        t.prototype.parseHost = function(e) {
            var t = /:\/\/(.*?)\//.exec(e);
            t.length >= 2 && Wn("host", t[1])
        }
        ,
        t.prototype.load2 = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return this.parseUrlInfo(e),
                        "playing" === this._state || "pause" === this._state ? [3, 3] : (Sn.warn("正在进行切换，切换结束后，将继续进行本次操作"),
                        [4, qn(this, Mn)]);
                    case 1:
                        return t.sent(),
                        [4, this.runLoad2(e)];
                    case 2:
                        return t.sent(),
                        [3, 5];
                    case 3:
                        return [4, this.runLoad2(e)];
                    case 4:
                        t.sent(),
                        t.label = 5;
                    case 5:
                        return [2]
                    }
                })
            })
        }
        ,
        t.prototype.runLoad2 = function(e) {
            return vn(this, void 0, void 0, function() {
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return Sn.warn("无缝切换视频流开始"),
                        this._state = "loading",
                        this.kernel.dettachLoader(),
                        this.loader.dispose(),
                        this.loader = new Ta(this.config.engine),
                        [4, this.loader.loadManifest(e)];
                    case 1:
                        return t.sent(),
                        this.kernel.attachLoader(this.loader),
                        [4, this.kernel.load2()];
                    case 2:
                        return t.sent(),
                        this._state = "playing",
                        Sn.warn("无缝切换视频流结束"),
                        this.dispatch(Mn),
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.play = function() {
            return vn(this, void 0, void 0, function() {
                var e;
                return yn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        if (!this.kernel)
                            return [2, Promise.reject("not install.")];
                        t.label = 1;
                    case 1:
                        return t.trys.push([1, 3, , 4]),
                        [4, this.kernel.play()];
                    case 2:
                        return t.sent(),
                        this.kernel.resize(this.parent.offsetWidth, this.parent.offsetHeight),
                        this._state = "playing",
                        [3, 4];
                    case 3:
                        return e = t.sent(),
                        [2, Promise.reject(e)];
                    case 4:
                        return [2]
                    }
                })
            })
        }
        ,
        t.prototype.pause = function() {
            this.kernel.pause(),
            this._state = "pause"
        }
        ,
        t.prototype.resume = function() {
            this.kernel.resume(),
            this._state = "playing"
        }
        ,
        Object.defineProperty(t.prototype, "currentTime", {
            get: function() {
                var e;
                return (null === (e = this.kernel) || void 0 === e ? void 0 : e.currentTime) || 0
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "duration", {
            get: function() {
                return this.kernel.duration
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "speed", {
            set: function(e) {
                this.kernel.speed = e
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "loadSpeed", {
            get: function() {
                var e;
                return (null === (e = this.loader) || void 0 === e ? void 0 : e.speed) || 0
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "volume", {
            get: function() {
                return this.kernel.volume
            },
            set: function(e) {
                this.kernel.volume = e
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "buffered", {
            get: function() {
                return this.loader ? this.loader.buffered : null
            },
            enumerable: !1,
            configurable: !0
        }),
        Object.defineProperty(t.prototype, "stats", {
            get: function() {
                var e;
                return (null === (e = this.loader) || void 0 === e ? void 0 : e.stats) || null
            },
            enumerable: !1,
            configurable: !0
        }),
        t.prototype.seek = function(e) {
            return vn(this, void 0, void 0, function() {
                var t;
                return yn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        if (this._lastSeekTo = e,
                        "seeking" === this._state)
                            return [2];
                        this._stateBeforeSeek = this._state,
                        this.pause(),
                        this._state = "seeking",
                        r.label = 1;
                    case 1:
                        return t = this._lastSeekTo,
                        this._lastSeekTo = -1,
                        [4, this.kernel.seek(t)];
                    case 2:
                        r.sent(),
                        r.label = 3;
                    case 3:
                        if (-1 !== this._lastSeekTo)
                            return [3, 1];
                        r.label = 4;
                    case 4:
                        return "playing" === this._stateBeforeSeek && this.resume(),
                        this._state = this._stateBeforeSeek,
                        [2]
                    }
                })
            })
        }
        ,
        t.prototype.dispose = function() {
            this.unbindKernelEvents(this.kernel),
            this.kernel.dispose(),
            this.resizeObserver.disconnect(),
            this.mutationObserver.disconnect(),
            window.cancelAnimationFrame(this.mutationRequestFrame)
        }
        ,
        t
    }(Qn)
      , xa = console
      , Ba = window
      , Da = Ba.performance
      , Pa = Ba.XMLHttpRequest
      , Ma = {
        debug: !1,
        enableBitrateTest: !1,
        enableWorker: !0,
        maxBufferLength: 60,
        maxBufferSize: 6e6,
        manifestLoadingMaxRetry: 0,
        manifestLoadingTimeOut: 11e3,
        levelLoadingTimeOut: 11e3,
        levelLoadingMaxRetry: 2,
        nudgeMaxRetry: 20,
        fragLoadingRetryDelay: 0,
        levelLoadingRetryDelay: 0,
        fragLoadingMaxRetry: 2,
        autoStartLoad: !1,
        xhrLoader: function() {
            function e(e) {
                e && e.xhrSetup && (this.xhrSetup = e.xhrSetup)
            }
            var t = e.prototype;
            return t.destroy = function() {
                this.abort(),
                this.loader = null
            }
            ,
            t.abort = function() {
                var e = this.loader;
                e && 4 !== e.readyState && (this.stats.aborted = !0,
                e.abort()),
                window.clearTimeout(this.requestTimeout),
                this.requestTimeout = null,
                window.clearTimeout(this.retryTimeout),
                this.retryTimeout = null
            }
            ,
            t.load = function(e, t, r) {
                this.context = e,
                this.config = t,
                this.callbacks = r,
                this.stats = {
                    trequest: Da.now(),
                    retry: 0
                },
                this.retryDelay = t.retryDelay,
                this.loadInternal()
            }
            ,
            t.loadInternal = function() {
                var e, t = this.context;
                e = this.loader = new Pa;
                var r = this.stats;
                r.tfirst = 0,
                r.loaded = 0;
                var i = this.xhrSetup
                  , n = (-1 === t.url.indexOf("?") ? "?" : "&") + "_t=" + +new Date;
                try {
                    if (i)
                        try {
                            i(e, t.url + n)
                        } catch (r) {
                            e.open("GET", t.url + n, !0),
                            i(e, t.url + n)
                        }
                    e.readyState || e.open("GET", t.url + n, !0)
                } catch (r) {
                    return void this.callbacks.onError({
                        code: e.status,
                        text: r.message
                    }, t, e)
                }
                t.rangeEnd && e.setRequestHeader("Range", "bytes=" + t.rangeStart + "-" + (t.rangeEnd - 1)),
                e.onreadystatechange = this.readystatechange.bind(this),
                e.onprogress = this.loadprogress.bind(this),
                e.responseType = t.responseType,
                this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), this.config.timeout),
                e.send()
            }
            ,
            t.readystatechange = function(e) {
                var t = e.currentTarget
                  , r = t.readyState
                  , i = this.stats
                  , n = this.context
                  , a = this.config;
                if (!i.aborted && r >= 2)
                    if (window.clearTimeout(this.requestTimeout),
                    0 === i.tfirst && (i.tfirst = Math.max(Da.now(), i.trequest)),
                    4 === r) {
                        var o = t.status;
                        if (o >= 200 && o < 300) {
                            var s, u;
                            i.tload = Math.max(i.tfirst, Da.now()),
                            u = "arraybuffer" === n.responseType ? (s = t.response).byteLength : (s = t.responseText).length,
                            i.loaded = i.total = u;
                            var h = {
                                url: t.responseURL,
                                data: s
                            };
                            this.callbacks.onSuccess(h, i, n, t)
                        } else
                            i.retry >= a.maxRetry || o >= 400 && o < 499 ? (xa.error(o + " while loading " + n.url),
                            this.callbacks.onError({
                                code: o,
                                text: t.statusText
                            }, n, t)) : (xa.warn(o + " while loading " + n.url + ", retrying in " + this.retryDelay + "..."),
                            this.destroy(),
                            this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                            this.retryDelay = Math.min(2 * this.retryDelay, a.maxRetryDelay),
                            i.retry++)
                    } else
                        this.requestTimeout = window.setTimeout(this.loadtimeout.bind(this), a.timeout)
            }
            ,
            t.loadtimeout = function() {
                var e = this.stats
                  , t = this.context
                  , r = this.config;
                e.retry >= r.maxRetry ? (xa.warn("timeout while loading " + t.url),
                this.callbacks.onTimeout(this.stats, this.context, null)) : (xa.warn("timeout while loading " + t.url + ", retrying in " + this.retryDelay + "..."),
                this.destroy(),
                this.retryTimeout = window.setTimeout(this.loadInternal.bind(this), this.retryDelay),
                this.retryDelay = Math.min(2 * this.retryDelay, r.maxRetryDelay),
                e.retry++)
            }
            ,
            t.loadprogress = function(e) {
                var t = e.currentTarget
                  , r = Da.now()
                  , i = this.stats;
                i.loaded = e.loaded,
                e.lengthComputable && (i.total = e.total,
                i.lastLoadedTime && (i.speed = (i.loaded - i.lastLoaded) / (r - i.lastLoadedTime) * 1e3 / 1024)),
                i.lastLoaded = i.loaded,
                i.lastLoadedTime = r;
                var n = this.callbacks.onProgress;
                n && n(i, this.context, null, t)
            }
            ,
            e
        }()
    }
      , Ua = function() {
        function e() {}
        return e.prototype.load = function(e, t) {
            return void 0 === t && (t = 30),
            new Promise(function(r, i) {
                var n = "callback_jsonp_" + Date.now() + "_" + performance.now().toFixed(0);
                window[n] = function(e) {
                    a.parentElement.removeChild(a),
                    delete window[n],
                    clearTimeout(o),
                    r(e)
                }
                ;
                var a = document.createElement("script");
                a.setAttribute("src", e + "&callback=" + n),
                a.id = n,
                document.querySelector("head").appendChild(a);
                var o = setTimeout(function() {
                    a.parentElement.removeChild(a),
                    delete window[n],
                    i("time out")
                }, 1e3 * t)
            }
            )
        }
        ,
        e
    }()
      , Ia = "mango-kernel-hls:hls"
      , Oa = function() {
        return function() {
            var e = this;
            this.setHls = function(t) {
                e.hls = t
            }
            ,
            this.setPeerID = function(t) {
                e.peerId = t
            }
            ,
            this.setPeers = function(t) {
                e.peers.set(t.id, t)
            }
            ,
            this.delPeers = function(t) {
                e.peers.delete(t)
            }
            ,
            this.handleDownload = function(t, r) {
                e.downloadStats.push({
                    method: t,
                    size: r,
                    timeStamp: performance.now()
                }),
                e.downloadTotals[t] += r,
                e.emitStats({
                    stats: e.getStats()
                })
            }
            ,
            this.handleUpload = function(t, r) {
                e.uploadStats.push({
                    size: r,
                    timeStamp: performance.now()
                }),
                e.uploadTotal += r,
                e.emitStats({
                    stats: e.getStats()
                })
            }
            ,
            this.reset = function() {
                e.peers.clear(),
                e.downloadTotals = {
                    p2p: 0,
                    http: 0
                },
                e.uploadStats.length = 0,
                e.uploadTotal = 0,
                e.downloadStats.length = 0
            }
            ,
            this.getStats = function() {
                var t = e.downloadTotals
                  , r = t.http
                  , i = t.p2p
                  , n = e.uploadTotal
                  , a = r + i;
                return {
                    peerId: e.peerId || "",
                    total: a,
                    http: r,
                    p2p: i,
                    upload: n,
                    peers: e.peers.size,
                    p2pRatio: +(i / a).toFixed(3)
                }
            }
            ,
            this.handlePeers = function(t, r) {
                e.getPeerID && e.getPeerID(),
                ir.info(Ia, "peers => " + JSON.stringify(Array.from(e.peers.values()).map(function(e) {
                    return e.id + (e.remoteAddress ? "@" + e.remoteAddress + ":" + e.remotePort : "")
                })))
            }
            ,
            this.emitStats = function(e) {}
            ,
            this.handleByteReport = function(t, r, i) {
                void 0 === i && (i = null);
                var n, a, o, s = r.id, u = r.method, h = r.bytesLoaded, d = r.tfirst, f = r.tload, c = r.hDate, l = r.timeLoad, p = r.url, m = r.sn;
                switch (a = o = 0,
                t) {
                case Ca.SegmentLoaded:
                    o = 1,
                    n = "0",
                    Math.max(Math.floor(f - d), 0),
                    a = ~~h || 0;
                    break;
                case Ca.SegmentAbort:
                    n = "0",
                    Math.max(Math.floor(f - d), 0),
                    a = ~~h || 0;
                    break;
                case Ca.SegmentError:
                    n = 304e3 + ~~i.code,
                    Math.max(Math.floor(f - d), 0),
                    a = ~~h || 0;
                    break;
                case Ca.SegmentTimeout:
                    n = 304600,
                    Math.max(Math.floor(f - d), 0),
                    a = ~~h || 0
                }
                -1 === e.segmentId.indexOf(s) && e.segmentId.push(s);
                var g = le(p).hostname
                  , v = {
                    from: "p2p" == u || u.indexOf("hezi-") > -1 || u.indexOf("thirdP2P-") > -1 ? u : /^(?=.*[^\.]$)((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.?){4}$/.test(g) ? "mgcdn" : g,
                    delay: c && l ? l - new Date(c).getTime() : "",
                    len: a,
                    eff: o,
                    err: n,
                    seq: m
                };
                e.emitStats({
                    byteStats: {
                        detail: v
                    }
                })
            }
            ,
            this.peers = new Map,
            this.downloadTotals = {
                p2p: 0,
                http: 0
            },
            this.uploadTotal = 0,
            this.uploadStats = [],
            this.downloadStats = [],
            this.segmentId = []
        }
    }()
      , Ca = {
        SegmentLoaded: "SegmentLoaded",
        SegmentAbort: "SegmentAbort",
        SegmentError: "SegmentError",
        SegmentTimeout: "SegmentTimeout"
    };
    var Fa = function(e) {
        function t(t, r, i) {
            var n = e.call(this) || this;
            return n._volume = 0,
            n.config = r,
            n.customConfig = i,
            n.parent = t,
            n.initLoader(),
            n.initPlayer(),
            n
        }
        cn(t, e),
        t.isSupport = function(e) {
            return void 0 === e && (e = "h265"),
            "h264" === e || "function" == typeof WebAssembly.Global && "undefined" != typeof SharedArrayBuffer
        }
        ;
        var r = t.prototype;
        return r.initLoader = function() {
            var e = this.config
              , t = e.p2pSwitch
              , r = e.cdnld
              , i = ["signal.api.mgtv.com", "signal2.api.mgtv.com"].map(function(e) {
                return location.protocol.replace("http", "ws") + "//" + e + "/ws"
            })
              , n = window.performance.memory && window.performance.memory.jsHeapSizeLimit
              , a = Math.min(n / 1024 / 1024 / 1024 / 2 || 1.2, 1.2)
              , o = Qt.parseURL
              , s = Object.assign({
                p2p: t,
                cdnld: r,
                loader: {
                    trackerAnnounce: [i],
                    rtcConfig: {
                        iceServers: [{
                            urls: "stun:stun.hitv.com"
                        }]
                    },
                    cacheSize: a + "gb",
                    getFPSig: function(e) {
                        var t, r = (o(e.url).path || "").split("/").pop();
                        return r && -1 !== (t = r.indexOf("_")) ? r.substring(0, t) : null
                    }
                },
                segments: {
                    swarmId: function(e) {
                        var t = e.split("?")[0]
                          , r = o(t);
                        return r && r.path || t
                    }
                }
            }, Ma, this.customConfig)
              , u = new globalThis.P2Hls.Engine(s);
            this.engine = u,
            this._stats = function(e) {
                var t = window.P2Hls.Events
                  , r = new Oa;
                return e.on(t.PeerConnect, function(e) {
                    r.setPeers(e),
                    r.handlePeers(t.PeerConnect, e)
                }).on(t.PeerClose, function(e) {
                    r.delPeers(e),
                    r.handlePeers(t.PeerClose, {
                        id: e
                    })
                }).on(t.PieceBytesLoaded, function(e, t) {
                    r.handleDownload(e, t)
                }).on(t.PieceBytesUploaded, function(e, t) {
                    r.handleUpload(e, t)
                }).on(t.SegmentLoaded, function(e) {
                    r.handleByteReport(Ca.SegmentLoaded, e)
                }).on(t.SegmentAbort, function(e) {
                    r.handleByteReport(Ca.SegmentAbort, e)
                }).on(t.SegmentError, function(e, t) {
                    r.handleByteReport(Ca.SegmentError, e, t)
                }).on(t.SegmentTimeout, function(e) {
                    r.handleByteReport(Ca.SegmentTimeout, e)
                }).on(t.P2PError, function(e) {}).on(t.P2PReport, function(e) {}),
                r
            }(u)
        }
        ,
        r.initPlayer = function() {
            this.player = new La({
                parent: this.parent,
                engine: this.engine
            }),
            this.setElementProperty(this.parent),
            this.player.initKernel("webassembly"),
            this.initEvents()
        }
        ,
        r.initEvents = function() {
            var e = this;
            this.player.addEventListener("metadata", this.onMetaData.bind(this)),
            this.player.addEventListener("playing", this.onPlaying, this),
            this.player.addEventListener("ended", this.onEnded, this),
            this.player.addEventListener("seeked", this.onSeeked, this),
            this.player.addEventListener("playChock", this.onPlayChock, this);
            var t = 0;
            this.timeupdataInterval = setInterval(function() {
                t !== e.player.currentTime && (t = e.player.currentTime,
                e.parent.dispatchEvent(new Event("timeupdate")))
            }, 200)
        }
        ,
        r.onPlayChock = function() {
            this.emit("formatChange", "h264")
        }
        ,
        r.onEnded = function() {
            this.parent.dispatchEvent(new Event("ended"))
        }
        ,
        r.onPlaying = function() {
            this.parent.dispatchEvent(new Event("playing"))
        }
        ,
        r.onSeeked = function() {
            this.parent.dispatchEvent(new Event("seeked"))
        }
        ,
        r.setElementProperty = function(e) {
            var t = this;
            Object.defineProperty(e, "volume", {
                set: function(e) {
                    t._volume = t.player.volume = e,
                    t.parent.dispatchEvent(new Event("volumechange"))
                },
                get: function() {
                    return t.player.volume
                }
            }),
            Object.defineProperty(e, "muted", {
                set: function(e) {
                    t.player.volume = e ? 0 : t._volume
                },
                get: function() {
                    return 0 === t.player.volume
                }
            }),
            Object.defineProperty(e, "buffered", {
                get: function() {
                    return t.player.buffered
                }
            }),
            Object.defineProperty(e, "playbackRate", {
                set: function(e) {
                    t.player.speed = e
                }
            }),
            Object.defineProperty(e, "play", {
                get: function() {
                    return function() {
                        return ln(t, void 0, void 0, function() {
                            return pn(this, function(e) {
                                switch (e.label) {
                                case 0:
                                    return [4, this.player.play()];
                                case 1:
                                    return e.sent(),
                                    [2]
                                }
                            })
                        })
                    }
                }
            })
        }
        ,
        r.onMetaData = function(e) {
            var t = e.data;
            this.metadata = t
        }
        ,
        r.load = function(e, t, r, i, n, a) {
            return ln(this, void 0, void 0, function() {
                return pn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return [4, this.loadDispatch(n)];
                    case 1:
                        return e = r.sent(),
                        this.player.load(e, t),
                        [2]
                    }
                })
            })
        }
        ,
        r.loadLevel = function(e) {
            return ln(this, void 0, void 0, function() {
                var t;
                return pn(this, function(r) {
                    switch (r.label) {
                    case 0:
                        return [4, this.loadDispatch(e)];
                    case 1:
                        return t = r.sent(),
                        [4, this.player.load2(t)];
                    case 2:
                        return r.sent(),
                        [2]
                    }
                })
            })
        }
        ,
        r.loadDispatch = function(e) {
            return void 0 === e && (e = 2),
            ln(this, void 0, void 0, function() {
                var t, r, i, n, a, o, s, u, h, d, f, c, l, p, m;
                return pn(this, function(g) {
                    switch (g.label) {
                    case 0:
                        for (t = this.config.playlist,
                        r = t.stream,
                        i = t.stream_domain,
                        n = 0,
                        a = null,
                        e++,
                        o = 0,
                        s = r; o < s.length; o++)
                            if (u = s[o],
                            0 === e)
                                "0" === u.vip && Number(u.def) > n && (n = Number(u.def),
                                a = u);
                            else if (e === Number(u.def)) {
                                if ("" === u.url)
                                    return [2];
                                a = u;
                                break
                            }
                        h = a.url,
                        d = null,
                        f = 0,
                        c = i,
                        g.label = 1;
                    case 1:
                        if (!(f < c.length))
                            return [3, 6];
                        l = c[f],
                        p = new Ua,
                        g.label = 2;
                    case 2:
                        return g.trys.push([2, 4, , 5]),
                        [4, p.load(l + h)];
                    case 3:
                        return d = g.sent(),
                        [3, 6];
                    case 4:
                        return g.sent(),
                        [3, 5];
                    case 5:
                        return f++,
                        [3, 1];
                    case 6:
                        return d ? (m = d.info,
                        this.emit("hlsDispatcherLoaded", {
                            status: "loadComplete",
                            api: "getDispatcher",
                            url: m,
                            code: d.code || 0,
                            data: m
                        }),
                        [2, m]) : [2]
                    }
                })
            })
        }
        ,
        Object.defineProperty(r, "volume", {
            set: function(e) {
                this.player.volume = e
            },
            enumerable: !0,
            configurable: !0
        }),
        r.startLoad = function(e, t) {}
        ,
        r.stopLoad = function() {}
        ,
        r.play = function() {
            return ln(this, void 0, void 0, function() {
                var e;
                return pn(this, function(t) {
                    switch (t.label) {
                    case 0:
                        return t.trys.push([0, 2, , 3]),
                        [4, this.player.play()];
                    case 1:
                        return t.sent(),
                        this.parent.dispatchEvent(new Event("playing")),
                        [3, 3];
                    case 2:
                        return e = t.sent(),
                        [2, Promise.reject(e)];
                    case 3:
                        return [2]
                    }
                })
            })
        }
        ,
        r.getMetadata = function() {
            return this.metadata
        }
        ,
        r.getSpeed = function() {
            return this.player.loadSpeed
        }
        ,
        r.getFps = function() {
            return 0
        }
        ,
        Object.defineProperty(r, "stats", {
            get: function() {
                return this._stats.getStats()
            },
            enumerable: !0,
            configurable: !0
        }),
        r.getBufferInfo = function() {
            for (var e = this.player.buffered, t = this.player.currentTime, r = 0, i = 0; i < e.length; i++) {
                var n = e.end(i);
                if (n > t) {
                    r = n - t;
                    break
                }
            }
            return {
                len: r
            }
        }
        ,
        r.pause = function() {
            this.parent.dispatchEvent(new Event("pause")),
            this.player.pause()
        }
        ,
        r.destroy = function() {
            this.player.dispose(),
            clearInterval(this.timeupdataInterval)
        }
        ,
        r.resume = function() {
            this.player.resume()
        }
        ,
        r.seek = function(e) {
            this.parent.dispatchEvent(new Event("waiting")),
            this.player.seek(e)
        }
        ,
        Object.defineProperty(r, "currentTime", {
            get: function() {
                return this.player ? this.player.currentTime : 0
            },
            enumerable: !0,
            configurable: !0
        }),
        t
    }(Ve)
      , Na = "2.2.35"
      , za = {
        "Amazon Silk": "amazon_silk",
        "Android Browser": "android",
        Bada: "bada",
        BlackBerry: "blackberry",
        Chrome: "chrome",
        Chromium: "chromium",
        Electron: "electron",
        Epiphany: "epiphany",
        Firefox: "firefox",
        Focus: "focus",
        Generic: "generic",
        "Google Search": "google_search",
        Googlebot: "googlebot",
        "Internet Explorer": "ie",
        "K-Meleon": "k_meleon",
        Maxthon: "maxthon",
        "Microsoft Edge": "edge",
        "MZ Browser": "mz",
        "NAVER Whale Browser": "naver",
        Opera: "opera",
        "Opera Coast": "opera_coast",
        PhantomJS: "phantomjs",
        Puffin: "puffin",
        QupZilla: "qupzilla",
        QQ: "qq",
        QQLite: "qqlite",
        Safari: "safari",
        Sailfish: "sailfish",
        "Samsung Internet for Android": "samsung_internet",
        SeaMonkey: "seamonkey",
        Sleipnir: "sleipnir",
        Swing: "swing",
        Tizen: "tizen",
        "UC Browser": "uc",
        Vivaldi: "vivaldi",
        "WebOS Browser": "webos",
        WeChat: "wechat",
        "Yandex Browser": "yandex",
        Roku: "roku"
    }
      , ja = {
        amazon_silk: "Amazon Silk",
        android: "Android Browser",
        bada: "Bada",
        blackberry: "BlackBerry",
        chrome: "Chrome",
        chromium: "Chromium",
        electron: "Electron",
        epiphany: "Epiphany",
        firefox: "Firefox",
        focus: "Focus",
        generic: "Generic",
        googlebot: "Googlebot",
        google_search: "Google Search",
        ie: "Internet Explorer",
        k_meleon: "K-Meleon",
        maxthon: "Maxthon",
        edge: "Microsoft Edge",
        mz: "MZ Browser",
        naver: "NAVER Whale Browser",
        opera: "Opera",
        opera_coast: "Opera Coast",
        phantomjs: "PhantomJS",
        puffin: "Puffin",
        qupzilla: "QupZilla",
        qq: "QQ Browser",
        qqlite: "QQ Browser Lite",
        safari: "Safari",
        sailfish: "Sailfish",
        samsung_internet: "Samsung Internet for Android",
        seamonkey: "SeaMonkey",
        sleipnir: "Sleipnir",
        swing: "Swing",
        tizen: "Tizen",
        uc: "UC Browser",
        vivaldi: "Vivaldi",
        webos: "WebOS Browser",
        wechat: "WeChat",
        yandex: "Yandex Browser"
    }
      , Ga = {
        tablet: "tablet",
        mobile: "mobile",
        desktop: "desktop",
        tv: "tv"
    }
      , Va = {
        WindowsPhone: "Windows Phone",
        Windows: "Windows",
        MacOS: "macOS",
        iOS: "iOS",
        Android: "Android",
        WebOS: "WebOS",
        BlackBerry: "BlackBerry",
        Bada: "Bada",
        Tizen: "Tizen",
        Linux: "Linux",
        ChromeOS: "Chrome OS",
        PlayStation4: "PlayStation 4",
        Roku: "Roku"
    }
      , Ha = {
        EdgeHTML: "EdgeHTML",
        Blink: "Blink",
        Trident: "Trident",
        Presto: "Presto",
        Gecko: "Gecko",
        WebKit: "WebKit"
    }
      , qa = function() {
        function e() {}
        return e.getFirstMatch = function(e, t) {
            var r = t.match(e);
            return r && r.length > 0 && r[1] || ""
        }
        ,
        e.getSecondMatch = function(e, t) {
            var r = t.match(e);
            return r && r.length > 1 && r[2] || ""
        }
        ,
        e.matchAndReturnConst = function(e, t, r) {
            if (e.test(t))
                return r
        }
        ,
        e.getWindowsVersionName = function(e) {
            switch (e) {
            case "NT":
                return "NT";
            case "XP":
                return "XP";
            case "NT 5.0":
                return "2000";
            case "NT 5.1":
                return "XP";
            case "NT 5.2":
                return "2003";
            case "NT 6.0":
                return "Vista";
            case "NT 6.1":
                return "7";
            case "NT 6.2":
                return "8";
            case "NT 6.3":
                return "8.1";
            case "NT 10.0":
                return "10";
            default:
                return
            }
        }
        ,
        e.getMacOSVersionName = function(e) {
            var t = e.split(".").splice(0, 2).map(function(e) {
                return parseInt(e, 10) || 0
            });
            if (t.push(0),
            10 === t[0])
                switch (t[1]) {
                case 5:
                    return "Leopard";
                case 6:
                    return "Snow Leopard";
                case 7:
                    return "Lion";
                case 8:
                    return "Mountain Lion";
                case 9:
                    return "Mavericks";
                case 10:
                    return "Yosemite";
                case 11:
                    return "El Capitan";
                case 12:
                    return "Sierra";
                case 13:
                    return "High Sierra";
                case 14:
                    return "Mojave";
                case 15:
                    return "Catalina";
                default:
                    return
                }
        }
        ,
        e.getAndroidVersionName = function(e) {
            var t = e.split(".").splice(0, 2).map(function(e) {
                return parseInt(e, 10) || 0
            });
            if (t.push(0),
            !(1 === t[0] && t[1] < 5))
                return 1 === t[0] && t[1] < 6 ? "Cupcake" : 1 === t[0] && t[1] >= 6 ? "Donut" : 2 === t[0] && t[1] < 2 ? "Eclair" : 2 === t[0] && 2 === t[1] ? "Froyo" : 2 === t[0] && t[1] > 2 ? "Gingerbread" : 3 === t[0] ? "Honeycomb" : 4 === t[0] && t[1] < 1 ? "Ice Cream Sandwich" : 4 === t[0] && t[1] < 4 ? "Jelly Bean" : 4 === t[0] && t[1] >= 4 ? "KitKat" : 5 === t[0] ? "Lollipop" : 6 === t[0] ? "Marshmallow" : 7 === t[0] ? "Nougat" : 8 === t[0] ? "Oreo" : 9 === t[0] ? "Pie" : void 0
        }
        ,
        e.getVersionPrecision = function(e) {
            return e.split(".").length
        }
        ,
        e.compareVersions = function(t, r, i) {
            void 0 === i && (i = !1);
            var n = e.getVersionPrecision(t)
              , a = e.getVersionPrecision(r)
              , o = Math.max(n, a)
              , s = 0
              , u = e.map([t, r], function(t) {
                var r = o - e.getVersionPrecision(t)
                  , i = t + new Array(r + 1).join(".0");
                return e.map(i.split("."), function(e) {
                    return new Array(20 - e.length).join("0") + e
                }).reverse()
            });
            for (i && (s = o - Math.min(n, a)),
            o -= 1; o >= s; ) {
                if (u[0][o] > u[1][o])
                    return 1;
                if (u[0][o] === u[1][o]) {
                    if (o === s)
                        return 0;
                    o -= 1
                } else if (u[0][o] < u[1][o])
                    return -1
            }
        }
        ,
        e.map = function(e, t) {
            var r, i = [];
            if (Array.prototype.map)
                return Array.prototype.map.call(e, t);
            for (r = 0; r < e.length; r += 1)
                i.push(t(e[r]));
            return i
        }
        ,
        e.find = function(e, t) {
            var r, i;
            if (Array.prototype.find)
                return Array.prototype.find.call(e, t);
            for (r = 0,
            i = e.length; r < i; r += 1) {
                var n = e[r];
                if (t(n, r))
                    return n
            }
        }
        ,
        e.assign = function(e) {
            for (var t, r, i = e, n = arguments.length, a = new Array(n > 1 ? n - 1 : 0), o = 1; o < n; o++)
                a[o - 1] = arguments[o];
            if (Object.assign)
                return Object.assign.apply(Object, [e].concat(a));
            var s = function() {
                var e = a[t];
                "object" == typeof e && null !== e && Object.keys(e).forEach(function(t) {
                    i[t] = e[t]
                })
            };
            for (t = 0,
            r = a.length; t < r; t += 1)
                s();
            return e
        }
        ,
        e.getBrowserAlias = function(e) {
            return za[e]
        }
        ,
        e.getBrowserTypeByAlias = function(e) {
            return ja[e] || ""
        }
        ,
        e
    }()
      , Ka = /version\/(\d+(\.?_?\d+)+)/i
      , Wa = [{
        test: [/googlebot/i],
        describe: function(e) {
            var t = {
                name: "Googlebot"
            }
              , r = qa.getFirstMatch(/googlebot\/(\d+(\.\d+))/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/opera/i],
        describe: function(e) {
            var t = {
                name: "Opera"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:opera)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/opr\/|opios/i],
        describe: function(e) {
            var t = {
                name: "Opera"
            }
              , r = qa.getFirstMatch(/(?:opr|opios)[\s/](\S+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/SamsungBrowser/i],
        describe: function(e) {
            var t = {
                name: "Samsung Internet for Android"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:SamsungBrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/Whale/i],
        describe: function(e) {
            var t = {
                name: "NAVER Whale Browser"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:whale)[\s/](\d+(?:\.\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/MZBrowser/i],
        describe: function(e) {
            var t = {
                name: "MZ Browser"
            }
              , r = qa.getFirstMatch(/(?:MZBrowser)[\s/](\d+(?:\.\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/focus/i],
        describe: function(e) {
            var t = {
                name: "Focus"
            }
              , r = qa.getFirstMatch(/(?:focus)[\s/](\d+(?:\.\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/swing/i],
        describe: function(e) {
            var t = {
                name: "Swing"
            }
              , r = qa.getFirstMatch(/(?:swing)[\s/](\d+(?:\.\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/coast/i],
        describe: function(e) {
            var t = {
                name: "Opera Coast"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:coast)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/opt\/\d+(?:.?_?\d+)+/i],
        describe: function(e) {
            var t = {
                name: "Opera Touch"
            }
              , r = qa.getFirstMatch(/(?:opt)[\s/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/yabrowser/i],
        describe: function(e) {
            var t = {
                name: "Yandex Browser"
            }
              , r = qa.getFirstMatch(/(?:yabrowser)[\s/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/ucbrowser/i],
        describe: function(e) {
            var t = {
                name: "UC Browser"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:ucbrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/Maxthon|mxios/i],
        describe: function(e) {
            var t = {
                name: "Maxthon"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:Maxthon|mxios)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/epiphany/i],
        describe: function(e) {
            var t = {
                name: "Epiphany"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:epiphany)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/puffin/i],
        describe: function(e) {
            var t = {
                name: "Puffin"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:puffin)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/sleipnir/i],
        describe: function(e) {
            var t = {
                name: "Sleipnir"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:sleipnir)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/k-meleon/i],
        describe: function(e) {
            var t = {
                name: "K-Meleon"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/(?:k-meleon)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/micromessenger/i],
        describe: function(e) {
            var t = {
                name: "WeChat"
            }
              , r = qa.getFirstMatch(/(?:micromessenger)[\s/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/qqbrowser/i],
        describe: function(e) {
            var t = {
                name: /qqbrowserlite/i.test(e) ? "QQ Browser Lite" : "QQ Browser"
            }
              , r = qa.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/msie|trident/i],
        describe: function(e) {
            var t = {
                name: "Internet Explorer"
            }
              , r = qa.getFirstMatch(/(?:msie |rv:)(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/\sedg\//i],
        describe: function(e) {
            var t = {
                name: "Microsoft Edge"
            }
              , r = qa.getFirstMatch(/\sedg\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/edg([ea]|ios)/i],
        describe: function(e) {
            var t = {
                name: "Microsoft Edge"
            }
              , r = qa.getSecondMatch(/edg([ea]|ios)\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/vivaldi/i],
        describe: function(e) {
            var t = {
                name: "Vivaldi"
            }
              , r = qa.getFirstMatch(/vivaldi\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/seamonkey/i],
        describe: function(e) {
            var t = {
                name: "SeaMonkey"
            }
              , r = qa.getFirstMatch(/seamonkey\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/sailfish/i],
        describe: function(e) {
            var t = {
                name: "Sailfish"
            }
              , r = qa.getFirstMatch(/sailfish\s?browser\/(\d+(\.\d+)?)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/silk/i],
        describe: function(e) {
            var t = {
                name: "Amazon Silk"
            }
              , r = qa.getFirstMatch(/silk\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/phantom/i],
        describe: function(e) {
            var t = {
                name: "PhantomJS"
            }
              , r = qa.getFirstMatch(/phantomjs\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/slimerjs/i],
        describe: function(e) {
            var t = {
                name: "SlimerJS"
            }
              , r = qa.getFirstMatch(/slimerjs\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
        describe: function(e) {
            var t = {
                name: "BlackBerry"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/blackberry[\d]+\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/(web|hpw)[o0]s/i],
        describe: function(e) {
            var t = {
                name: "WebOS Browser"
            }
              , r = qa.getFirstMatch(Ka, e) || qa.getFirstMatch(/w(?:eb)?[o0]sbrowser\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/bada/i],
        describe: function(e) {
            var t = {
                name: "Bada"
            }
              , r = qa.getFirstMatch(/dolfin\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/tizen/i],
        describe: function(e) {
            var t = {
                name: "Tizen"
            }
              , r = qa.getFirstMatch(/(?:tizen\s?)?browser\/(\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/qupzilla/i],
        describe: function(e) {
            var t = {
                name: "QupZilla"
            }
              , r = qa.getFirstMatch(/(?:qupzilla)[\s/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/firefox|iceweasel|fxios/i],
        describe: function(e) {
            var t = {
                name: "Firefox"
            }
              , r = qa.getFirstMatch(/(?:firefox|iceweasel|fxios)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/electron/i],
        describe: function(e) {
            var t = {
                name: "Electron"
            }
              , r = qa.getFirstMatch(/(?:electron)\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/MiuiBrowser/i],
        describe: function(e) {
            var t = {
                name: "Miui"
            }
              , r = qa.getFirstMatch(/(?:MiuiBrowser)[\s/](\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/chromium/i],
        describe: function(e) {
            var t = {
                name: "Chromium"
            }
              , r = qa.getFirstMatch(/(?:chromium)[\s/](\d+(\.?_?\d+)+)/i, e) || qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/chrome|crios|crmo/i],
        describe: function(e) {
            var t = {
                name: "Chrome"
            }
              , r = qa.getFirstMatch(/(?:chrome|crios|crmo)\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/GSA/i],
        describe: function(e) {
            var t = {
                name: "Google Search"
            }
              , r = qa.getFirstMatch(/(?:GSA)\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: function(e) {
            var t = !e.test(/like android/i)
              , r = e.test(/android/i);
            return t && r
        },
        describe: function(e) {
            var t = {
                name: "Android Browser"
            }
              , r = qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/playstation 4/i],
        describe: function(e) {
            var t = {
                name: "PlayStation 4"
            }
              , r = qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/safari|applewebkit/i],
        describe: function(e) {
            var t = {
                name: "Safari"
            }
              , r = qa.getFirstMatch(Ka, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/.*/i],
        describe: function(e) {
            var t = -1 !== e.search("\\(") ? /^(.*)\/(.*)[ \t]\((.*)/ : /^(.*)\/(.*) /;
            return {
                name: qa.getFirstMatch(t, e),
                version: qa.getSecondMatch(t, e)
            }
        }
    }]
      , Ya = [{
        test: [/Roku\/DVP/],
        describe: function(e) {
            var t = qa.getFirstMatch(/Roku\/DVP-(\d+\.\d+)/i, e);
            return {
                name: Va.Roku,
                version: t
            }
        }
    }, {
        test: [/windows phone/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/windows phone (?:os)?\s?(\d+(\.\d+)*)/i, e);
            return {
                name: Va.WindowsPhone,
                version: t
            }
        }
    }, {
        test: [/windows /i],
        describe: function(e) {
            var t = qa.getFirstMatch(/Windows ((NT|XP)( \d\d?.\d)?)/i, e)
              , r = qa.getWindowsVersionName(t);
            return {
                name: Va.Windows,
                version: t,
                versionName: r
            }
        }
    }, {
        test: [/Macintosh(.*?) FxiOS(.*?)\//],
        describe: function(e) {
            var t = {
                name: Va.iOS
            }
              , r = qa.getSecondMatch(/(Version\/)(\d[\d.]+)/, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/macintosh/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/mac os x (\d+(\.?_?\d+)+)/i, e).replace(/[_\s]/g, ".")
              , r = qa.getMacOSVersionName(t)
              , i = {
                name: Va.MacOS,
                version: t
            };
            return r && (i.versionName = r),
            i
        }
    }, {
        test: [/(ipod|iphone|ipad)/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/os (\d+([_\s]\d+)*) like mac os x/i, e).replace(/[_\s]/g, ".");
            return {
                name: Va.iOS,
                version: t
            }
        }
    }, {
        test: function(e) {
            var t = !e.test(/like android/i)
              , r = e.test(/android/i);
            return t && r
        },
        describe: function(e) {
            var t = qa.getFirstMatch(/android[\s/-](\d+(\.\d+)*)/i, e)
              , r = qa.getAndroidVersionName(t)
              , i = {
                name: Va.Android,
                version: t
            };
            return r && (i.versionName = r),
            i
        }
    }, {
        test: [/(web|hpw)[o0]s/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/(?:web|hpw)[o0]s\/(\d+(\.\d+)*)/i, e)
              , r = {
                name: Va.WebOS
            };
            return t && t.length && (r.version = t),
            r
        }
    }, {
        test: [/blackberry|\bbb\d+/i, /rim\stablet/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/rim\stablet\sos\s(\d+(\.\d+)*)/i, e) || qa.getFirstMatch(/blackberry\d+\/(\d+([_\s]\d+)*)/i, e) || qa.getFirstMatch(/\bbb(\d+)/i, e);
            return {
                name: Va.BlackBerry,
                version: t
            }
        }
    }, {
        test: [/bada/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/bada\/(\d+(\.\d+)*)/i, e);
            return {
                name: Va.Bada,
                version: t
            }
        }
    }, {
        test: [/tizen/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/tizen[/\s](\d+(\.\d+)*)/i, e);
            return {
                name: Va.Tizen,
                version: t
            }
        }
    }, {
        test: [/linux/i],
        describe: function() {
            return {
                name: Va.Linux
            }
        }
    }, {
        test: [/CrOS/],
        describe: function() {
            return {
                name: Va.ChromeOS
            }
        }
    }, {
        test: [/PlayStation 4/],
        describe: function(e) {
            var t = qa.getFirstMatch(/PlayStation 4[/\s](\d+(\.\d+)*)/i, e);
            return {
                name: Va.PlayStation4,
                version: t
            }
        }
    }]
      , Xa = [{
        test: [/googlebot/i],
        describe: function() {
            return {
                type: "bot",
                vendor: "Google"
            }
        }
    }, {
        test: [/huawei/i],
        describe: function(e) {
            var t = qa.getFirstMatch(/(can-l01)/i, e) && "Nova"
              , r = {
                type: Ga.mobile,
                vendor: "Huawei"
            };
            return t && (r.model = t),
            r
        }
    }, {
        test: [/nexus\s*(?:7|8|9|10).*/i],
        describe: function() {
            return {
                type: Ga.tablet,
                vendor: "Nexus"
            }
        }
    }, {
        test: [/ipad/i],
        describe: function() {
            return {
                type: Ga.tablet,
                vendor: "Apple",
                model: "iPad"
            }
        }
    }, {
        test: [/Macintosh(.*?) FxiOS(.*?)\//],
        describe: function() {
            return {
                type: Ga.tablet,
                vendor: "Apple",
                model: "iPad"
            }
        }
    }, {
        test: [/kftt build/i],
        describe: function() {
            return {
                type: Ga.tablet,
                vendor: "Amazon",
                model: "Kindle Fire HD 7"
            }
        }
    }, {
        test: [/silk/i],
        describe: function() {
            return {
                type: Ga.tablet,
                vendor: "Amazon"
            }
        }
    }, {
        test: [/tablet(?! pc)/i],
        describe: function() {
            return {
                type: Ga.tablet
            }
        }
    }, {
        test: function(e) {
            var t = e.test(/ipod|iphone/i)
              , r = e.test(/like (ipod|iphone)/i);
            return t && !r
        },
        describe: function(e) {
            var t = qa.getFirstMatch(/(ipod|iphone)/i, e);
            return {
                type: Ga.mobile,
                vendor: "Apple",
                model: t
            }
        }
    }, {
        test: [/nexus\s*[0-6].*/i, /galaxy nexus/i],
        describe: function() {
            return {
                type: Ga.mobile,
                vendor: "Nexus"
            }
        }
    }, {
        test: [/[^-]mobi/i],
        describe: function() {
            return {
                type: Ga.mobile
            }
        }
    }, {
        test: function(e) {
            return "blackberry" === e.getBrowserName(!0)
        },
        describe: function() {
            return {
                type: Ga.mobile,
                vendor: "BlackBerry"
            }
        }
    }, {
        test: function(e) {
            return "bada" === e.getBrowserName(!0)
        },
        describe: function() {
            return {
                type: Ga.mobile
            }
        }
    }, {
        test: function(e) {
            return "windows phone" === e.getBrowserName()
        },
        describe: function() {
            return {
                type: Ga.mobile,
                vendor: "Microsoft"
            }
        }
    }, {
        test: function(e) {
            var t = Number(String(e.getOSVersion()).split(".")[0]);
            return "android" === e.getOSName(!0) && t >= 3
        },
        describe: function() {
            return {
                type: Ga.tablet
            }
        }
    }, {
        test: function(e) {
            return "android" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.mobile
            }
        }
    }, {
        test: function(e) {
            return "macos" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.desktop,
                vendor: "Apple"
            }
        }
    }, {
        test: function(e) {
            return "windows" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.desktop
            }
        }
    }, {
        test: function(e) {
            return "linux" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.desktop
            }
        }
    }, {
        test: function(e) {
            return "playstation 4" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.tv
            }
        }
    }, {
        test: function(e) {
            return "roku" === e.getOSName(!0)
        },
        describe: function() {
            return {
                type: Ga.tv
            }
        }
    }]
      , $a = [{
        test: function(e) {
            return "microsoft edge" === e.getBrowserName(!0)
        },
        describe: function(e) {
            if (/\sedg\//i.test(e))
                return {
                    name: Ha.Blink
                };
            var t = qa.getFirstMatch(/edge\/(\d+(\.?_?\d+)+)/i, e);
            return {
                name: Ha.EdgeHTML,
                version: t
            }
        }
    }, {
        test: [/trident/i],
        describe: function(e) {
            var t = {
                name: Ha.Trident
            }
              , r = qa.getFirstMatch(/trident\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: function(e) {
            return e.test(/presto/i)
        },
        describe: function(e) {
            var t = {
                name: Ha.Presto
            }
              , r = qa.getFirstMatch(/presto\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: function(e) {
            var t = e.test(/gecko/i)
              , r = e.test(/like gecko/i);
            return t && !r
        },
        describe: function(e) {
            var t = {
                name: Ha.Gecko
            }
              , r = qa.getFirstMatch(/gecko\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }, {
        test: [/(apple)?webkit\/537\.36/i],
        describe: function() {
            return {
                name: Ha.Blink
            }
        }
    }, {
        test: [/(apple)?webkit/i],
        describe: function(e) {
            var t = {
                name: Ha.WebKit
            }
              , r = qa.getFirstMatch(/webkit\/(\d+(\.?_?\d+)+)/i, e);
            return r && (t.version = r),
            t
        }
    }]
      , Za = function() {
        function e(e, t) {
            if (void 0 === t && (t = !1),
            null == e || "" === e)
                throw new Error("UserAgent parameter can't be empty");
            this._ua = e,
            this.parsedResult = {},
            !0 !== t && this.parse()
        }
        var t = e.prototype;
        return t.getUA = function() {
            return this._ua
        }
        ,
        t.test = function(e) {
            return e.test(this._ua)
        }
        ,
        t.parseBrowser = function() {
            var e = this;
            this.parsedResult.browser = {};
            var t = qa.find(Wa, function(t) {
                if ("function" == typeof t.test)
                    return t.test(e);
                if (t.test instanceof Array)
                    return t.test.some(function(t) {
                        return e.test(t)
                    });
                throw new Error("Browser's test function is not valid")
            });
            return t && (this.parsedResult.browser = t.describe(this.getUA())),
            this.parsedResult.browser
        }
        ,
        t.getBrowser = function() {
            return this.parsedResult.browser ? this.parsedResult.browser : this.parseBrowser()
        }
        ,
        t.getBrowserName = function(e) {
            return e ? String(this.getBrowser().name).toLowerCase() || "" : this.getBrowser().name || ""
        }
        ,
        t.getBrowserVersion = function() {
            return this.getBrowser().version
        }
        ,
        t.getOS = function() {
            return this.parsedResult.os ? this.parsedResult.os : this.parseOS()
        }
        ,
        t.parseOS = function() {
            var e = this;
            this.parsedResult.os = {};
            var t = qa.find(Ya, function(t) {
                if ("function" == typeof t.test)
                    return t.test(e);
                if (t.test instanceof Array)
                    return t.test.some(function(t) {
                        return e.test(t)
                    });
                throw new Error("Browser's test function is not valid")
            });
            return t && (this.parsedResult.os = t.describe(this.getUA())),
            this.parsedResult.os
        }
        ,
        t.getOSName = function(e) {
            var t = this.getOS().name;
            return e ? String(t).toLowerCase() || "" : t || ""
        }
        ,
        t.getOSVersion = function() {
            return this.getOS().version
        }
        ,
        t.getPlatform = function() {
            return this.parsedResult.platform ? this.parsedResult.platform : this.parsePlatform()
        }
        ,
        t.getPlatformType = function(e) {
            void 0 === e && (e = !1);
            var t = this.getPlatform().type;
            return e ? String(t).toLowerCase() || "" : t || ""
        }
        ,
        t.parsePlatform = function() {
            var e = this;
            this.parsedResult.platform = {};
            var t = qa.find(Xa, function(t) {
                if ("function" == typeof t.test)
                    return t.test(e);
                if (t.test instanceof Array)
                    return t.test.some(function(t) {
                        return e.test(t)
                    });
                throw new Error("Browser's test function is not valid")
            });
            return t && (this.parsedResult.platform = t.describe(this.getUA())),
            this.parsedResult.platform
        }
        ,
        t.getEngine = function() {
            return this.parsedResult.engine ? this.parsedResult.engine : this.parseEngine()
        }
        ,
        t.getEngineName = function(e) {
            return e ? String(this.getEngine().name).toLowerCase() || "" : this.getEngine().name || ""
        }
        ,
        t.parseEngine = function() {
            var e = this;
            this.parsedResult.engine = {};
            var t = qa.find($a, function(t) {
                if ("function" == typeof t.test)
                    return t.test(e);
                if (t.test instanceof Array)
                    return t.test.some(function(t) {
                        return e.test(t)
                    });
                throw new Error("Browser's test function is not valid")
            });
            return t && (this.parsedResult.engine = t.describe(this.getUA())),
            this.parsedResult.engine
        }
        ,
        t.parse = function() {
            return this.parseBrowser(),
            this.parseOS(),
            this.parsePlatform(),
            this.parseEngine(),
            this
        }
        ,
        t.getResult = function() {
            return qa.assign({}, this.parsedResult)
        }
        ,
        t.satisfies = function(e) {
            var t = this
              , r = {}
              , i = 0
              , n = {}
              , a = 0;
            if (Object.keys(e).forEach(function(t) {
                var o = e[t];
                "string" == typeof o ? (n[t] = o,
                a += 1) : "object" == typeof o && (r[t] = o,
                i += 1)
            }),
            i > 0) {
                var o = Object.keys(r)
                  , s = qa.find(o, function(e) {
                    return t.isOS(e)
                });
                if (s) {
                    var u = this.satisfies(r[s]);
                    if (void 0 !== u)
                        return u
                }
                var h = qa.find(o, function(e) {
                    return t.isPlatform(e)
                });
                if (h) {
                    var d = this.satisfies(r[h]);
                    if (void 0 !== d)
                        return d
                }
            }
            if (a > 0) {
                var f = Object.keys(n)
                  , c = qa.find(f, function(e) {
                    return t.isBrowser(e, !0)
                });
                if (void 0 !== c)
                    return this.compareVersion(n[c])
            }
        }
        ,
        t.isBrowser = function(e, t) {
            void 0 === t && (t = !1);
            var r = this.getBrowserName().toLowerCase()
              , i = e.toLowerCase()
              , n = qa.getBrowserTypeByAlias(i);
            return t && n && (i = n.toLowerCase()),
            i === r
        }
        ,
        t.compareVersion = function(e) {
            var t = [0]
              , r = e
              , i = !1
              , n = this.getBrowserVersion();
            if ("string" == typeof n)
                return ">" === e[0] || "<" === e[0] ? (r = e.substr(1),
                "=" === e[1] ? (i = !0,
                r = e.substr(2)) : t = [],
                ">" === e[0] ? t.push(1) : t.push(-1)) : "=" === e[0] ? r = e.substr(1) : "~" === e[0] && (i = !0,
                r = e.substr(1)),
                t.indexOf(qa.compareVersions(n, r, i)) > -1
        }
        ,
        t.isOS = function(e) {
            return this.getOSName(!0) === String(e).toLowerCase()
        }
        ,
        t.isPlatform = function(e) {
            return this.getPlatformType(!0) === String(e).toLowerCase()
        }
        ,
        t.isEngine = function(e) {
            return this.getEngineName(!0) === String(e).toLowerCase()
        }
        ,
        t.is = function(e, t) {
            return void 0 === t && (t = !1),
            this.isBrowser(e, t) || this.isOS(e) || this.isPlatform(e)
        }
        ,
        t.some = function(e) {
            var t = this;
            return void 0 === e && (e = []),
            e.some(function(e) {
                return t.is(e)
            })
        }
        ,
        e
    }()
      , Qa = function() {
        function e() {}
        return e.getParser = function(e, t) {
            if (void 0 === t && (t = !1),
            "string" != typeof e)
                throw new Error("UserAgent should be a string");
            return new Za(e,t)
        }
        ,
        e.parse = function(e) {
            return new Za(e).getResult()
        }
        ,
        r(e, null, [{
            key: "BROWSER_MAP",
            get: function() {
                return ja
            }
        }, {
            key: "ENGINE_MAP",
            get: function() {
                return Ha
            }
        }, {
            key: "OS_MAP",
            get: function() {
                return Va
            }
        }, {
            key: "PLATFORMS_MAP",
            get: function() {
                return Ga
            }
        }]),
        e
    }()
      , Ja = "https://pcweb.api.mgtv.com/config/play"
      , eo = "mango-config-play"
      , to = {
        isLive: !1,
        box: "",
        preset: {},
        presetConfig: {}
    }
      , ro = !0;
    var io = function() {
        function e(e, t) {
            void 0 === t && (t = !1);
            var r = this;
            this.eventMap = {},
            this.ready = !1,
            this.currentStreamId = "",
            this.initTimeout = 0,
            this.eventMap = {},
            this.ready = !1;
            var i = "string" == typeof e ? document.getElementById(e) : e;
            this.element = i,
            this.flashplayer = this.element.childNodes[0],
            (window || document).Player = this,
            this.addEventListener("loaded", this.onReady, this),
            this.addEventListener("loadedmetadata", this.onMetaData, this),
            this.initTimeout = setTimeout(function() {
                r.dispatchEvent("flashInitFail", null),
                r.removeEvents()
            }, 5e3)
        }
        var t = e.prototype;
        return t.onReady = function() {
            this.ready = !0,
            clearTimeout(this.initTimeout)
        }
        ,
        t.getReady = function() {
            return ln(this, void 0, void 0, function() {
                var e = this;
                return pn(this, function(t) {
                    return [2, new Promise(function(t) {
                        e.ready ? t() : e.addEventListener("loaded", function() {
                            t()
                        }, e)
                    }
                    )]
                })
            })
        }
        ,
        t.getProp = function(e) {
            return this.flashplayer ? this.flashplayer.getProp(e) : null
        }
        ,
        t.setProp = function(e, t) {
            return this.flashplayer ? this.flashplayer.setProp(e, t) : null
        }
        ,
        t.getCurrentTime = function() {
            return this.ready && this.flashplayer && this.flashplayer.getProp ? this.flashplayer.getProp("currentTime") : 0
        }
        ,
        t.createStream = function(e) {
            return ln(this, void 0, void 0, function() {
                var t = this;
                return pn(this, function(r) {
                    return [2, new Promise(function(r) {
                        t.addEventListener("streamcreated", function(e) {
                            t.removeEvent("streamcreated"),
                            r(e)
                        }, t),
                        t.flashplayer.createStream(e)
                    }
                    )]
                })
            })
        }
        ,
        t.loadStream = function(e, t, r) {
            return this.flashplayer.loadStream(e, t, r)
        }
        ,
        t.attachStream = function(e) {
            return this.currentStreamId = e,
            this.flashplayer.attachStream(e)
        }
        ,
        t.disposeStream = function(e) {
            return this.flashplayer.disposeStream(e)
        }
        ,
        t.onMetaData = function(e) {
            this.metadata = e,
            this.dispatchEvent("metadata", e)
        }
        ,
        t.eventHandler = function(e, t) {
            this.dispatchEvent(e, t)
        }
        ,
        t.play = function() {
            this.flashplayer.play()
        }
        ,
        t.play2 = function(e, t, r) {
            this.flashplayer.play2(e)
        }
        ,
        t.pause = function() {
            this.flashplayer.pause()
        }
        ,
        t.resume = function() {
            this.flashplayer.resume()
        }
        ,
        t.stop = function() {
            this.flashplayer.stop()
        }
        ,
        t.seek = function(e) {
            this.flashplayer.seek(e)
        }
        ,
        t.addEventListener = function(e, t, r) {
            void 0 === r && (r = null),
            null == this.eventMap[e] && (this.eventMap[e] = []),
            this.eventMap[e].some(function(e) {
                return t === e.callback
            }) || this.eventMap[e].push({
                callback: t,
                thisIs: r
            })
        }
        ,
        t.dispatchEvent = function(e, t) {
            this.eventMap[e] && this.eventMap[e].forEach(function(e) {
                e.callback.call(e.thisIs, t)
            })
        }
        ,
        t.removeEventListener = function(e, t) {
            if (null != this.eventMap[e])
                for (var r = 0; r < this.eventMap[e].length; r++)
                    if (this.eventMap[e][r].callback === t) {
                        this.eventMap[e].splice(r, 1);
                        break
                    }
        }
        ,
        t.removeEvent = function(e) {
            delete this.eventMap[e]
        }
        ,
        t.removeEvents = function() {
            this.eventMap = {}
        }
        ,
        t.destroy = function() {}
        ,
        e
    }()
      , no = function(e) {
        function t(t, r, i) {
            var n = e.call(this) || this;
            return n._currentStreamId = "",
            n._nextStreamId = "",
            n._config = r,
            n.player = new io(t,!0),
            n.player.addEventListener("flashInitFail", n.onFlashInitFail, n),
            n
        }
        cn(t, e);
        var r = t.prototype;
        return r.onFlashInitFail = function() {
            this.emit("flashInitFail", {
                data: {},
                type: "flashInitFail"
            })
        }
        ,
        r.load = function(e, t, r) {
            return void 0 === t && (t = 0),
            void 0 === r && (r = 16 / 9),
            ln(this, void 0, void 0, function() {
                var i;
                return pn(this, function(n) {
                    switch (n.label) {
                    case 0:
                        return [4, this.player.getReady()];
                    case 1:
                        return n.sent(),
                        this.player.setProp("ratio", r),
                        this._currentStreamId && this.player.disposeStream(this._currentStreamId),
                        [4, this.player.createStream(this.getVideoType(e))];
                    case 2:
                        return i = n.sent(),
                        this.player.loadStream(i, e, t),
                        this._currentStreamId = i,
                        this.player.attachStream(i),
                        this.player.play(),
                        [2]
                    }
                })
            })
        }
        ,
        r.play = function() {
            try {
                this.player.play()
            } catch (e) {}
        }
        ,
        r.playNext = function(e) {
            var t = this;
            return new Promise(function(e, r) {
                if ("" != t._nextStreamId) {
                    t._currentStreamId && t.player.disposeStream(t._currentStreamId),
                    t._currentStreamId = t._nextStreamId,
                    t._nextStreamId = "",
                    t.player.attachStream(t._currentStreamId);
                    try {
                        var i = setTimeout(function() {
                            t.player.removeEvent("timeupdate"),
                            clearTimeout(i),
                            r("flash preload play fail.")
                        }, 1e3);
                        t.player.addEventListener("timeupdate", function() {
                            t.player.getProp("currentTime") > 0 && (t.player.removeEvent("timeupdate"),
                            clearTimeout(i),
                            e(null))
                        }),
                        t.player.play()
                    } catch (e) {
                        r("flash player not ready!")
                    }
                } else
                    r("no perload")
            }
            )
        }
        ,
        r.preload = function(e, t, r) {
            return void 0 === t && (t = 0),
            void 0 === r && (r = !0),
            ln(this, void 0, void 0, function() {
                var r;
                return pn(this, function(i) {
                    switch (i.label) {
                    case 0:
                        return [4, this.player.getReady()];
                    case 1:
                        return i.sent(),
                        [4, this.player.createStream(this.getVideoType(e))];
                    case 2:
                        return r = i.sent(),
                        this.player.loadStream(r, e, t),
                        this._nextStreamId = r,
                        [2]
                    }
                })
            })
        }
        ,
        r.startLoad = function(e, t) {
            void 0 === t && (t = -1);
            var r = -1 != t ? t : 0;
            this.load(e, r)
        }
        ,
        r.refresh = function() {
            this.load(this._config.src, 0)
        }
        ,
        r.stopLoad = function() {}
        ,
        r.attachMedia = function() {}
        ,
        r.getMetadata = function() {
            return this.player.metadata
        }
        ,
        r.getSpeed = function() {
            return this.player.getProp("currentBytesPerSecond") / 8e3
        }
        ,
        r.getVideoType = function(e) {
            return -1 != e.indexOf(".m3u8") ? "hls" : -1 != e.indexOf(".mp4") || -1 != e.indexOf(".flv") ? "mp4" : "auto"
        }
        ,
        r.seek = function(e) {
            this.player.seek(e)
        }
        ,
        r.pause = function() {
            this.player.pause()
        }
        ,
        Object.defineProperty(r, "currentTime", {
            get: function() {
                return this.player.getCurrentTime()
            },
            enumerable: !0,
            configurable: !0
        }),
        r.getBufferInfo = function() {
            return {
                len: this.player.getProp("buffered") - this.player.getProp("currentTime")
            }
        }
        ,
        r.getFps = function() {
            return this.player.element.currentFPS || 0
        }
        ,
        r.destroy = function() {
            return this.player.destroy()
        }
        ,
        t
    }(Ue);
    function ao(e, t, r) {
        "string" == typeof t && (t = function(e) {
            for (var t = e.length, r = new ArrayBuffer(2 * t), i = new Uint16Array(r), n = 0; n < t; n++)
                i[n] = e.charCodeAt(n);
            return i
        }(t));
        var i = e.byteLength + 4 + t.byteLength + 4 + r.byteLength
          , n = 0
          , a = new ArrayBuffer(i)
          , o = new DataView(a)
          , s = new Uint8Array(a,n,e.byteLength);
        s.set(e),
        n += s.byteLength,
        o.setUint32(n, t.byteLength, !0),
        n += 4;
        var u = new Uint16Array(a,n,t.length);
        return u.set(t),
        n += u.byteLength,
        o.setUint32(n, r.byteLength, !0),
        n += 4,
        new Uint8Array(a,n,r.byteLength).set(r),
        new Uint8Array(a,0,a.byteLength)
    }
    /**
 * native source handler for supporting Fairplay streaming.
 * This source handler only supports encrypted HLS playback.
 * It does not contain any fallbacks.
 *
 * Demo: https://bitmovin.com/demos/drm
 * Licence:  https://www.mgtv.com/xml/player/drm/fairplay.cer
 * vid: 5161084
 *
 * dns + 175.6.15.195 pcweb.api.mgtv.com
 *
 * @author genie88 (genie88@163.com)
 * MIT Licensed
 **/
    var oo = "keySystemNotSupport"
      , so = "createMediaKeys"
      , uo = "createKeySession"
      , ho = "fetchCertificateError"
      , fo = "fetchLicenseError"
      , co = "KeySessionWebkitKeyError"
      , lo = function() {
        function e(e, t) {
            e.src && (this.url = e.src,
            this.video = t.video,
            e && e.drmData && (this.drmData = {
                certificateUrl: "https://www.mgtv.com/xml/player/drm/fairplay.cer",
                licenseUrl: e.drmData["com.apple.fps.1_0"].serverURL,
                keySystem: "com.apple.fps.1_0"
            }),
            this.kernel = t,
            this.onCertificateError = this.onCertificateError.bind(this),
            this.onCertificateLoad = this.onCertificateLoad.bind(this),
            this.onKeySessionWebkitKeyAdded = this.onKeySessionWebkitKeyAdded.bind(this),
            this.onKeySessionWebkitKeyError = this.onKeySessionWebkitKeyError.bind(this),
            this.onKeySessionWebkitKeyMessage = this.onKeySessionWebkitKeyMessage.bind(this),
            this.onLicenseError = this.onLicenseError.bind(this),
            this.onLicenseLoad = this.onLicenseLoad.bind(this),
            this.onVideoWebkitNeedKey = this.onVideoWebkitNeedKey.bind(this),
            t.isReady_ = !1,
            this.src(e))
        }
        var t = e.prototype;
        return t.createKeySession = function(e, t) {
            if (ir.info("fairplay", "createKeySession with keySystem " + e),
            !this.video.webkitKeys) {
                if (!WebKitMediaKeys.isTypeSupported(e, "video/mp4"))
                    return void this.kernel.emit("nativeStreamError", {
                        url: this.url,
                        fatal: !0,
                        code: 300,
                        details: oo
                    });
                this.video.webkitSetMediaKeys(new WebKitMediaKeys(e))
            }
            if (!this.video.webkitKeys)
                return ir.error("fairplay", "create mediakeys error."),
                void this.kernel.emit("nativeStreamError", {
                    url: this.url,
                    fatal: !0,
                    code: 301,
                    details: so
                });
            ir.info("fairplay", "create key session ...");
            var r = this.video.webkitKeys.createSession("video/mp4", t);
            return r || (ir.error("fairplay", "create key session error."),
            void this.kernel.emit("nativeStreamError", {
                url: this.url,
                fatal: !0,
                code: 302,
                details: uo
            }))
        }
        ,
        t.fetchCertificate = function(e) {
            var t = this
              , r = this.drmData.certificateUrl;
            ir.info("fairplay", "fetch certificate: " + r);
            var i = new XMLHttpRequest;
            i.responseType = "arraybuffer",
            i.addEventListener("error", this.onCertificateError, !1),
            i.addEventListener("load", function(r) {
                t.onCertificateLoad(r, e)
            }, !1),
            i.open("GET", r, !0),
            i.send()
        }
        ,
        t.fetchLicense = function(e) {
            var t = e.target
              , r = e.message
              , i = this.drmData.licenseUrl;
            ir.info("fairplay", "fetch license: " + i);
            var n = new XMLHttpRequest;
            n.responseType = "arraybuffer",
            n.session = t,
            n.addEventListener("error", this.onLicenseError, !1),
            n.addEventListener("load", this.onLicenseLoad, !1),
            n.open("POST", i, !0),
            n.setRequestHeader("Content-type", "application/octet-stream"),
            n.send(r)
        }
        ,
        t.hasProtection = function(e) {
            var t = void 0 === e ? {} : e
              , r = t.certificateUrl
              , i = t.keySystem
              , n = t.licenseUrl;
            return r && i && n
        }
        ,
        t.onCertificateError = function() {
            this.kernel.emit("nativeStreamError", {
                url: this.url,
                fatal: !0,
                code: 303,
                details: ho
            })
        }
        ,
        t.onCertificateLoad = function(e, t) {
            var r = e.target
              , i = r.response;
            200 === r.status ? (ir.info("fairplay", "fetch certifacate ok."),
            this.certificate = new Uint8Array(i),
            t()) : this.onCertificateError()
        }
        ,
        t.onKeySessionWebkitKeyAdded = function() {
            ir.info("fairplay", "Decryption key was added to the session.")
        }
        ,
        t.onKeySessionWebkitKeyError = function() {
            this.kernel.emit("nativeStreamError", {
                url: this.url,
                fatal: !0,
                code: 304,
                details: co,
                message: "A decryption key error was encountered"
            })
        }
        ,
        t.onKeySessionWebkitKeyMessage = function(e) {
            var t = e.message
              , r = e.target;
            ir.info("fairplay", "keySessionWebkitKeyMessage event is triggered."),
            this.fetchLicense({
                message: t,
                target: r
            })
        }
        ,
        t.onLicenseError = function() {
            this.kernel.emit("fairplayLicenseRequest", {
                error: {
                    code: 305,
                    details: fo
                }
            }),
            this.kernel.emit("nativeStreamError", {
                url: this.url,
                fatal: !0,
                code: 305,
                details: fo
            })
        }
        ,
        t.onLicenseLoad = function(e) {
            var t = e.target
              , r = t.response
              , i = t.session;
            200 === t.status ? (this.kernel.emit("fairplayLicenseRequest", {}),
            ir.info("fairplay", "fetch license ok."),
            i.update(new Uint8Array(r))) : this.onLicenseError()
        }
        ,
        t.onVideoWebkitNeedKey = function(e) {
            var t = this.drmData.keySystem;
            ir.info("fairplay", "videoWebkitNeedKey event is triggered.");
            var r, i, n, a = (n = e.initData,
            r = String.fromCharCode.apply(null, new Uint16Array(n.buffer)),
            (i = document.createElement("a")).href = r,
            i.hostname), o = ao(e.initData, a, this.certificate), s = this.createKeySession(t, o);
            s.contentId = a,
            s.addEventListener("webkitkeyadded", this.onKeySessionWebkitKeyAdded, !1),
            s.addEventListener("webkitkeyerror", this.onKeySessionWebkitKeyError, !1),
            s.addEventListener("webkitkeymessage", this.onKeySessionWebkitKeyMessage, !1)
        }
        ,
        t.src = function(e) {
            var t = this
              , r = e.src;
            this.hasProtection(this.drmData) ? (this.video.addEventListener("webkitneedkey", this.onVideoWebkitNeedKey, !1),
            this.certificate ? this.video.src = r : this.fetchCertificate(function() {
                t.video.src = r
            })) : this.video.src = r
        }
        ,
        e
    }()
      , po = 0
      , mo = function(e) {
        function t(t, r, i) {
            var n = e.call(this) || this;
            if (!m(t))
                throw new Error("You must pass in an legal video element but not " + typeof t);
            return n.video = t,
            n.config = r,
            n.customConfig = i,
            n
        }
        cn(t, e),
        t.isSupport = function() {
            return !0
        }
        ;
        var r = t.prototype;
        return r.load = function(e, t, r, i) {
            var n = this;
            if (void 0 === t && (t = -1),
            void 0 === r && (r = ""),
            void 0 === i && (i = null),
            i && i["com.apple.fps.1_0"] ? this.fairplay = new lo({
                src: e,
                drmData: i
            },this) : (this.video.setAttribute("src", e),
            this.video.src = e),
            -1 != t) {
                var a = function() {
                    n.seek(t),
                    Ke(n.video, "canplaythrough", a, !0)
                };
                We(this.video, "canplaythrough", a, !0),
                this.seek(t)
            }
        }
        ,
        r.startLoad = function(e, t) {
            void 0 === t && (t = -1);
            var r = -1 != t ? t : this.video.currentTime || po;
            this.load(e, r),
            this.seek(r)
        }
        ,
        r.stopLoad = function() {
            po = this.video.currentTime,
            this.video.src = "",
            this.video.removeAttribute("src")
        }
        ,
        r.destroy = function() {
            m(this.video) && this.stopLoad(),
            e.prototype.removeAllListeners.call(this)
        }
        ,
        r.play = function() {
            return this.video.play()
        }
        ,
        r.pause = function() {
            return this.video.pause()
        }
        ,
        r.refresh = function() {
            this.video.src = this.config.src
        }
        ,
        r.getMetadata = function() {
            return {}
        }
        ,
        r.getSpeed = function() {
            return 0
        }
        ,
        r.getFps = function() {
            return 29.9
        }
        ,
        r.getBufferInfo = function() {}
        ,
        r.attachMedia = function() {}
        ,
        r.seek = function(e) {
            this.video.currentTime = e
        }
        ,
        r.preload = function(e, t, r) {}
        ,
        r.on = function(t, r) {
            e.prototype.on.call(this, t, r)
        }
        ,
        r.off = function(t, r) {
            e.prototype.off.call(this, t, r)
        }
        ,
        t
    }(Ve)
      , go = function() {
        function e(e) {
            this.browser = Qa.getParser(window.navigator.userAgent),
            this.initCommonData(e)
        }
        var t = e.prototype;
        return t.initCommonData = function(e) {
            var t = this.browser.getOS();
            this.commonData = {
                $device_id: e.did,
                $uuid: e.uuid,
                $time: 0,
                $app_version: "imgotv-" + e.web_version,
                $lib: "h5",
                $lib_version: e.version,
                $manufacturer: "",
                $model: "",
                $os: t.name || "",
                $os_version: t.version || "",
                $network_type: "",
                $channel: "pcweb",
                $terminal_id: "2",
                $project: "pcdn",
                filehash: "",
                $event_type: "mgds",
                $event_name: "flow",
                suuid: e.suuid,
                video_id: e.video_id,
                $video_definition: 0,
                datasource_suuid: Yt(),
                play_type: e.pno,
                idx: 0,
                player_suuid: Yt()
            }
        }
        ,
        t.changeDefinition = function(e) {
            this.commonData.$video_definition = e,
            this.commonData.player_suuid = Yt()
        }
        ,
        t.getData = function() {
            return this.commonData
        }
        ,
        t.report = function() {
            this.commonData.idx++
        }
        ,
        e
    }()
      , vo = function() {
        function e(e, t) {
            this._isDrm = !1,
            this.config = e,
            this.report = t,
            this.initFlowData(),
            "batch" === this.config.request_type && this.strtHeartBeat()
        }
        var t = e.prototype;
        return t.initFlowData = function() {
            this.flowData = {
                lob: "",
                video_bitrate: 0,
                cdn_flow: 0,
                peer_flow: 0,
                pcdn_flow: 0,
                video_duration: 0,
                encode_info: "",
                file_wide: 0,
                file_high: 0,
                biz_type: "",
                request_type: this.getRequestType(),
                content: []
            }
        }
        ,
        t.strtHeartBeat = function() {
            var e = this;
            clearInterval(this.headBeatInterval),
            this.headBeatInterval = setInterval(function() {
                e.sendReport()
            }, 3e5)
        }
        ,
        t.changeDefinition = function(e) {
            if (e) {
                var t = e.totalduration
                  , r = e.m3u8
                  , i = e.url
                  , n = e.fragments;
                this.flowData.video_duration = t;
                var a = this.parseM3u8(r);
                this.flowData.encode_info = this.makeEncodeInfo(a),
                this.flowData.file_wide = Number(a.width),
                this.flowData.file_high = Number(a.height);
                var o = this.parseUrl(i);
                this.flowData.video_bitrate = o.bit_rate,
                this.flowData.biz_type = this.makeBizType(),
                this.flowData.request_type = this.getRequestType(),
                this.fragments = n
            }
        }
        ,
        t.getRequestType = function() {
            return ["unknow", "batch", "fragment"].indexOf(this.config.request_type)
        }
        ,
        t.makeBizType = function() {
            return "v" + this.config.version + "ds1" + (this._isDrm ? "_drm1" : "") + "_vtp1"
        }
        ,
        t.parseUrl = function(e) {
            for (var t = e.split("/"), r = t[2], i = t[7].split("_"), n = Number(i[4]), a = t[8].split("_")[0], o = {}, s = 0, u = e.split("?")[1].split("&"); s < u.length; s++) {
                var h = u[s].split("=")
                  , d = h[0]
                  , f = h[1];
                o[d] = f
            }
            return {
                bit_rate: n,
                host: r,
                md5: a,
                querys: o
            }
        }
        ,
        t.makeEncodeInfo = function(e) {
            var t = e.vcodec
              , r = e.acodec
              , i = e.parm
              , n = e.format;
            return [e.version, t, r, i, n].join("|")
        }
        ,
        t.parseM3u8 = function(e) {
            for (var t = "", r = "", i = "", n = "", a = "", o = "", s = "", u = 20, h = 0, d = e.split("#"); h < d.length; h++) {
                var f = d[h].split(":")
                  , c = f[0]
                  , l = f[1];
                switch (l && -1 !== l.indexOf("\n") && (l = l.substring(0, l.length - 1)),
                c) {
                case "EXT-MGTV-X-VCODEC":
                    t = l;
                    break;
                case "EXT-MGTV-X-ACODEC":
                    r = l;
                    break;
                case "EXT-MGTV-VIDEO-WIDTH":
                    i = l;
                    break;
                case "EXT-MGTV-VIDEO-HEIGHT":
                    n = l;
                    break;
                case "EXT-MGTV-X-PARM":
                    a = l;
                    break;
                case "EXT-MGTV-X-FORMAT":
                    o = l;
                    break;
                case "EXT-MGTV-X-VERSION":
                    s = l
                }
                if (--u <= 0)
                    break
            }
            return {
                vcodec: t,
                acodec: r,
                width: i,
                height: n,
                parm: a,
                format: o,
                version: s
            }
        }
        ,
        t.fragmentLoaded = function(e, t) {
            "hls" === t ? this.handHlsFragmentLoaed(e) : "dash" === t ? this.handDashFragementLoaded(e) : "p2p" === t && this.handP2PFragmentLoaded(e),
            "fragment" === this.config.request_type && this.sendReport()
        }
        ,
        t.handHlsFragmentLoaed = function(e) {
            var t = e.frag
              , r = e.payload
              , i = t.sn
              , n = t.url
              , a = r.byteLength
              , o = this.parseUrl(n)
              , s = this.convertSourceChannel("cdn", 0, o.host)
              , u = this.getSourceInfo("cdn", t, o.host)
              , h = a
              , d = i
              , f = this.fragments[i].duration
              , c = a
              , l = o.md5
              , p = this.config.p2p ? 3 : 1
              , m = o.querys.ftc.split("_")
              , g = {
                $source_channel: s,
                $source: u,
                dns_time: 0,
                part_size: h,
                flow_state: 1,
                code: "",
                seq: d,
                duration: f,
                total_size: c,
                value: l,
                request_mode: p,
                tag: m[m.length - 1],
                cache_policy: 0
            };
            this.flowData.content.push(g)
        }
        ,
        t.handP2PFragmentLoaded = function(e) {
            var t = e.method
              , r = void 0 === t ? "cdn" : t
              , i = e.bytesLoaded
              , n = void 0 === i ? 0 : i
              , a = e.peer_type
              , o = void 0 === a ? 0 : a
              , s = e.sn
              , u = e.url;
            n = isNaN(n) ? 0 : n,
            "cdn" === r ? this.flowData.cdn_flow += n : "p2p" === r ? this.flowData.peer_flow += n : ("pcdn" === r || o > 100) && (this.flowData.pcdn_flow += n);
            var h = this.parseUrl(u)
              , d = this.convertSourceChannel(r, o, h.host)
              , f = this.getSourceInfo(r, e, h.host)
              , c = n
              , l = s
              , p = this.fragments[s].duration
              , m = n
              , g = h.md5
              , v = h.querys.ftc.split("_")
              , y = {
                $source_channel: d,
                $source: f,
                dns_time: 0,
                part_size: c,
                flow_state: 1,
                code: "",
                seq: l,
                duration: p,
                total_size: m,
                value: g,
                request_mode: 3,
                tag: v[v.length - 1],
                cache_policy: 0
            };
            this.flowData.content.push(y)
        }
        ,
        t.getSourceInfo = function(e, t, r) {
            var i = t.peer_type
              , n = void 0 === i ? 0 : i
              , a = t.peer_id;
            return "cdn" === e ? r : "p2p" === e || "pcdn" === e || n > 100 ? n + "_" + a : ""
        }
        ,
        t.handDashFragementLoaded = function(e) {
            var t = e.success || !0
              , r = e.request
              , i = r.bytesLoaded
              , n = void 0 === i ? 0 : i
              , a = r.bytesTotal
              , o = void 0 === a ? 0 : a
              , s = r.url
              , u = r.index
              , h = r.duration
              , d = void 0 === h ? 0 : h;
            n = isNaN(n) ? 0 : n,
            o = isNaN(o) ? 0 : o,
            d = isNaN(d) ? 0 : d,
            this.flowData.cdn_flow += n;
            try {
                var f = e.request.mediaInfo.streamInfo;
                this.flowData.video_duration = isNaN(f.duration) ? this.flowData.video_duration : f.duration;
                var c = e.request.mediaInfo.bitrateList[0]
                  , l = c.bandwidth
                  , p = c.width
                  , m = c.height;
                this.flowData.file_wide = isNaN(p) ? this.flowData.file_wide : p,
                this.flowData.file_high = isNaN(m) ? this.flowData.file_high : m,
                this.flowData.video_bitrate = isNaN(l) ? this.flowData.video_bitrate : l
            } catch (e) {}
            var g = this.parseUrl(s)
              , v = this.isIPAddress(g.host) ? "mgcdn" : "cdn"
              , y = g.host
              , b = n || 0
              , w = t ? 1 : 0
              , _ = u || 0
              , S = o || 0
              , E = g.md5
              , A = g.querys.ftc
              , R = A && A.split("_") || ""
              , k = {
                $source_channel: v,
                $source: y,
                dns_time: 0,
                part_size: b,
                flow_state: w,
                code: "",
                seq: _,
                duration: d,
                total_size: S,
                value: E,
                request_mode: 1,
                tag: R[R.length - 1] || "",
                cache_policy: 0
            };
            this.flowData.content.push(k)
        }
        ,
        Object.defineProperty(t, "isDrm", {
            set: function(e) {
                this._isDrm = e
            },
            enumerable: !0,
            configurable: !0
        }),
        t.convertSourceChannel = function(e, t, r) {
            return "pcdn" === e || t > 100 ? "wpcdn" : "cdn" === e && this.isIPAddress(r) ? "mgcdn" : e
        }
        ,
        t.isIPAddress = function(e) {
            var t = e.split(".");
            if (4 !== t.length)
                return !1;
            for (var r = 0, i = t; r < i.length; r++) {
                var n = i[r];
                if (isNaN(parseInt(n)))
                    return !1
            }
            return !0
        }
        ,
        t.sendReport = function() {
            this.report.sendReport(this.flowData),
            this.flowData.cdn_flow = 0,
            this.flowData.peer_flow = 0,
            this.flowData.pcdn_flow = 0,
            this.flowData.content = []
        }
        ,
        t.destroy = function() {
            clearInterval(this.headBeatInterval)
        }
        ,
        e
    }()
      , yo = function() {
        function e(e) {
            this.commonData = new go(e),
            this.flow = new vo(e,this)
        }
        var t = e.prototype;
        return t.changeDefinition = function(e, t) {
            this.commonData.changeDefinition(e),
            this.flow.changeDefinition(t)
        }
        ,
        t.fragmentLoaded = function(e, t) {
            this.flow.fragmentLoaded(e, t)
        }
        ,
        t.sendReport = function(e) {
            var t = Date.now()
              , r = Object.assign({}, this.commonData.getData(), e, {
                $time: t
            });
            try {
                fetch("https://pdata.log.mgtv.com/s.gif", {
                    method: "POST",
                    mode: "cors",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: "data=" + encodeURIComponent(JSON.stringify(r))
                })
            } catch (e) {}
            this.commonData.report()
        }
        ,
        Object.defineProperty(t, "isDrm", {
            set: function(e) {
                this.flow.isDrm = e
            },
            enumerable: !0,
            configurable: !0
        }),
        t.destroy = function() {
            this.flow.destroy()
        }
        ,
        e
    }()
      , bo = "mango-kernel"
      , wo = {
        flv: ".flv",
        hls: ".m3u8",
        flash: ".m3u8",
        dash: ".mpd",
        mp4: ".mp4"
    }
      , _o = ["mediaInfo", "heartbeat", "hlsSegmentLoaded", "hlsBufferFull", "hlsBufferEmpty", "hlsRecoverStreamError", "hlsStreamError", "hlsDispatcherLoaded", "hlsDispatcherError", "hlsLevelSwitching", "hlsLevelSwitched", "hlsLevelLoaded", "hlsManifestParsed", "hlsFragLoaded", "dashBufferEmpty", "dashBufferFull", "dashStreamError", "dashRecoverStreamError", "dashLicenseRequest", "dash-fragmentLoadingCompleted", "dash-fragmentLoadingAbandoned", "dasg-manifestLoaded", "fairplayLicenseRequest", "nativeStreamError", "flvStreamError", "error", "stats", "p2p-error", "segment-loaded", "p2p-report", "peers", "flashInitFail", "formatChange"]
      , So = function(e) {
        function t(t, r) {
            var i = e.call(this) || this;
            if (i.VERSION = Na,
            !m(t))
                throw new Error("You must pass in an video element to the mango-kernel");
            return i.config = w({}, to, r),
            r.isLive || (i.report = new yo(i.convertReportConfig(r))),
            i.videoElement = t,
            i.initVideoKernel(),
            i.bindEvents(i.videoKernel),
            i.createDebugInfo(),
            function(e) {
                ln(this, void 0, void 0, function() {
                    var t, r, i, n, a, o, s, u, h, d, f, c, l;
                    return pn(this, function(p) {
                        switch (p.label) {
                        case 0:
                            t = e.lobparam,
                            r = (void 0 === t ? {} : t).did,
                            i = void 0 === r ? "" : r,
                            n = Qa.getParser(window.navigator.userAgent),
                            a = {
                                osType: "pcweb",
                                apiVersion: "v2",
                                appVersion: Na,
                                did: i,
                                osVersion: n.getBrowserVersion(),
                                mod: n.getOSName(),
                                cputy: n.getBrowserName()
                            },
                            p.label = 1;
                        case 1:
                            for (p.trys.push([1, 4, , 5]),
                            o = [],
                            s = 0,
                            u = Object.entries(a); s < u.length; s++)
                                h = u[s],
                                d = h[0],
                                f = h[1],
                                o.push(d + "=" + f);
                            return c = Ja + "?" + o.join("&"),
                            [4, fetch(c)];
                        case 2:
                            return [4, p.sent().json()];
                        case 3:
                            return (l = p.sent()) && 200 == l.code || ir.log("fetch config/play fail.no data"),
                            Zt.set(eo, l.data),
                            [3, 5];
                        case 4:
                            return p.sent(),
                            ir.log("fetch config/play fail."),
                            [3, 5];
                        case 5:
                            return [2]
                        }
                    })
                })
            }(r),
            i
        }
        cn(t, e);
        var r = t.prototype;
        return r.createDebugInfo = function() {
            var e = window;
            e.PLAYER_DEBUG || (e.PLAYER_DEBUG = {
                player: this,
                log: {
                    version: this.VERSION
                }
            })
        }
        ,
        r.convertReportConfig = function(e) {
            var t = e.lobparam
              , r = e.VIDEOINFO
              , i = e.isIpad
              , n = e.iscdntest
              , a = e.p2pSwitch
              , o = void 0 === a || a;
            return {
                did: t.did,
                uuid: t.uuid,
                suuid: t.suuid,
                video_id: r.vid,
                version: this.VERSION,
                web_version: t.wver,
                pno: i ? "1121" : "1030",
                request_type: n ? "fragment" : "batch",
                p2p: o
            }
        }
        ,
        r.destroy = function() {
            this.bindEvents(this.videoKernel, !0),
            this.videoKernel.destroy(),
            this.report && this.report.destroy(),
            e.prototype.removeAllListeners.call(this)
        }
        ,
        r.initVideoKernel = function() {
            var e = this.config
              , t = this.chooseBox(e);
            this.box = t;
            var r = this.chooseVideoKernel(this.box, e.preset);
            if (!u(r))
                throw new Error("We can't find video kernel for " + t + ". Please check your config and make sure it's installed or provided");
            var i = e.presetConfig[this.box];
            i && w(e, i),
            this.videoKernel = new r(this.videoElement,e,i)
        }
        ,
        r.chooseBox = function(e) {
            var t = e.src
              , r = e.box;
            if (f(r) && r)
                return r;
            t = t.toLowerCase();
            for (var i = 0, n = Object.entries(wo); i < n.length; i++) {
                var a = n[i]
                  , o = a[0]
                  , s = a[1];
                if (t.indexOf(s) > -1)
                    return o
            }
            return "native"
        }
        ,
        r.playNext = function(e) {
            return this.videoKernel.playNext ? this.videoKernel.playNext(e) : Promise.reject("kernal not support preload.")
        }
        ,
        r.chooseVideoKernel = function(e, t) {
            switch (e) {
            case "flash":
                return no;
            case "native":
                return mo;
            case "mp4":
                return this.getMp4Kernel(t.mp4);
            case "flv":
            case "dash":
            case "hls":
            case "mixed":
                return t[e];
            default:
                throw new Error("We currently do not support box " + e)
            }
        }
        ,
        r.getMp4Kernel = function(e) {
            var t = e && u(e.isSupport);
            return t && e.isSupport() ? e : (t && this.warnLog("mp4 decode is not support in this browser, we will switch to the native video kernel"),
            this.box = "native",
            mo)
        }
        ,
        r.attachMedia = function() {
            this.videoKernel.attachMedia()
        }
        ,
        r.load = function(e, t, r, i, n, a) {
            void 0 === e && (e = this.config.src),
            void 0 === t && (t = -1),
            void 0 === n && (n = -1),
            void 0 === a && (a = ""),
            this.config.src = e,
            this.videoKernel.load(e, t, r, i, n, a),
            this.report && (this.report.isDrm = Boolean(i))
        }
        ,
        r.preload = function(e, t, r) {
            void 0 === e && (e = this.config.src),
            void 0 === t && (t = -1),
            this.config.src = e,
            this.videoKernel.preload(e, t, r)
        }
        ,
        r.loadLevel = function(e) {
            if (!u(this.videoKernel.loadLevel))
                throw new Error("This video kernel do not support loadLevel");
            return this.videoKernel.loadLevel && this.videoKernel.loadLevel(e)
        }
        ,
        r.startLoad = function(e) {
            if (void 0 === e && (e = -1),
            !u(this.videoKernel.startLoad))
                throw new Error("This video kernel do not support startLoad");
            this.videoKernel.startLoad && this.videoKernel.startLoad(this.config.src, e)
        }
        ,
        r.stopLoad = function() {
            u(this.videoKernel.stopLoad) && this.videoKernel.stopLoad()
        }
        ,
        r.play = function() {
            return this.videoKernel.play()
        }
        ,
        r.pause = function() {
            this.videoKernel.pause()
        }
        ,
        Object.defineProperty(r, "currentTime", {
            get: function() {
                return this.videoKernel.currentTime || this.videoElement instanceof HTMLVideoElement && this.videoElement.currentTime || 0
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "metadata", {
            get: function() {
                return this.videoKernel.getMetadata()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "downloadSpeed", {
            get: function() {
                return this.videoKernel.getSpeed()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "fps", {
            get: function() {
                return this.videoKernel.getFps()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "bufferInfo", {
            get: function() {
                return this.videoKernel.getBufferInfo()
            },
            enumerable: !0,
            configurable: !0
        }),
        Object.defineProperty(r, "stats", {
            get: function() {
                return "hls" === this.box ? this.videoKernel.stats : null
            },
            enumerable: !0,
            configurable: !0
        }),
        r.seek = function(e) {
            e = d(e) ? e : ~~e,
            d(e) ? this.videoKernel.seek(e) : this.errorLog("When you try to seek, you must offer us a number, but not " + typeof e)
        }
        ,
        r.refresh = function() {
            this.videoKernel.refresh()
        }
        ,
        r.on = function(e, t) {
            this.videoKernel.on(e, t)
        }
        ,
        r.off = function(e, t) {
            this.videoKernel.off(e, t)
        }
        ,
        r.emit = function(t, r) {
            e.prototype.emit.call(this, t, r)
        }
        ,
        r.errorLog = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            return this.emit("error", new Error(e[0])),
            ir.error.apply(ir, [bo].concat(e))
        }
        ,
        r.warnLog = function() {
            for (var e = [], t = 0; t < arguments.length; t++)
                e[t] = arguments[t];
            return ir.warn.apply(ir, [bo].concat(e))
        }
        ,
        r.handleEvent = function(e) {
            var t = e.type
              , r = e.data;
            if (this.report) {
                var i = this.config.p2pSwitch;
                switch (t) {
                case "hlsFragLoaded":
                    i || this.report.fragmentLoaded(r, "hls");
                    break;
                case "segment-loaded":
                    i && this.report.fragmentLoaded(r, "p2p");
                    break;
                case "hlsLevelLoaded":
                    this.report.changeDefinition(r.level, r.details);
                    break;
                case "dash-fragmentLoadingCompleted":
                    this.report.fragmentLoaded(r, "dash");
                    break;
                case "dash-fragmentLoadingAbandoned":
                    r.success = !1,
                    this.report.fragmentLoaded(r, "dash")
                }
                this.emit(t, r)
            }
        }
        ,
        r.bindEvents = function(e, t) {
            var r = this;
            void 0 === t && (t = !1),
            _o.forEach(function(i) {
                return e[t ? "off" : "on"](i, r.handleEvent.bind(r))
            })
        }
        ,
        r.getCodecFormatConfig = function() {
            var e = Fa.isSupport()
              , t = this.getConfigPlayOpen()
              , r = []
              , i = e && t && this.getAutoChangeFormatLog() < 3 ? 1 : 2;
            return r.push({
                name: "auto",
                label: "自动",
                id: 0
            }),
            r.push({
                name: "h264",
                label: "AVC",
                id: 1
            }),
            r.push({
                name: "h265",
                label: "HEVC",
                id: 2
            }),
            {
                codecs: r,
                default_id: i
            }
        }
        ,
        r.getAutoChangeFormatLog = function() {
            return Number(Zt.get("mango-auto-h264")) || 0
        }
        ,
        r.getConfigPlayOpen = function() {
            var e = Zt.get("mango-config-play");
            if (e) {
                var t = e.addrinfo_type[0];
                return "0" === t ? ro : "1" === t
            }
            return ro
        }
        ,
        t
    }(Ve);
    e.KernelDash = _r,
    e.KernelFlv = oi,
    e.KernelHls = bi,
    e.KernelMP4 = dn,
    e.KernelMixed = Fa,
    e.MangoKernel = So,
    e.kernelEvents = _o,
    Object.defineProperty(e, "__esModule", {
        value: !0
    })
});
/* 6a79b6f5dc222656695d29a05201138a */
